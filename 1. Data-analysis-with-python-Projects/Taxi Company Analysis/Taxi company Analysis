{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ArGFIa9lv10d"},"outputs":[],"source":["# importing libraries for data manipulation\n","import pandas as pd\n","import numpy as np\n","# importing libraries for data visualization\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":["#Loading Dataset\n"],"metadata":{"id":"YyBV3n3TxdSK"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zk2uc6CV25nA","executionInfo":{"status":"ok","timestamp":1743181975051,"user_tz":-300,"elapsed":25616,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"61d8268d-19a4-4e2a-9d99-7ab9ba0e816d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# result1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/taxi_project/result_01.csv')\n","# result4 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/taxi_project/result_04.csv')\n","# result7 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/taxi_project/result_07.csv')"],"metadata":{"id":"Eq1LHHM53-Sd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CLIENTS/12. Sarah/Data Analysis Project/Taxi Company Analysis/moved_project_sql_result_01.csv')\n","result4 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CLIENTS/12. Sarah/Data Analysis Project/Taxi Company Analysis/moved_project_sql_result_04.csv')\n","result7 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CLIENTS/12. Sarah/Data Analysis Project/Taxi Company Analysis/moved_project_sql_result_07.csv')"],"metadata":{"id":"yXboPGQ7xuTa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Data Overview#\n","\n"],"metadata":{"id":"PdX5yIFvynPj"}},{"cell_type":"markdown","source":["## Result 1 Dataframe Assessing and cleaning"],"metadata":{"id":"AetupkhKXYWG"}},{"cell_type":"markdown","source":["##Data Assessment result1"],"metadata":{"id":"oRpCuz55u-Lw"}},{"cell_type":"code","source":["result1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_M84BtUcvbWh","executionInfo":{"status":"ok","timestamp":1743182046043,"user_tz":-300,"elapsed":81,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"29260cc6-8270-48ee-a10c-3933c5141088"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      company_name  trips_amount\n","0                        Flash Cab         19558\n","1        Taxi Affiliation Services         11422\n","2                 Medallion Leasin         10367\n","3                       Yellow Cab          9888\n","4  Taxi Affiliation Service Yellow          9299"],"text/html":["\n","  <div id=\"df-b66e825e-4469-4f3b-91c8-6e7fd112e092\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>company_name</th>\n","      <th>trips_amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Flash Cab</td>\n","      <td>19558</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Taxi Affiliation Services</td>\n","      <td>11422</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Medallion Leasin</td>\n","      <td>10367</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Yellow Cab</td>\n","      <td>9888</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Taxi Affiliation Service Yellow</td>\n","      <td>9299</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b66e825e-4469-4f3b-91c8-6e7fd112e092')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b66e825e-4469-4f3b-91c8-6e7fd112e092 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b66e825e-4469-4f3b-91c8-6e7fd112e092');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d447d79a-3773-41cc-8b62-c049c99600e4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d447d79a-3773-41cc-8b62-c049c99600e4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d447d79a-3773-41cc-8b62-c049c99600e4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result1","summary":"{\n  \"name\": \"result1\",\n  \"rows\": 64,\n  \"fields\": [\n    {\n      \"column\": \"company_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"3721 - Santamaria Express, Alvaro Santamaria\",\n          \"5062 - 34841 Sam Mestas\",\n          \"Flash Cab\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trips_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3812,\n        \"min\": 2,\n        \"max\": 19558,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          19558,\n          9181,\n          146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["result1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DRzhzTs5vixM","executionInfo":{"status":"ok","timestamp":1743182048395,"user_tz":-300,"elapsed":7,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"942313d0-08cf-42c8-96fa-c5284f3738bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64, 2)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["result1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZNGhMVV8u9BM","executionInfo":{"status":"ok","timestamp":1743182061542,"user_tz":-300,"elapsed":46,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"92568a46-6c51-48e3-c9fa-c3aebfbb9081"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 64 entries, 0 to 63\n","Data columns (total 2 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   company_name  64 non-null     object\n"," 1   trips_amount  64 non-null     int64 \n","dtypes: int64(1), object(1)\n","memory usage: 1.1+ KB\n"]}]},{"cell_type":"code","source":["result1.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CzEUjGQSxY71","executionInfo":{"status":"ok","timestamp":1743182067725,"user_tz":-300,"elapsed":3,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"25f4e55e-7449-4a3f-ed31-54eaabce1a59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["result1.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":146},"id":"0qyORKIwxzWC","executionInfo":{"status":"ok","timestamp":1743182072842,"user_tz":-300,"elapsed":23,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"dc91fd9f-db06-4047-fddb-9b9524329de6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["company_name    0\n","trips_amount    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>company_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>trips_amount</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["result1.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"wUM8sfXZxwoE","executionInfo":{"status":"ok","timestamp":1743182122573,"user_tz":-300,"elapsed":62,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"4d885de7-8584-4dc3-8fe9-303836a847d6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       trips_amount\n","count     64.000000\n","mean    2145.484375\n","std     3812.310186\n","min        2.000000\n","25%       20.750000\n","50%      178.500000\n","75%     2106.500000\n","max    19558.000000"],"text/html":["\n","  <div id=\"df-9117c80e-eb51-4187-95fb-84e380a65c41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>trips_amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>64.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2145.484375</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3812.310186</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>20.750000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>178.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2106.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>19558.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9117c80e-eb51-4187-95fb-84e380a65c41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9117c80e-eb51-4187-95fb-84e380a65c41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9117c80e-eb51-4187-95fb-84e380a65c41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6033971d-0880-4d54-977e-54484b9b2e5f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6033971d-0880-4d54-977e-54484b9b2e5f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6033971d-0880-4d54-977e-54484b9b2e5f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"result1\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"trips_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6643.057799739349,\n        \"min\": 2.0,\n        \"max\": 19558.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2145.484375,\n          178.5,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["result1['trips_amount'].median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIUZlmyb2QD2","executionInfo":{"status":"ok","timestamp":1743182172690,"user_tz":-300,"elapsed":18,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f22ae874-3904-45e6-e559-3637131ff420"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["178.5"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["#visualising outliers\n","sns.boxplot(x=result1['trips_amount'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"-JvOpGnNiBL9","executionInfo":{"status":"ok","timestamp":1743182176531,"user_tz":-300,"elapsed":236,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a323b0be-e006-42ec-f017-e1479e211663"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='trips_amount'>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# for unique company name count\n","unique_company_name_count_result1 = result1['company_name'].nunique()\n","display(\"Number of unique companies result1:\", unique_company_name_count_result1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"CoTDNDQDyQKa","executionInfo":{"status":"ok","timestamp":1743182259473,"user_tz":-300,"elapsed":26,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"637f8e2a-7371-4579-bc87-8de750557954"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["'Number of unique companies result1:'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["64"]},"metadata":{}}]},{"cell_type":"markdown","source":["**Feature information in Result1**\n","- Company Name is basically taxi company\n","- Number of rides for the taxi company in November\n","- Data types are correct\n","- no null values\n","- no duplicated entries\n","- median of ca 178 while mean is ca 2145. There are outliers in the data set. Thats why we will prefer median as centrality of data"],"metadata":{"id":"RfhIloZ7zAdQ"}},{"cell_type":"markdown","source":["## Result 4 Dataframe Assessing and cleaning"],"metadata":{"id":"V0j2VP1wZiqz"}},{"cell_type":"code","source":["result4.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"VXADUvaR3ExL","executionInfo":{"status":"ok","timestamp":1743182460722,"user_tz":-300,"elapsed":72,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"c49742f3-447d-4f08-ef66-266f1fc108fa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  dropoff_location_name  average_trips\n","0                  Loop   10727.466667\n","1           River North    9523.666667\n","2         Streeterville    6664.666667\n","3             West Loop    5163.666667\n","4                O'Hare    2546.900000\n","5             Lake View    2420.966667\n","6            Grant Park    2068.533333\n","7         Museum Campus    1510.000000\n","8            Gold Coast    1364.233333\n","9    Sheffield & DePaul    1259.766667"],"text/html":["\n","  <div id=\"df-0b028294-4801-4a37-90ef-c4b8b8f35311\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dropoff_location_name</th>\n","      <th>average_trips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Loop</td>\n","      <td>10727.466667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>River North</td>\n","      <td>9523.666667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Streeterville</td>\n","      <td>6664.666667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>West Loop</td>\n","      <td>5163.666667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O'Hare</td>\n","      <td>2546.900000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Lake View</td>\n","      <td>2420.966667</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Grant Park</td>\n","      <td>2068.533333</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Museum Campus</td>\n","      <td>1510.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Gold Coast</td>\n","      <td>1364.233333</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Sheffield &amp; DePaul</td>\n","      <td>1259.766667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b028294-4801-4a37-90ef-c4b8b8f35311')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b028294-4801-4a37-90ef-c4b8b8f35311 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b028294-4801-4a37-90ef-c4b8b8f35311');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3677cb09-d6fb-4a08-8143-81ef9ace3d9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3677cb09-d6fb-4a08-8143-81ef9ace3d9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3677cb09-d6fb-4a08-8143-81ef9ace3d9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result4","summary":"{\n  \"name\": \"result4\",\n  \"rows\": 94,\n  \"fields\": [\n    {\n      \"column\": \"dropoff_location_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"Bucktown\",\n          \"Lincoln Square\",\n          \"Dunning\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_trips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1714.591097941434,\n        \"min\": 1.8,\n        \"max\": 10727.466666666667,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          74.3,\n          356.7333333333333,\n          30.166666666666668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["result4.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PmlE9TZL3bLk","executionInfo":{"status":"ok","timestamp":1743182462972,"user_tz":-300,"elapsed":10,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"8bc503d8-0d13-4739-fef9-8911ba4689f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(94, 2)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["result4.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ohkxkQrM3jSU","executionInfo":{"status":"ok","timestamp":1743182464611,"user_tz":-300,"elapsed":18,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"6235e38d-144e-44bc-887e-ebe967717d7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 94 entries, 0 to 93\n","Data columns (total 2 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   dropoff_location_name  94 non-null     object \n"," 1   average_trips          94 non-null     float64\n","dtypes: float64(1), object(1)\n","memory usage: 1.6+ KB\n"]}]},{"cell_type":"code","source":["result4['average_trips'] = result4['average_trips'].astype(int)\n","result4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"SGvJ2QMWxdkc","executionInfo":{"status":"ok","timestamp":1743182513717,"user_tz":-300,"elapsed":113,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"72590a63-8ddc-43b8-b040-daec88a8b2d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   dropoff_location_name  average_trips\n","0                   Loop          10727\n","1            River North           9523\n","2          Streeterville           6664\n","3              West Loop           5163\n","4                 O'Hare           2546\n","..                   ...            ...\n","89       Mount Greenwood              3\n","90             Hegewisch              3\n","91              Burnside              2\n","92             East Side              1\n","93             Riverdale              1\n","\n","[94 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-8e194cf0-3426-49f1-82ff-5959d1b428a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dropoff_location_name</th>\n","      <th>average_trips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Loop</td>\n","      <td>10727</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>River North</td>\n","      <td>9523</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Streeterville</td>\n","      <td>6664</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>West Loop</td>\n","      <td>5163</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O'Hare</td>\n","      <td>2546</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>Mount Greenwood</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>Hegewisch</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>Burnside</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>East Side</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>Riverdale</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>94 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e194cf0-3426-49f1-82ff-5959d1b428a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e194cf0-3426-49f1-82ff-5959d1b428a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e194cf0-3426-49f1-82ff-5959d1b428a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff9cfb47-5955-4274-87a0-8620d07582ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff9cfb47-5955-4274-87a0-8620d07582ae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff9cfb47-5955-4274-87a0-8620d07582ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2412e2ac-f1b7-41c2-abb2-b6c7f1a4987f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result4')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2412e2ac-f1b7-41c2-abb2-b6c7f1a4987f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result4');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result4","summary":"{\n  \"name\": \"result4\",\n  \"rows\": 94,\n  \"fields\": [\n    {\n      \"column\": \"dropoff_location_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"Bucktown\",\n          \"Lincoln Square\",\n          \"Dunning\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_trips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1714,\n        \"min\": 1,\n        \"max\": 10727,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          2546,\n          12,\n          516\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["result4['dropoff_location_name'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZCEr3vtMx1Uw","executionInfo":{"status":"ok","timestamp":1743182598123,"user_tz":-300,"elapsed":8,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"b69c715b-69ed-4ca2-fbf7-9f2755b2f080"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["94"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["result4.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4FNWImtp3nrT","executionInfo":{"status":"ok","timestamp":1743182529684,"user_tz":-300,"elapsed":16,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"565ddb4e-da87-4b5c-84a6-5b29ce402dbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["result4.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":146},"id":"U-cvkhYR33KQ","executionInfo":{"status":"ok","timestamp":1743182543520,"user_tz":-300,"elapsed":57,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1494fd53-1493-43fe-a653-3a5b25786089"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dropoff_location_name    0\n","average_trips            0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>dropoff_location_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>average_trips</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["result4.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"gtphOK693_Mo","executionInfo":{"status":"ok","timestamp":1743182610171,"user_tz":-300,"elapsed":59,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"af50c8d4-2f8c-4fa8-a15e-b1d71b59c5fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       average_trips\n","count      94.000000\n","mean      599.478723\n","std      1714.555974\n","min         1.000000\n","25%        14.000000\n","50%        51.500000\n","75%       298.750000\n","max     10727.000000"],"text/html":["\n","  <div id=\"df-68973d7c-99a6-46c8-aa52-9e21acc91cc9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>average_trips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>94.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>599.478723</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1714.555974</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>51.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>298.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10727.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68973d7c-99a6-46c8-aa52-9e21acc91cc9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-68973d7c-99a6-46c8-aa52-9e21acc91cc9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-68973d7c-99a6-46c8-aa52-9e21acc91cc9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85f233de-b62b-4c00-9c09-fd9c512dab37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85f233de-b62b-4c00-9c09-fd9c512dab37')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85f233de-b62b-4c00-9c09-fd9c512dab37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"result4\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"average_trips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3697.2254438085706,\n        \"min\": 1.0,\n        \"max\": 10727.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          599.4787234042553,\n          51.5,\n          94.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["result4['average_trips'].median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rp4f9J5e4Bt0","executionInfo":{"status":"ok","timestamp":1743182630655,"user_tz":-300,"elapsed":17,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a5fb2866-b72a-4477-e92a-d2383f045012"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["51.5"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#visualising outliers\n","sns.boxplot(x=result4['average_trips'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"hVcSJ5ALitpF","executionInfo":{"status":"ok","timestamp":1743182640635,"user_tz":-300,"elapsed":141,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"86373d4d-a24c-45c7-df21-e9e36d41dafd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='average_trips'>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# for unique drop off location count\n","unique_drop_off_loc_count_result4 = result4['dropoff_location_name'].nunique()\n","display(\"Number of unique drop off locations result 4:\", unique_drop_off_loc_count_result4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"Y7kn15JJ4Yo8","executionInfo":{"status":"ok","timestamp":1743182657671,"user_tz":-300,"elapsed":14,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"fab133fd-2bfc-479a-acda-3a8ba8459e84"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["'Number of unique drop off locations result 4:'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["94"]},"metadata":{}}]},{"cell_type":"markdown","source":["**Feature information in Result4**\n","\n","- dropoff_location_name is the chicago neighbourhood where the ride ended.\n","- average_trips is the avg no of rides that ended in each neighbourhood\n","- median of av trips to locations is 52 while mean is 599 and max is 10727. Probably there are outliers in the data set because some locations are extremely popular in comparison to others"],"metadata":{"id":"fZe21w7V2XZV"}},{"cell_type":"markdown","source":["## Result 7 Dataframe Assessing and Cleaning"],"metadata":{"id":"L58PvEo9a7DE"}},{"cell_type":"code","source":["result7.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"r8cACWQ03XUu","executionInfo":{"status":"ok","timestamp":1743182790171,"user_tz":-300,"elapsed":96,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"f4900eb1-6d67-4903-96af-66390e6dcf42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              start_ts weather_conditions  duration_seconds\n","0  2017-11-25 16:00:00               Good            2410.0\n","1  2017-11-25 14:00:00               Good            1920.0\n","2  2017-11-25 12:00:00               Good            1543.0\n","3  2017-11-04 10:00:00               Good            2512.0\n","4  2017-11-11 07:00:00               Good            1440.0"],"text/html":["\n","  <div id=\"df-eece6f6e-6def-4b5d-95fd-5d74b4b4c909\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eece6f6e-6def-4b5d-95fd-5d74b4b4c909')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eece6f6e-6def-4b5d-95fd-5d74b4b4c909 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eece6f6e-6def-4b5d-95fd-5d74b4b4c909');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-17cdd83f-609f-4c75-a3ad-3b5cef9e7f98\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17cdd83f-609f-4c75-a3ad-3b5cef9e7f98')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-17cdd83f-609f-4c75-a3ad-3b5cef9e7f98 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 1068,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 769.4611253993992,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["result7.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_C5ifmhn42Oa","executionInfo":{"status":"ok","timestamp":1743182885796,"user_tz":-300,"elapsed":13,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"0c8e5d19-7877-4791-cc1f-94a28c44c8f9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1068, 3)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["result7['weather_conditions'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ZlqcuzLBhXM","executionInfo":{"status":"ok","timestamp":1743182899232,"user_tz":-300,"elapsed":40,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"74cb34da-eafb-4ad5-c31e-c3f68e52bc7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["result7['weather_conditions'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JmsuU4B045rm","executionInfo":{"status":"ok","timestamp":1743182902232,"user_tz":-300,"elapsed":18,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a9f6f1f2-8575-4045-f868-8d7c33109fe1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Good', 'Bad'], dtype=object)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["result7.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_MPV6XOKBghB","executionInfo":{"status":"ok","timestamp":1743182916920,"user_tz":-300,"elapsed":12,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"6d44fb57-3c74-445d-9803-cbfadc4bc4b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1068 entries, 0 to 1067\n","Data columns (total 3 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   start_ts            1068 non-null   object \n"," 1   weather_conditions  1068 non-null   object \n"," 2   duration_seconds    1068 non-null   float64\n","dtypes: float64(1), object(2)\n","memory usage: 25.2+ KB\n"]}]},{"cell_type":"code","source":["# I can see with info if I have null values. Is it good practice to still run isna?\n","result7.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"36qK94whBvVY","executionInfo":{"status":"ok","timestamp":1743182931738,"user_tz":-300,"elapsed":11,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"6afd1664-7128-4e54-e50c-eeea166d9c51"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["start_ts              0\n","weather_conditions    0\n","duration_seconds      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>start_ts</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>weather_conditions</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>duration_seconds</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["result7['duration_minutes'] = result7['duration_seconds']/60\n","result7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ukvl_QE3zZDy","executionInfo":{"status":"ok","timestamp":1743183030913,"user_tz":-300,"elapsed":95,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"680f2ede-66c0-4914-e32c-7580fc003957"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 start_ts weather_conditions  duration_seconds  \\\n","0     2017-11-25 16:00:00               Good            2410.0   \n","1     2017-11-25 14:00:00               Good            1920.0   \n","2     2017-11-25 12:00:00               Good            1543.0   \n","3     2017-11-04 10:00:00               Good            2512.0   \n","4     2017-11-11 07:00:00               Good            1440.0   \n","...                   ...                ...               ...   \n","1063  2017-11-25 11:00:00               Good               0.0   \n","1064  2017-11-11 10:00:00               Good            1318.0   \n","1065  2017-11-11 13:00:00               Good            2100.0   \n","1066  2017-11-11 08:00:00               Good            1380.0   \n","1067  2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes  \n","0            40.166667  \n","1            32.000000  \n","2            25.716667  \n","3            41.866667  \n","4            24.000000  \n","...                ...  \n","1063          0.000000  \n","1064         21.966667  \n","1065         35.000000  \n","1066         23.000000  \n","1067         47.233333  \n","\n","[1068 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-271e0536-62f8-45eb-8a35-c8dca68fa3f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","    </tr>\n","    <tr>\n","      <th>1065</th>\n","      <td>2017-11-11 13:00:00</td>\n","      <td>Good</td>\n","      <td>2100.0</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1066</th>\n","      <td>2017-11-11 08:00:00</td>\n","      <td>Good</td>\n","      <td>1380.0</td>\n","      <td>23.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1068 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-271e0536-62f8-45eb-8a35-c8dca68fa3f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-271e0536-62f8-45eb-8a35-c8dca68fa3f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-271e0536-62f8-45eb-8a35-c8dca68fa3f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e30092da-787b-4c6a-89e0-73181d0e4194\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e30092da-787b-4c6a-89e0-73181d0e4194')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e30092da-787b-4c6a-89e0-73181d0e4194 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f36c63aa-0eb3-4bc3-aade-2b9a11be8135\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f36c63aa-0eb3-4bc3-aade-2b9a11be8135 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 1068,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 769.4611253993992,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.824352089989988,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          22.983333333333334,\n          24.583333333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["result7.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Gm04TI0B-ku","executionInfo":{"status":"ok","timestamp":1743183120964,"user_tz":-300,"elapsed":11,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"479181b2-b6c5-42db-f3a1-4946595fb360"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(197)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Find and display duplicated rows in the DataFrame\n","# I am not really sure if I can spot a possible reason though as to why they are dupicated?\n","duplicated_rows_result7 = result7[result7.duplicated(keep=False)]\n","\n","print(\"Duplicated Rows result7:\")\n","display(duplicated_rows_result7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"cnA_0CrDDVkb","executionInfo":{"status":"ok","timestamp":1743183204075,"user_tz":-300,"elapsed":114,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"af5eba52-d615-4cf2-b741-fc7b406b3165"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Duplicated Rows result7:\n"]},{"output_type":"display_data","data":{"text/plain":["                 start_ts weather_conditions  duration_seconds  \\\n","4     2017-11-11 07:00:00               Good            1440.0   \n","8     2017-11-11 14:00:00               Good            2460.0   \n","10    2017-11-18 06:00:00               Good            1500.0   \n","16    2017-11-04 12:00:00               Good            2640.0   \n","23    2017-11-04 14:00:00               Good            3360.0   \n","...                   ...                ...               ...   \n","1054  2017-11-11 07:00:00               Good            1380.0   \n","1058  2017-11-25 12:00:00               Good            1440.0   \n","1062  2017-11-11 06:00:00               Good            1500.0   \n","1065  2017-11-11 13:00:00               Good            2100.0   \n","1066  2017-11-11 08:00:00               Good            1380.0   \n","\n","      duration_minutes  \n","4                 24.0  \n","8                 41.0  \n","10                25.0  \n","16                44.0  \n","23                56.0  \n","...                ...  \n","1054              23.0  \n","1058              24.0  \n","1062              25.0  \n","1065              35.0  \n","1066              23.0  \n","\n","[312 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-7517a28d-ccc9-45a4-a349-7a8cf2d44b8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2017-11-11 14:00:00</td>\n","      <td>Good</td>\n","      <td>2460.0</td>\n","      <td>41.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2017-11-18 06:00:00</td>\n","      <td>Good</td>\n","      <td>1500.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2017-11-04 12:00:00</td>\n","      <td>Good</td>\n","      <td>2640.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>3360.0</td>\n","      <td>56.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1054</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1380.0</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>1058</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1062</th>\n","      <td>2017-11-11 06:00:00</td>\n","      <td>Good</td>\n","      <td>1500.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>1065</th>\n","      <td>2017-11-11 13:00:00</td>\n","      <td>Good</td>\n","      <td>2100.0</td>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>1066</th>\n","      <td>2017-11-11 08:00:00</td>\n","      <td>Good</td>\n","      <td>1380.0</td>\n","      <td>23.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>312 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7517a28d-ccc9-45a4-a349-7a8cf2d44b8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7517a28d-ccc9-45a4-a349-7a8cf2d44b8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7517a28d-ccc9-45a4-a349-7a8cf2d44b8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-019f5f15-44ef-4e5c-bdf8-66f139bf6add\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-019f5f15-44ef-4e5c-bdf8-66f139bf6add')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-019f5f15-44ef-4e5c-bdf8-66f139bf6add button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_dfbb6adb-ca17-40bd-a24a-3959575d71ef\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('duplicated_rows_result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dfbb6adb-ca17-40bd-a24a-3959575d71ef button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('duplicated_rows_result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"duplicated_rows_result7","repr_error":"0"}},"metadata":{}}]},{"cell_type":"code","source":["# Remove duplicated rows, keeping the first instance\n","result7 = result7.drop_duplicates(keep='first')\n","\n","# Display the DataFrame without duplicates\n","print(\"DataFrame without Duplicates:\")\n","display(result7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"SC2mCO8EPlI4","executionInfo":{"status":"ok","timestamp":1743183257590,"user_tz":-300,"elapsed":73,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"80b1a37c-c64e-4fe4-b83f-6e5dfc61eb2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame without Duplicates:\n"]},{"output_type":"display_data","data":{"text/plain":["                 start_ts weather_conditions  duration_seconds  \\\n","0     2017-11-25 16:00:00               Good            2410.0   \n","1     2017-11-25 14:00:00               Good            1920.0   \n","2     2017-11-25 12:00:00               Good            1543.0   \n","3     2017-11-04 10:00:00               Good            2512.0   \n","4     2017-11-11 07:00:00               Good            1440.0   \n","...                   ...                ...               ...   \n","1060  2017-11-04 14:00:00               Good            2700.0   \n","1061  2017-11-18 16:00:00                Bad            2186.0   \n","1063  2017-11-25 11:00:00               Good               0.0   \n","1064  2017-11-11 10:00:00               Good            1318.0   \n","1067  2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes  \n","0            40.166667  \n","1            32.000000  \n","2            25.716667  \n","3            41.866667  \n","4            24.000000  \n","...                ...  \n","1060         45.000000  \n","1061         36.433333  \n","1063          0.000000  \n","1064         21.966667  \n","1067         47.233333  \n","\n","[871 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-940bb539-3b6f-46f3-8ca2-0f860b888cd9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1060</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>2700.0</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1061</th>\n","      <td>2017-11-18 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2186.0</td>\n","      <td>36.433333</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>871 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-940bb539-3b6f-46f3-8ca2-0f860b888cd9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-940bb539-3b6f-46f3-8ca2-0f860b888cd9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-940bb539-3b6f-46f3-8ca2-0f860b888cd9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a104f430-0962-4d72-b72d-489f6438c88f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a104f430-0962-4d72-b72d-489f6438c88f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a104f430-0962-4d72-b72d-489f6438c88f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e7c17299-09c4-4574-869d-2b328315824e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e7c17299-09c4-4574-869d-2b328315824e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 871,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 782.2747172468229,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.037911954113705,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          22.983333333333334,\n          24.583333333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["result7['duration_seconds'].median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DjFXSqs6T1ar","executionInfo":{"status":"ok","timestamp":1743183354441,"user_tz":-300,"elapsed":14,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"445d9538-db08-4041-c8c8-a9d274296ad9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2015.0"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["result7['duration_seconds'].plot(kind='box')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"QXieKLTrzxEY","executionInfo":{"status":"ok","timestamp":1743183358306,"user_tz":-300,"elapsed":238,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"1b4ac72e-61b1-4760-91e0-52513f8fcb00"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["result7.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"Eics9tpf00Gt","executionInfo":{"status":"ok","timestamp":1743183371189,"user_tz":-300,"elapsed":132,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"14ee0ea6-9f28-4bcc-9143-e773df7755aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       duration_seconds  duration_minutes\n","count        871.000000        871.000000\n","mean        2096.308840         34.938481\n","std          782.274717         13.037912\n","min            0.000000          0.000000\n","25%         1440.000000         24.000000\n","50%         2015.000000         33.583333\n","75%         2584.000000         43.066667\n","max         7440.000000        124.000000"],"text/html":["\n","  <div id=\"df-fed11f02-f1b3-4bc3-85f5-4f2959209aca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>871.000000</td>\n","      <td>871.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2096.308840</td>\n","      <td>34.938481</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>782.274717</td>\n","      <td>13.037912</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1440.000000</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2015.000000</td>\n","      <td>33.583333</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2584.000000</td>\n","      <td>43.066667</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7440.000000</td>\n","      <td>124.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fed11f02-f1b3-4bc3-85f5-4f2959209aca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fed11f02-f1b3-4bc3-85f5-4f2959209aca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fed11f02-f1b3-4bc3-85f5-4f2959209aca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b155ce47-b790-4e24-964f-ba6347ce15b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b155ce47-b790-4e24-964f-ba6347ce15b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b155ce47-b790-4e24-964f-ba6347ce15b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2293.6737550497755,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2096.308840413318,\n          2015.0,\n          871.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 296.5229687311961,\n        \"min\": 0.0,\n        \"max\": 871.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          34.938480673555304,\n          33.583333333333336,\n          871.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# Convert the 'start_ts' column to a datetime object\n","result7['start_ts'] = pd.to_datetime(result7['start_ts'])\n","result7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"2CDhMT-Fctjg","executionInfo":{"status":"ok","timestamp":1743183472758,"user_tz":-300,"elapsed":87,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"87b501a1-010b-49bc-ced6-c14fecbeb8a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-44-6347393fafba>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  result7['start_ts'] = pd.to_datetime(result7['start_ts'])\n"]},{"output_type":"execute_result","data":{"text/plain":["                start_ts weather_conditions  duration_seconds  \\\n","0    2017-11-25 16:00:00               Good            2410.0   \n","1    2017-11-25 14:00:00               Good            1920.0   \n","2    2017-11-25 12:00:00               Good            1543.0   \n","3    2017-11-04 10:00:00               Good            2512.0   \n","4    2017-11-11 07:00:00               Good            1440.0   \n","...                  ...                ...               ...   \n","1060 2017-11-04 14:00:00               Good            2700.0   \n","1061 2017-11-18 16:00:00                Bad            2186.0   \n","1063 2017-11-25 11:00:00               Good               0.0   \n","1064 2017-11-11 10:00:00               Good            1318.0   \n","1067 2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes  \n","0            40.166667  \n","1            32.000000  \n","2            25.716667  \n","3            41.866667  \n","4            24.000000  \n","...                ...  \n","1060         45.000000  \n","1061         36.433333  \n","1063          0.000000  \n","1064         21.966667  \n","1067         47.233333  \n","\n","[871 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-361a9921-5f86-460a-8c14-8a92bd401034\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1060</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>2700.0</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1061</th>\n","      <td>2017-11-18 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2186.0</td>\n","      <td>36.433333</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>871 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-361a9921-5f86-460a-8c14-8a92bd401034')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-361a9921-5f86-460a-8c14-8a92bd401034 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-361a9921-5f86-460a-8c14-8a92bd401034');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-67d4a997-293d-4559-ad38-34fe2efd5a75\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67d4a997-293d-4559-ad38-34fe2efd5a75')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-67d4a997-293d-4559-ad38-34fe2efd5a75 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0b088b6a-1c69-4146-8e1f-648284fdc0d4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0b088b6a-1c69-4146-8e1f-648284fdc0d4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 871,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:00:00\",\n        \"max\": \"2017-11-25 23:00:00\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 782.2747172468229,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.037911954113705,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          22.983333333333334,\n          24.583333333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# to_timedelta this function simply converts the time in numeric format to time format\n","result7['closing_time'] = result7['start_ts'] + pd.to_timedelta(result7['duration_seconds'], unit='s')\n","result7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"QkzTBPdVa51F","executionInfo":{"status":"ok","timestamp":1743183694713,"user_tz":-300,"elapsed":7,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"12ac48be-cfa5-49ec-a33c-ed8a3ea9990d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-46-c9446be0be3a>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  result7['closing_time'] = result7['start_ts'] + pd.to_timedelta(result7['duration_seconds'], unit='s')\n"]},{"output_type":"execute_result","data":{"text/plain":["                start_ts weather_conditions  duration_seconds  \\\n","0    2017-11-25 16:00:00               Good            2410.0   \n","1    2017-11-25 14:00:00               Good            1920.0   \n","2    2017-11-25 12:00:00               Good            1543.0   \n","3    2017-11-04 10:00:00               Good            2512.0   \n","4    2017-11-11 07:00:00               Good            1440.0   \n","...                  ...                ...               ...   \n","1060 2017-11-04 14:00:00               Good            2700.0   \n","1061 2017-11-18 16:00:00                Bad            2186.0   \n","1063 2017-11-25 11:00:00               Good               0.0   \n","1064 2017-11-11 10:00:00               Good            1318.0   \n","1067 2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes        closing_time  \n","0            40.166667 2017-11-25 16:40:10  \n","1            32.000000 2017-11-25 14:32:00  \n","2            25.716667 2017-11-25 12:25:43  \n","3            41.866667 2017-11-04 10:41:52  \n","4            24.000000 2017-11-11 07:24:00  \n","...                ...                 ...  \n","1060         45.000000 2017-11-04 14:45:00  \n","1061         36.433333 2017-11-18 16:36:26  \n","1063          0.000000 2017-11-25 11:00:00  \n","1064         21.966667 2017-11-11 10:21:58  \n","1067         47.233333 2017-11-04 16:47:14  \n","\n","[871 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-dd8126f0-af7a-46be-a5ce-1eaad3f449ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","      <th>closing_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","      <td>2017-11-25 16:40:10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","      <td>2017-11-25 14:32:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","      <td>2017-11-25 12:25:43</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","      <td>2017-11-04 10:41:52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","      <td>2017-11-11 07:24:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1060</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>2700.0</td>\n","      <td>45.000000</td>\n","      <td>2017-11-04 14:45:00</td>\n","    </tr>\n","    <tr>\n","      <th>1061</th>\n","      <td>2017-11-18 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2186.0</td>\n","      <td>36.433333</td>\n","      <td>2017-11-18 16:36:26</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>2017-11-25 11:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","      <td>2017-11-11 10:21:58</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","      <td>2017-11-04 16:47:14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>871 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd8126f0-af7a-46be-a5ce-1eaad3f449ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd8126f0-af7a-46be-a5ce-1eaad3f449ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd8126f0-af7a-46be-a5ce-1eaad3f449ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8c637331-44a8-457e-bec1-c1e184a1be21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c637331-44a8-457e-bec1-c1e184a1be21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8c637331-44a8-457e-bec1-c1e184a1be21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1367b8e6-657a-4641-9e13-b1302ee04e2e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1367b8e6-657a-4641-9e13-b1302ee04e2e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 871,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:00:00\",\n        \"max\": \"2017-11-25 23:00:00\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 782.2747172468229,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.037911954113705,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          22.983333333333334,\n          24.583333333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closing_time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:26:00\",\n        \"max\": \"2017-11-25 23:25:00\",\n        \"num_unique_values\": 871,\n        \"samples\": [\n          \"2017-11-11 07:23:39\",\n          \"2017-11-25 10:22:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["**Feature information in Result7**\n","\n","- Dataset contains data on rides from the Loop to O'Hare International Airport.\n","- duplicated values found and removed\n","- start ts data type is object but it should be date time. Converted to datetime.\n","\n"],"metadata":{"id":"zPQV6tidS88v"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"JtPlv83Q7mmU"}},{"cell_type":"markdown","source":["##Data Anaysis\n","\n","\n"],"metadata":{"id":"U9kONwyx7vyt"}},{"cell_type":"markdown","source":["## 1. identify the top 10 neighborhoods in terms of drop-offs"],"metadata":{"id":"QmOloiIN8Jtm"}},{"cell_type":"code","source":["result4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"YTnbmVOb2tMz","executionInfo":{"status":"ok","timestamp":1743183861604,"user_tz":-300,"elapsed":91,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"d5632fe3-7bd8-41af-bb45-81087fc01b13"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   dropoff_location_name  average_trips\n","0                   Loop          10727\n","1            River North           9523\n","2          Streeterville           6664\n","3              West Loop           5163\n","4                 O'Hare           2546\n","..                   ...            ...\n","89       Mount Greenwood              3\n","90             Hegewisch              3\n","91              Burnside              2\n","92             East Side              1\n","93             Riverdale              1\n","\n","[94 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-8dd72ff8-2609-4a04-9d6e-aa081300f453\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dropoff_location_name</th>\n","      <th>average_trips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Loop</td>\n","      <td>10727</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>River North</td>\n","      <td>9523</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Streeterville</td>\n","      <td>6664</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>West Loop</td>\n","      <td>5163</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O'Hare</td>\n","      <td>2546</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>Mount Greenwood</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>Hegewisch</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>Burnside</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>East Side</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>Riverdale</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>94 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8dd72ff8-2609-4a04-9d6e-aa081300f453')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8dd72ff8-2609-4a04-9d6e-aa081300f453 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8dd72ff8-2609-4a04-9d6e-aa081300f453');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-040267e4-249e-49a9-9cfd-d76fe779fd29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-040267e4-249e-49a9-9cfd-d76fe779fd29')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-040267e4-249e-49a9-9cfd-d76fe779fd29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_63d72b0d-17ac-4bcc-9076-6cd639331e2e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result4')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_63d72b0d-17ac-4bcc-9076-6cd639331e2e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result4');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result4","summary":"{\n  \"name\": \"result4\",\n  \"rows\": 94,\n  \"fields\": [\n    {\n      \"column\": \"dropoff_location_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"Bucktown\",\n          \"Lincoln Square\",\n          \"Dunning\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_trips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1714,\n        \"min\": 1,\n        \"max\": 10727,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          2546,\n          12,\n          516\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","top_10_dropoff_loc = result4.head(10)\n","plt.barh(top_10_dropoff_loc['dropoff_location_name'], top_10_dropoff_loc['average_trips'])\n","\n","# Create a bar plot for the top 10 neighborhoods in terms of drop offs\n","plt.title('Top 10 Neighborhoods with most taxi drop-offs in Chicago')\n","plt.xlabel('Average drop off rides')\n","plt.ylabel('Neighborhood')\n","plt.xticks(rotation=45, ha='right')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"_S8r7bBk3P3l","executionInfo":{"status":"ok","timestamp":1743184365876,"user_tz":-300,"elapsed":256,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"2fe133f1-0bce-43e2-ead9-550aa82b3d0b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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+0ke/yz5u7t379o8f/DggVG0aFGjevXqNu0XL140MmXKZNSsWdOIjo42SpUqZeTOndsabsVLTqASfy6WL19ubbtz544RGBiYaKAiyZg9e3aiYzztfMZ/jri6uhp//PGHte8vv/xiSDJ69+79xFoN49H738nJyTh16pS17cKFC0aGDBlswsLEPrMM4//ee19//bW17caNG4n2TY6kApXkfGYlplSpUoaXl1eyjx//O1m4cKG1LTo62siWLZvx9ttvW9sSC1QqV65sZMiQweazxDAehajxHn9PGoZh7Ny5M8Exu3fvblgsFmPfvn3WtmvXrhmZMmWyCVSuXLliODk5GW+88YYRGxtr7Tt9+nRDkjFv3rxkv3YAaYtLfgAAKbZu3TrZ29urR48eNu0ffvihDMOwXgYRr3z58jaLvObOnVsNGjTQhg0bFBsbmyo13bt3T87Ozgna46+bv3fvXrLH6tmzpzJmzKiQkJAk+3z99deqVKmSMmbMqL/++sv6qFGjhmJjY5O8pCk2NlabNm1Sw4YNlSNHDmt7YGCg6tSpk+g+NWrUUN68ea3PixcvLk9PT50+fTpB365du9o87969uyRZL4WI/98PPvjApt+HH34oSVq7dq1Ne548eVSrVq1E62rbtq3NIqyVKlWSJGtde/bs0ZUrV9SlSxeb9Qvq1q2rggULWo918eJF7d+/X23atFGmTJlsXmfNmjWtNcfGxmrDhg1q2LChcufObe1XqFChBDXGrxGxevXqBJdgPUmpUqXk4eFh/f399NNPypUrl1q1aqVff/1Vd+/elWEY2rZtm/X1ptTTzt/T/H1RUXt7ewUFBckwDLVv397a7u3trQIFCtiMuW7dOmXLlk3Nmze3tjk6OqpHjx66ffu2tm7dat33zp07CgsLS9kLNMnV1dX6840bNxQZGalKlSoluPwuW7ZsmjFjhsLCwlSpUiXt379f8+bNk6enp+ljrlu3TtmzZ7euuyRJbm5u6tSpU6L9nZ2d1bZt2wRjJOd8xmvYsKFy5sxpfV62bFmVK1fO5nKlxMTGxmrjxo1q2LChAgICrO3Zs2dXixYttG3bNkVFRT39RT/G1dVVTk5OCg8P140bN0zvnxgzn1l/FxUVpQwZMpg6loeHh836Xk5OTipbtuwTj3X16lX9+OOPateunc1niSSbS5j+/p58+PChrl27psDA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n5X7QiNURERERERE5IGhYorcLyqoiIiIiIiIiIjcIxVURERERERERETukQoqIiIiIiIiIiL3SAUVEREREREREZF7pIKKiIiIiIiIiMg9UkFFREREREREROQeqaAiIiIiUoecOXMGk8lEenq6tUP5QW+//Tbe3t7Y2NiwfPnyH2z7KdauXUvDhg1/tM8LL7xA165d/+14RURE/h0qqIiIiEid8pe//AVbW1uGDBli7VDkLq5du8a0adOYO3cu3377LZMnT75r208VGRlJdnZ2DUYsIiLy71FBRUREROqUhIQEnn32WXbv3k1+fn6NnsswDCoqKmr0HPebtWPOy8ujvLycIUOG4OXlhbOz813bfory8nKcnJxo1qxZDUctIiJy71RQERERkTrjxo0bbNy4kalTpzJkyBDWrl1reW7s2LFERkZW619eXo6HhwdJSUkAVFVVsXTpUnx9fXFycqJLly58+OGHlv67du3CZDKxfft2evTogdls5uuvvyYnJ4dhw4bh6emJq6srPXv2JCUlpdq5zp07x5AhQ3BycsLX15cNGzbQpk2batNbrly5wsSJE2natCkNGjTg0Ucf5W9/+9uPXvO+ffvo1q0bjo6OhISEcOjQoWrP/1DMN2/eZPr06TRr1gxHR0f69+/P/v3773jd1q1bCQ4OxtHRkd69e3P06NEfjScvL49hw4bh6upKgwYNiIiI4MKFC8Ct6TlBQUEA+Pn5YTKZ7tp25syZO457eyrTxo0bCQsLw9HRkfXr1991ys8rr7yCp6cnbm5uREdHU1paesfx4uPjCQwMxNHRkYCAAFavXm15rqysjGnTpuHl5YWjoyOtW7dm6dKlP3rdIiIidzBERERE6oiEhAQjJCTEMAzDSE5ONvz9/Y2qqirDMAxjy5YthpOTk3H9+nVL/+TkZMPJycm4du2aYRiGsWTJEiMgIMD49NNPjZycHCMxMdEwm83Grl27DMMwjNTUVAMwgoODjR07dhgnT540Ll++bKSnpxtvvfWWceTIESM7O9tYsGCB4ejoaOTm5lrOFR4ebnTt2tVIS0szDh48aISFhRlOTk7G73//+2p9hg4dauzfv9/Izs42Zs6caTRp0sS4fPnyXa/3+vXrRtOmTY2xY8caR48eNZKTkw0/Pz8DMA4dOvSjMU+fPt1o0aKFsW3bNiMjI8N46qmnjEaNGlnO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\n"},"metadata":{}}]},{"cell_type":"code","source":["# in pandas plot function the data has to be provided in the form of pandas series\n","top_10_neighborhoods = result4.groupby('dropoff_location_name')\n","top_10_neighborhoods_sorted = top_10_neighborhoods['average_trips'].mean().sort_values(ascending=False).head(10)\n","\n","# Create a bar plot for the top 10 neighborhoods in terms of drop offs\n","plt.figure(figsize=(12, 6))\n","top_10_neighborhoods_sorted.plot(kind='barh', color='skyblue')\n","plt.title('Top 10 Neighborhoods with most taxi drop-offs in Chicago')\n","plt.xlabel('Average drop off rides')\n","plt.ylabel('Neighborhood')\n","plt.xticks(rotation=45, ha='right')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"zFKaSYzvdK7G","executionInfo":{"status":"ok","timestamp":1743184390191,"user_tz":-300,"elapsed":286,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"67d25b29-ba57-46e5-e119-ee08edb6b40d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 2. Top 10 Taxi Companies by number of rides"],"metadata":{"id":"qF1URQBP_YyN"}},{"cell_type":"code","source":["top_10_taxi_comp = result1.head(10)\n","plt.figure(figsize=(12, 6))\n","plt.barh(top_10_taxi_comp['company_name'], top_10_taxi_comp['trips_amount'])\n","\n","# Create a bar plot for the top 10 taxi companies in terms of number of rides\n","plt.title('Top 10 taxi companies with most rides in Chicago')\n","plt.xlabel('Average number of rides')\n","plt.ylabel('Taxi companies')\n","plt.xticks(rotation=45, ha='right')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"bE1a9Msn41wD","executionInfo":{"status":"ok","timestamp":1743184482488,"user_tz":-300,"elapsed":900,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"5362789b-141c-4612-8f24-ef876aafb772"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["top_10_taxi_companies = result1.groupby('company_name')\n","top_10_taxi_companies_sorted = top_10_taxi_companies['trips_amount'].mean().sort_values(ascending=False).head(10)\n","\n","# Create a bar plot for the top 10 taxi companies in terms of number of rides\n","plt.figure(figsize=(12, 6))\n","top_10_taxi_companies_sorted.plot(kind='barh', color='skyblue')\n","plt.title('Top 10 taxi companies with most rides in Chicago')\n","plt.xlabel('Average number of rides')\n","plt.ylabel('Taxi companies')\n","plt.xticks(rotation=45, ha='right')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"PEd41t1PoED1","executionInfo":{"status":"ok","timestamp":1743184406865,"user_tz":-300,"elapsed":335,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"9899f316-e39d-4aa8-b6a8-3d439e45a5d8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"vq87vzSOC98H"}},{"cell_type":"markdown","source":["#Testing hypotheses\n","\n","\n","## Does the average duration of rides from the Loop to O'Hare International Airport changes on rainy Saturdays."],"metadata":{"id":"c4wC4-sYDVVi"}},{"cell_type":"markdown","source":["**Null Hypothesis (H0):**\n","\n","The average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays is the same as the average duration on non-rainy Saturdays.\n","\n","**Alternative Hypothesis (H1):**\n","\n","The average duration of rides from the Loop to O'Hare International Airport on rainy Saturdays is different from the average duration on non-rainy Saturdays.\n","\n","**Criteria for Testing the Hypotheses:**\n","\n","**Data Selection:**\n"," Separate the data into two groups based on weather conditions (rainy and non-rainy Saturdays).\n","\n","**Significance Level (Alpha):** Typically, a significance level of 0.05 (5%) is commonly used.\n","\n","**Statistical Test:**\n","Use a two-sample t-test to compare the means of the two groups (rainy vs. non-rainy Saturdays). The t-test helps to determine if the means of two groups are significantly different."],"metadata":{"id":"UeXY-02dKwfb"}},{"cell_type":"code","source":["result7.info()"],"metadata":{"id":"Ah26YbHsqJmc","executionInfo":{"status":"ok","timestamp":1743180340197,"user_tz":180,"elapsed":17,"user":{"displayName":"S. Niehaus","userId":"08895059023574019924"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"25689fe3-a7c4-49a7-d0e0-136c0684c144"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 871 entries, 0 to 1067\n","Data columns (total 4 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   start_ts            871 non-null    datetime64[ns]\n"," 1   weather_conditions  871 non-null    object        \n"," 2   duration_seconds    871 non-null    float64       \n"," 3   closing_time        871 non-null    datetime64[ns]\n","dtypes: datetime64[ns](2), float64(1), object(1)\n","memory usage: 66.3+ KB\n"]}]},{"cell_type":"code","source":["# add name of week day\n","result7['day_name'] = result7['start_ts'].dt.day_name()\n","display(result7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":721},"id":"wEHy2EPGpTMr","executionInfo":{"status":"ok","timestamp":1743184653754,"user_tz":-300,"elapsed":41,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"c482a190-8534-40d4-e902-9d44fc22a02e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-63-3158c4325495>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  result7['day_name'] = result7['start_ts'].dt.day_name()\n"]},{"output_type":"display_data","data":{"text/plain":["                start_ts weather_conditions  duration_seconds  \\\n","0    2017-11-25 16:00:00               Good            2410.0   \n","1    2017-11-25 14:00:00               Good            1920.0   \n","2    2017-11-25 12:00:00               Good            1543.0   \n","3    2017-11-04 10:00:00               Good            2512.0   \n","4    2017-11-11 07:00:00               Good            1440.0   \n","...                  ...                ...               ...   \n","1060 2017-11-04 14:00:00               Good            2700.0   \n","1061 2017-11-18 16:00:00                Bad            2186.0   \n","1063 2017-11-25 11:00:00               Good               0.0   \n","1064 2017-11-11 10:00:00               Good            1318.0   \n","1067 2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes        closing_time  day_name  \n","0            40.166667 2017-11-25 16:40:10  Saturday  \n","1            32.000000 2017-11-25 14:32:00  Saturday  \n","2            25.716667 2017-11-25 12:25:43  Saturday  \n","3            41.866667 2017-11-04 10:41:52  Saturday  \n","4            24.000000 2017-11-11 07:24:00  Saturday  \n","...                ...                 ...       ...  \n","1060         45.000000 2017-11-04 14:45:00  Saturday  \n","1061         36.433333 2017-11-18 16:36:26  Saturday  \n","1063          0.000000 2017-11-25 11:00:00  Saturday  \n","1064         21.966667 2017-11-11 10:21:58  Saturday  \n","1067         47.233333 2017-11-04 16:47:14  Saturday  \n","\n","[871 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-9a46bf99-8744-4fa6-bf86-87d998b29023\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","      <th>closing_time</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","      <td>2017-11-25 16:40:10</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","      <td>2017-11-25 14:32:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","      <td>2017-11-25 12:25:43</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","      <td>2017-11-04 10:41:52</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","      <td>2017-11-11 07:24:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1060</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>2700.0</td>\n","      <td>45.000000</td>\n","      <td>2017-11-04 14:45:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1061</th>\n","      <td>2017-11-18 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2186.0</td>\n","      <td>36.433333</td>\n","      <td>2017-11-18 16:36:26</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","      <td>2017-11-11 10:21:58</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","      <td>2017-11-04 16:47:14</td>\n","      <td>Saturday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>871 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a46bf99-8744-4fa6-bf86-87d998b29023')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a46bf99-8744-4fa6-bf86-87d998b29023 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a46bf99-8744-4fa6-bf86-87d998b29023');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0676c32a-8869-48d2-a162-ccc175f97f93\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0676c32a-8869-48d2-a162-ccc175f97f93')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0676c32a-8869-48d2-a162-ccc175f97f93 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_156057f4-d2b6-486b-8cf7-8328ebd894cc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_156057f4-d2b6-486b-8cf7-8328ebd894cc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7","summary":"{\n  \"name\": \"result7\",\n  \"rows\": 871,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:00:00\",\n        \"max\": \"2017-11-25 23:00:00\",\n        \"num_unique_values\": 81,\n        \"samples\": [\n          \"2017-11-04 13:00:00\",\n          \"2017-11-25 16:00:00\",\n          \"2017-11-11 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Bad\",\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 782.2747172468229,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          1379.0,\n          1475.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.037911954113705,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 495,\n        \"samples\": [\n          22.983333333333334,\n          24.583333333333332\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closing_time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:26:00\",\n        \"max\": \"2017-11-25 23:25:00\",\n        \"num_unique_values\": 871,\n        \"samples\": [\n          \"2017-11-11 07:23:39\",\n          \"2017-11-25 10:22:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Saturday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["result7_good_weather = result7[result7['weather_conditions'] == 'Good']\n","result7_bad_weather = result7[result7['weather_conditions'] == 'Bad']\n","display(result7_good_weather)\n","display(result7_bad_weather)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"-9az1eT3qMvG","executionInfo":{"status":"ok","timestamp":1743184684462,"user_tz":-300,"elapsed":56,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e0d16f0d-75b9-432f-f8c5-de4cae83b1d7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                start_ts weather_conditions  duration_seconds  \\\n","0    2017-11-25 16:00:00               Good            2410.0   \n","1    2017-11-25 14:00:00               Good            1920.0   \n","2    2017-11-25 12:00:00               Good            1543.0   \n","3    2017-11-04 10:00:00               Good            2512.0   \n","4    2017-11-11 07:00:00               Good            1440.0   \n","...                  ...                ...               ...   \n","1057 2017-11-04 12:00:00               Good            2492.0   \n","1059 2017-11-11 10:00:00               Good            1303.0   \n","1060 2017-11-04 14:00:00               Good            2700.0   \n","1063 2017-11-25 11:00:00               Good               0.0   \n","1064 2017-11-11 10:00:00               Good            1318.0   \n","\n","      duration_minutes        closing_time  day_name  \n","0            40.166667 2017-11-25 16:40:10  Saturday  \n","1            32.000000 2017-11-25 14:32:00  Saturday  \n","2            25.716667 2017-11-25 12:25:43  Saturday  \n","3            41.866667 2017-11-04 10:41:52  Saturday  \n","4            24.000000 2017-11-11 07:24:00  Saturday  \n","...                ...                 ...       ...  \n","1057         41.533333 2017-11-04 12:41:32  Saturday  \n","1059         21.716667 2017-11-11 10:21:43  Saturday  \n","1060         45.000000 2017-11-04 14:45:00  Saturday  \n","1063          0.000000 2017-11-25 11:00:00  Saturday  \n","1064         21.966667 2017-11-11 10:21:58  Saturday  \n","\n","[723 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-78f5c9fd-12be-4dd0-8ce3-39416b389ce9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","      <th>closing_time</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-11-25 16:00:00</td>\n","      <td>Good</td>\n","      <td>2410.0</td>\n","      <td>40.166667</td>\n","      <td>2017-11-25 16:40:10</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2017-11-25 14:00:00</td>\n","      <td>Good</td>\n","      <td>1920.0</td>\n","      <td>32.000000</td>\n","      <td>2017-11-25 14:32:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017-11-25 12:00:00</td>\n","      <td>Good</td>\n","      <td>1543.0</td>\n","      <td>25.716667</td>\n","      <td>2017-11-25 12:25:43</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2017-11-04 10:00:00</td>\n","      <td>Good</td>\n","      <td>2512.0</td>\n","      <td>41.866667</td>\n","      <td>2017-11-04 10:41:52</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-11-11 07:00:00</td>\n","      <td>Good</td>\n","      <td>1440.0</td>\n","      <td>24.000000</td>\n","      <td>2017-11-11 07:24:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1057</th>\n","      <td>2017-11-04 12:00:00</td>\n","      <td>Good</td>\n","      <td>2492.0</td>\n","      <td>41.533333</td>\n","      <td>2017-11-04 12:41:32</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1059</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1303.0</td>\n","      <td>21.716667</td>\n","      <td>2017-11-11 10:21:43</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1060</th>\n","      <td>2017-11-04 14:00:00</td>\n","      <td>Good</td>\n","      <td>2700.0</td>\n","      <td>45.000000</td>\n","      <td>2017-11-04 14:45:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1063</th>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Good</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>2017-11-25 11:00:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1064</th>\n","      <td>2017-11-11 10:00:00</td>\n","      <td>Good</td>\n","      <td>1318.0</td>\n","      <td>21.966667</td>\n","      <td>2017-11-11 10:21:58</td>\n","      <td>Saturday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>723 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78f5c9fd-12be-4dd0-8ce3-39416b389ce9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-78f5c9fd-12be-4dd0-8ce3-39416b389ce9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-78f5c9fd-12be-4dd0-8ce3-39416b389ce9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-900d9e6b-7a77-471b-af70-81043e387f63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-900d9e6b-7a77-471b-af70-81043e387f63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-900d9e6b-7a77-471b-af70-81043e387f63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1bccb196-8ff1-4378-8a68-b7c4a5f504d7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7_good_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1bccb196-8ff1-4378-8a68-b7c4a5f504d7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7_good_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7_good_weather","summary":"{\n  \"name\": \"result7_good_weather\",\n  \"rows\": 723,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:00:00\",\n        \"max\": \"2017-11-25 23:00:00\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"2017-11-18 18:00:00\",\n          \"2017-11-25 10:00:00\",\n          \"2017-11-11 07:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Good\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 773.4448597547351,\n        \"min\": 0.0,\n        \"max\": 7440.0,\n        \"num_unique_values\": 438,\n        \"samples\": [\n          1311.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.89074766257892,\n        \"min\": 0.0,\n        \"max\": 124.0,\n        \"num_unique_values\": 438,\n        \"samples\": [\n          21.85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closing_time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 00:26:00\",\n        \"max\": \"2017-11-25 23:25:00\",\n        \"num_unique_values\": 723,\n        \"samples\": [\n          \"2017-11-25 12:25:53\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Saturday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["                start_ts weather_conditions  duration_seconds  \\\n","6    2017-11-04 16:00:00                Bad            2969.0   \n","30   2017-11-18 12:00:00                Bad            1980.0   \n","34   2017-11-04 17:00:00                Bad            2460.0   \n","51   2017-11-04 16:00:00                Bad            2760.0   \n","52   2017-11-18 12:00:00                Bad            2460.0   \n","...                  ...                ...               ...   \n","1031 2017-11-18 12:00:00                Bad            2560.0   \n","1032 2017-11-18 10:00:00                Bad            1908.0   \n","1053 2017-11-18 12:00:00                Bad            2400.0   \n","1061 2017-11-18 16:00:00                Bad            2186.0   \n","1067 2017-11-04 16:00:00                Bad            2834.0   \n","\n","      duration_minutes        closing_time  day_name  \n","6            49.483333 2017-11-04 16:49:29  Saturday  \n","30           33.000000 2017-11-18 12:33:00  Saturday  \n","34           41.000000 2017-11-04 17:41:00  Saturday  \n","51           46.000000 2017-11-04 16:46:00  Saturday  \n","52           41.000000 2017-11-18 12:41:00  Saturday  \n","...                ...                 ...       ...  \n","1031         42.666667 2017-11-18 12:42:40  Saturday  \n","1032         31.800000 2017-11-18 10:31:48  Saturday  \n","1053         40.000000 2017-11-18 12:40:00  Saturday  \n","1061         36.433333 2017-11-18 16:36:26  Saturday  \n","1067         47.233333 2017-11-04 16:47:14  Saturday  \n","\n","[148 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-fca4fa03-346d-4ad1-a265-063b3fa4e5b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>start_ts</th>\n","      <th>weather_conditions</th>\n","      <th>duration_seconds</th>\n","      <th>duration_minutes</th>\n","      <th>closing_time</th>\n","      <th>day_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2969.0</td>\n","      <td>49.483333</td>\n","      <td>2017-11-04 16:49:29</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2017-11-18 12:00:00</td>\n","      <td>Bad</td>\n","      <td>1980.0</td>\n","      <td>33.000000</td>\n","      <td>2017-11-18 12:33:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2017-11-04 17:00:00</td>\n","      <td>Bad</td>\n","      <td>2460.0</td>\n","      <td>41.000000</td>\n","      <td>2017-11-04 17:41:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2760.0</td>\n","      <td>46.000000</td>\n","      <td>2017-11-04 16:46:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>2017-11-18 12:00:00</td>\n","      <td>Bad</td>\n","      <td>2460.0</td>\n","      <td>41.000000</td>\n","      <td>2017-11-18 12:41:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1031</th>\n","      <td>2017-11-18 12:00:00</td>\n","      <td>Bad</td>\n","      <td>2560.0</td>\n","      <td>42.666667</td>\n","      <td>2017-11-18 12:42:40</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1032</th>\n","      <td>2017-11-18 10:00:00</td>\n","      <td>Bad</td>\n","      <td>1908.0</td>\n","      <td>31.800000</td>\n","      <td>2017-11-18 10:31:48</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1053</th>\n","      <td>2017-11-18 12:00:00</td>\n","      <td>Bad</td>\n","      <td>2400.0</td>\n","      <td>40.000000</td>\n","      <td>2017-11-18 12:40:00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1061</th>\n","      <td>2017-11-18 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2186.0</td>\n","      <td>36.433333</td>\n","      <td>2017-11-18 16:36:26</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1067</th>\n","      <td>2017-11-04 16:00:00</td>\n","      <td>Bad</td>\n","      <td>2834.0</td>\n","      <td>47.233333</td>\n","      <td>2017-11-04 16:47:14</td>\n","      <td>Saturday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>148 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fca4fa03-346d-4ad1-a265-063b3fa4e5b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fca4fa03-346d-4ad1-a265-063b3fa4e5b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fca4fa03-346d-4ad1-a265-063b3fa4e5b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-478bef9d-613c-44b0-bd12-10e0d3e49e31\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-478bef9d-613c-44b0-bd12-10e0d3e49e31')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-478bef9d-613c-44b0-bd12-10e0d3e49e31 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2e960a15-be9d-464b-9525-bf10cb608403\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result7_bad_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2e960a15-be9d-464b-9525-bf10cb608403 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result7_bad_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result7_bad_weather","summary":"{\n  \"name\": \"result7_bad_weather\",\n  \"rows\": 148,\n  \"fields\": [\n    {\n      \"column\": \"start_ts\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 16:00:00\",\n        \"max\": \"2017-11-18 21:00:00\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"2017-11-18 17:00:00\",\n          \"2017-11-18 09:00:00\",\n          \"2017-11-04 16:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weather_conditions\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Bad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 751.5447049004284,\n        \"min\": 480.0,\n        \"max\": 4980.0,\n        \"num_unique_values\": 109,\n        \"samples\": [\n          1182.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"duration_minutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.525745081673806,\n        \"min\": 8.0,\n        \"max\": 83.0,\n        \"num_unique_values\": 109,\n        \"samples\": [\n          19.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closing_time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-11-04 16:38:00\",\n        \"max\": \"2017-11-18 21:29:08\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"2017-11-18 09:24:57\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Saturday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["import scipy.stats as stats\n","result7_good_weather = result7[result7['weather_conditions'] == 'Good']\n","result7_bad_weather = result7[result7['weather_conditions'] == 'Bad']\n","\n","t_statistic, p_value = stats.ttest_ind(result7_good_weather['duration_seconds'],result7_bad_weather['duration_seconds'])\n","\n","alpha = 0.05\n","\n","print(f't-statistic: {t_statistic}')\n","print(f'p-value: {p_value}')\n","\n","if p_value < alpha:\n","    print('Reject the null hypothesis. The average duration of rides from the Loop to OHare International Airport on rainy Saturdays is not the same as the average duration on non-rainy Saturdays')\n","else:\n","    print('Fail to reject the null hypothesis')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lXEOKq08rE7a","executionInfo":{"status":"ok","timestamp":1743184807091,"user_tz":-300,"elapsed":22,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a78cfd3f-0ec1-459b-8b99-44e01a9e16d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["t-statistic: -5.427957689754561\n","p-value: 7.397770692813658e-08\n","Reject the null hypothesis. The average duration of rides from the Loop to OHare International Airport on rainy Saturdays is not the same as the average duration on non-rainy Saturdays\n"]}]}]}