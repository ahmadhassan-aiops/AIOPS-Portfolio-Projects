{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1v3QxY-v81W0GM46Sg3TJpF2Z5ayBBzs2","authorship_tag":"ABX9TyPjQ42ZRx7W6RVJAaJ9b/b3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install catboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"76G-nVOrV0yi","executionInfo":{"status":"ok","timestamp":1751050577565,"user_tz":-300,"elapsed":7460,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e09ba851-9faf-484f-9776-eed81b8344e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: catboost in /usr/local/lib/python3.11/dist-packages (1.2.8)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.11/dist-packages (from catboost) (0.21)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from catboost) (3.10.0)\n","Requirement already satisfied: numpy<3.0,>=1.16.0 in /usr/local/lib/python3.11/dist-packages (from catboost) (2.0.2)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.11/dist-packages (from catboost) (2.2.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from catboost) (1.15.3)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.11/dist-packages (from catboost) (5.24.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.11/dist-packages (from catboost) (1.17.0)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.24->catboost) (2025.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (4.58.4)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (1.4.8)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (11.2.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->catboost) (3.2.3)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.11/dist-packages (from plotly->catboost) (8.5.0)\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.linear_model import LinearRegression, SGDRegressor\n","from sklearn.multioutput import MultiOutputRegressor\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.svm import SVR\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.ensemble import (RandomForestRegressor, AdaBoostRegressor,GradientBoostingRegressor, BaggingRegressor)\n","from catboost import CatBoostRegressor\n","from lightgbm import LGBMRegressor\n","\n","from sklearn.model_selection import cross_val_score\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","from sklearn.model_selection import cross_val_score\n","\n","pd.set_option('display.max_columns', None)\n","\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"c4IBumUB5MiC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#1.Data Loading and Overview"],"metadata":{"id":"QiB6LzkQZD7F"}},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CLIENTS/12. Sarah/Machine Learning/ML Projects/Email and Calls Forecasting using Multivariate LR/Multivariate LR Call and emails forecasting.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"gvcVlVVD5U2w","executionInfo":{"status":"ok","timestamp":1751050578684,"user_tz":-300,"elapsed":1112,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"dacd3f13-3721-4e93-ed1a-764c683c3398"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ContactMomentID ContactMomentStartDateTime ContactMomentEndDateTime  \\\n","0               872246        2024-01-01 06:47:00      2024-01-01 06:57:00   \n","1               731262        2024-01-01 06:01:00      2024-01-01 06:05:00   \n","2               391369        2024-01-01 10:17:00      2024-01-01 10:19:00   \n","3               865179        2024-01-01 08:54:00      2024-01-01 09:07:00   \n","4               148050        2024-01-01 11:39:00      2024-01-01 11:52:00   \n","...                ...                        ...                      ...   \n","74996           218884        2024-12-31 16:44:00      2024-12-31 17:02:00   \n","74997           754878        2024-12-31 19:10:00      2024-12-31 19:23:00   \n","74998           471154        2024-12-31 18:57:00      2024-12-31 19:11:00   \n","74999           955508        2024-12-31 16:42:00      2024-12-31 16:55:00   \n","75000           707644        2024-12-31 16:37:00      2024-12-31 16:45:00   \n","\n","         CreatedBy       Department  DepartmentID      Description  \\\n","0       Employee_7      Maintenance             1      Maintenance   \n","1       Employee_2      Maintenance             1      Maintenance   \n","2      Employee_10      Maintenance             1      Maintenance   \n","3      Employee_30  Noise Complaint             3  Noise Complaint   \n","4      Employee_43  Noise Complaint             3  Noise Complaint   \n","...            ...              ...           ...              ...   \n","74996   Employee_6      Maintenance             1      Maintenance   \n","74997  Employee_15  Noise Complaint             3  Noise Complaint   \n","74998  Employee_45      Maintenance             1      Maintenance   \n","74999   Employee_2  Noise Complaint             3  Noise Complaint   \n","75000   Employee_3      Maintenance             1      Maintenance   \n","\n","      ContactMomentOrigin       Tenant  TenantID  ObjectID     Street  \\\n","0                   email  Tenant_4657      4657       571  Maple Ave   \n","1                   phone  Tenant_4811      4811       758  Maple Ave   \n","2                   phone  Tenant_7924      7924       674    Main St   \n","3                   phone  Tenant_5333      5333       522  Maple Ave   \n","4                   phone  Tenant_4150      4150       535    Main St   \n","...                   ...          ...       ...       ...        ...   \n","74996               email  Tenant_1641      1641       700     Elm St   \n","74997               email  Tenant_8630      8630       526  Maple Ave   \n","74998               phone  Tenant_9070      9070       565  Maple Ave   \n","74999               phone  Tenant_4448      4448       702    Main St   \n","75000               phone  Tenant_5645      5645       571    Main St   \n","\n","            City Postcode     RecID  \n","0        Utrecht   3000CC  R2458591  \n","1      Amsterdam   3000CC  R8038374  \n","2      Rotterdam   1000AA  R2556017  \n","3      Amsterdam   2000BB  R2322047  \n","4      Rotterdam   1000AA  R4905582  \n","...          ...      ...       ...  \n","74996  Rotterdam   3000CC  R1332029  \n","74997  Rotterdam   2000BB  R8336548  \n","74998  Amsterdam   1000AA  R7821508  \n","74999  Rotterdam   3000CC  R7798968  \n","75000  Rotterdam   2000BB  R4399392  \n","\n","[75001 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-6bcac13d-21b9-4a7d-a402-cb1a667a106c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContactMomentID</th>\n","      <th>ContactMomentStartDateTime</th>\n","      <th>ContactMomentEndDateTime</th>\n","      <th>CreatedBy</th>\n","      <th>Department</th>\n","      <th>DepartmentID</th>\n","      <th>Description</th>\n","      <th>ContactMomentOrigin</th>\n","      <th>Tenant</th>\n","      <th>TenantID</th>\n","      <th>ObjectID</th>\n","      <th>Street</th>\n","      <th>City</th>\n","      <th>Postcode</th>\n","      <th>RecID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>872246</td>\n","      <td>2024-01-01 06:47:00</td>\n","      <td>2024-01-01 06:57:00</td>\n","      <td>Employee_7</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4657</td>\n","      <td>4657</td>\n","      <td>571</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R2458591</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>731262</td>\n","      <td>2024-01-01 06:01:00</td>\n","      <td>2024-01-01 06:05:00</td>\n","      <td>Employee_2</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4811</td>\n","      <td>4811</td>\n","      <td>758</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8038374</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>391369</td>\n","      <td>2024-01-01 10:17:00</td>\n","      <td>2024-01-01 10:19:00</td>\n","      <td>Employee_10</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_7924</td>\n","      <td>7924</td>\n","      <td>674</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R2556017</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>865179</td>\n","      <td>2024-01-01 08:54:00</td>\n","      <td>2024-01-01 09:07:00</td>\n","      <td>Employee_30</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_5333</td>\n","      <td>5333</td>\n","      <td>522</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R2322047</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>148050</td>\n","      <td>2024-01-01 11:39:00</td>\n","      <td>2024-01-01 11:52:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4150</td>\n","      <td>4150</td>\n","      <td>535</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4905582</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74996</th>\n","      <td>218884</td>\n","      <td>2024-12-31 16:44:00</td>\n","      <td>2024-12-31 17:02:00</td>\n","      <td>Employee_6</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_1641</td>\n","      <td>1641</td>\n","      <td>700</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R1332029</td>\n","    </tr>\n","    <tr>\n","      <th>74997</th>\n","      <td>754878</td>\n","      <td>2024-12-31 19:10:00</td>\n","      <td>2024-12-31 19:23:00</td>\n","      <td>Employee_15</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_8630</td>\n","      <td>8630</td>\n","      <td>526</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>2000BB</td>\n","      <td>R8336548</td>\n","    </tr>\n","    <tr>\n","      <th>74998</th>\n","      <td>471154</td>\n","      <td>2024-12-31 18:57:00</td>\n","      <td>2024-12-31 19:11:00</td>\n","      <td>Employee_45</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_9070</td>\n","      <td>9070</td>\n","      <td>565</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R7821508</td>\n","    </tr>\n","    <tr>\n","      <th>74999</th>\n","      <td>955508</td>\n","      <td>2024-12-31 16:42:00</td>\n","      <td>2024-12-31 16:55:00</td>\n","      <td>Employee_2</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4448</td>\n","      <td>4448</td>\n","      <td>702</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R7798968</td>\n","    </tr>\n","    <tr>\n","      <th>75000</th>\n","      <td>707644</td>\n","      <td>2024-12-31 16:37:00</td>\n","      <td>2024-12-31 16:45:00</td>\n","      <td>Employee_3</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_5645</td>\n","      <td>5645</td>\n","      <td>571</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>2000BB</td>\n","      <td>R4399392</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>75001 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bcac13d-21b9-4a7d-a402-cb1a667a106c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6bcac13d-21b9-4a7d-a402-cb1a667a106c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6bcac13d-21b9-4a7d-a402-cb1a667a106c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2a62fed8-432b-4ab0-86c0-b360dbe4c7ea\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a62fed8-432b-4ab0-86c0-b360dbe4c7ea')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2a62fed8-432b-4ab0-86c0-b360dbe4c7ea button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5dc75e53-dddf-48f9-8e82-a92f14b2924d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5dc75e53-dddf-48f9-8e82-a92f14b2924d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 75001,\n  \"fields\": [\n    {\n      \"column\": \"ContactMomentID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 259312,\n        \"min\": 100034,\n        \"max\": 999977,\n        \"num_unique_values\": 71890,\n        \"samples\": [\n          360321,\n          421299,\n          943853\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentStartDateTime\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 66254,\n        \"samples\": [\n          \"2024-10-17 06:44:00\",\n          \"2024-08-24 19:16:00\",\n          \"2024-08-30 07:12:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentEndDateTime\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 66251,\n        \"samples\": [\n          \"2024-09-13 18:43:00\",\n          \"2024-02-12 16:16:00\",\n          \"2024-06-11 19:54:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CreatedBy\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 50,\n        \"samples\": [\n          \"Employee_20\",\n          \"Employee_6\",\n          \"Employee_35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Maintenance\",\n          \"Noise Complaint\",\n          \"Repairs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DepartmentID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Description\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Maintenance\",\n          \"Noise Complaint\",\n          \"Repairs\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentOrigin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"phone\",\n          \"email\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenant\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8999,\n        \"samples\": [\n          \"Tenant_4989\",\n          \"Tenant_6859\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenantID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2596,\n        \"min\": 1000,\n        \"max\": 9999,\n        \"num_unique_values\": 8999,\n        \"samples\": [\n          4989,\n          6859\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ObjectID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87,\n        \"min\": 500,\n        \"max\": 800,\n        \"num_unique_values\": 301,\n        \"samples\": [\n          500,\n          762\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Street\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Maple Ave\",\n          \"Main St\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Utrecht\",\n          \"Amsterdam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postcode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"3000CC\",\n          \"1000AA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RecID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 74674,\n        \"samples\": [\n          \"R2200018\",\n          \"R8443102\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["#2.Data Cleaning and Preprocessing"],"metadata":{"id":"k0XcsF_DZc9b"}},{"cell_type":"markdown","source":["##2.1.Data type Issue"],"metadata":{"id":"aCfq-GqIZg66"}},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cHO8sNLv6L_w","executionInfo":{"status":"ok","timestamp":1751050578722,"user_tz":-300,"elapsed":34,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"8bf144a9-3984-45f5-f5c2-b5874481940e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 75001 entries, 0 to 75000\n","Data columns (total 15 columns):\n"," #   Column                      Non-Null Count  Dtype \n","---  ------                      --------------  ----- \n"," 0   ContactMomentID             75001 non-null  int64 \n"," 1   ContactMomentStartDateTime  75001 non-null  object\n"," 2   ContactMomentEndDateTime    75001 non-null  object\n"," 3   CreatedBy                   75001 non-null  object\n"," 4   Department                  75001 non-null  object\n"," 5   DepartmentID                75001 non-null  int64 \n"," 6   Description                 75001 non-null  object\n"," 7   ContactMomentOrigin         75001 non-null  object\n"," 8   Tenant                      75001 non-null  object\n"," 9   TenantID                    75001 non-null  int64 \n"," 10  ObjectID                    75001 non-null  int64 \n"," 11  Street                      75001 non-null  object\n"," 12  City                        75001 non-null  object\n"," 13  Postcode                    75001 non-null  object\n"," 14  RecID                       75001 non-null  object\n","dtypes: int64(4), object(11)\n","memory usage: 8.6+ MB\n"]}]},{"cell_type":"code","source":["df['ContactMomentStartDateTime'] = pd.to_datetime(df['ContactMomentStartDateTime'])\n","df['ContactMomentEndDateTime'] = pd.to_datetime(df['ContactMomentEndDateTime'])\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xF7TDocR7tS9","executionInfo":{"status":"ok","timestamp":1751050578818,"user_tz":-300,"elapsed":95,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"c476f8fa-f83f-449d-c708-85573dcd01f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 75001 entries, 0 to 75000\n","Data columns (total 15 columns):\n"," #   Column                      Non-Null Count  Dtype         \n","---  ------                      --------------  -----         \n"," 0   ContactMomentID             75001 non-null  int64         \n"," 1   ContactMomentStartDateTime  75001 non-null  datetime64[ns]\n"," 2   ContactMomentEndDateTime    75001 non-null  datetime64[ns]\n"," 3   CreatedBy                   75001 non-null  object        \n"," 4   Department                  75001 non-null  object        \n"," 5   DepartmentID                75001 non-null  int64         \n"," 6   Description                 75001 non-null  object        \n"," 7   ContactMomentOrigin         75001 non-null  object        \n"," 8   Tenant                      75001 non-null  object        \n"," 9   TenantID                    75001 non-null  int64         \n"," 10  ObjectID                    75001 non-null  int64         \n"," 11  Street                      75001 non-null  object        \n"," 12  City                        75001 non-null  object        \n"," 13  Postcode                    75001 non-null  object        \n"," 14  RecID                       75001 non-null  object        \n","dtypes: datetime64[ns](2), int64(4), object(9)\n","memory usage: 8.6+ MB\n"]}]},{"cell_type":"markdown","source":["##2.2.Feature Extraction(get_part_of_day)"],"metadata":{"id":"lXHRkEfZZozo"}},{"cell_type":"code","source":["# Extract hour\n","df['Hour'] = df['ContactMomentStartDateTime'].dt.hour\n","\n","# Define part of day\n","def get_part_of_day(hour):\n","    if 6 <= hour < 12:\n","        return 'morning'\n","    elif 12 <= hour < 16:\n","        return 'noon'\n","    else:\n","        return 'afternoon'\n","\n","df['PartOfDay'] = df['Hour'].apply(get_part_of_day)\n","df.sample(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"ADvqS7Pq7um2","executionInfo":{"status":"ok","timestamp":1751050578935,"user_tz":-300,"elapsed":112,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a32abc8f-a782-4a70-edb6-2fea8ec397be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ContactMomentID ContactMomentStartDateTime ContactMomentEndDateTime  \\\n","45844           108477        2024-08-12 07:46:00      2024-08-12 07:58:00   \n","5035            544134        2024-01-25 12:58:00      2024-01-25 13:17:00   \n","11429           601627        2024-02-26 15:43:00      2024-02-26 15:46:00   \n","56966           406090        2024-10-05 09:06:00      2024-10-05 09:23:00   \n","50813           584335        2024-09-05 14:07:00      2024-09-05 14:15:00   \n","69316           494918        2024-12-04 15:36:00      2024-12-04 15:49:00   \n","30364           170545        2024-05-28 17:48:00      2024-05-28 17:58:00   \n","59638           480308        2024-10-17 16:31:00      2024-10-17 16:37:00   \n","11537           406714        2024-02-27 06:38:00      2024-02-27 06:46:00   \n","42692           949264        2024-07-27 16:11:00      2024-07-27 16:26:00   \n","\n","         CreatedBy       Department  DepartmentID      Description  \\\n","45844  Employee_18          Repairs             2          Repairs   \n","5035   Employee_37  Noise Complaint             3  Noise Complaint   \n","11429   Employee_6          Repairs             2          Repairs   \n","56966  Employee_36  Noise Complaint             3  Noise Complaint   \n","50813  Employee_48  Noise Complaint             3  Noise Complaint   \n","69316  Employee_32      Maintenance             1      Maintenance   \n","30364  Employee_30          Repairs             2          Repairs   \n","59638   Employee_3          Repairs             2          Repairs   \n","11537  Employee_50          Repairs             2          Repairs   \n","42692  Employee_25      Maintenance             1      Maintenance   \n","\n","      ContactMomentOrigin       Tenant  TenantID  ObjectID     Street  \\\n","45844               phone  Tenant_8196      8196       732    Main St   \n","5035                phone  Tenant_6488      6488       522    Main St   \n","11429               email  Tenant_7733      7733       630     Elm St   \n","56966               phone  Tenant_1287      1287       631     Elm St   \n","50813               email  Tenant_4221      4221       652     Elm St   \n","69316               phone  Tenant_2381      2381       577    Main St   \n","30364               email  Tenant_5815      5815       701    Main St   \n","59638               email  Tenant_4496      4496       770  Maple Ave   \n","11537               phone  Tenant_9898      9898       536     Elm St   \n","42692               phone  Tenant_4759      4759       503    Main St   \n","\n","            City Postcode     RecID  Hour  PartOfDay  \n","45844  Amsterdam   2000BB  R2876216     7    morning  \n","5035   Amsterdam   1000AA  R4734158    12       noon  \n","11429  Amsterdam   1000AA  R3114018    15       noon  \n","56966  Rotterdam   3000CC  R8653828     9    morning  \n","50813    Utrecht   3000CC  R7259922    14       noon  \n","69316  Amsterdam   1000AA  R6973590    15       noon  \n","30364    Utrecht   3000CC  R1317416    17  afternoon  \n","59638    Utrecht   2000BB  R7981770    16  afternoon  \n","11537  Rotterdam   3000CC  R2714530     6    morning  \n","42692    Utrecht   3000CC  R3889027    16  afternoon  "],"text/html":["\n","  <div id=\"df-821f0a27-26f7-4dfc-9ed7-10c8b426cb8b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContactMomentID</th>\n","      <th>ContactMomentStartDateTime</th>\n","      <th>ContactMomentEndDateTime</th>\n","      <th>CreatedBy</th>\n","      <th>Department</th>\n","      <th>DepartmentID</th>\n","      <th>Description</th>\n","      <th>ContactMomentOrigin</th>\n","      <th>Tenant</th>\n","      <th>TenantID</th>\n","      <th>ObjectID</th>\n","      <th>Street</th>\n","      <th>City</th>\n","      <th>Postcode</th>\n","      <th>RecID</th>\n","      <th>Hour</th>\n","      <th>PartOfDay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>45844</th>\n","      <td>108477</td>\n","      <td>2024-08-12 07:46:00</td>\n","      <td>2024-08-12 07:58:00</td>\n","      <td>Employee_18</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>phone</td>\n","      <td>Tenant_8196</td>\n","      <td>8196</td>\n","      <td>732</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R2876216</td>\n","      <td>7</td>\n","      <td>morning</td>\n","    </tr>\n","    <tr>\n","      <th>5035</th>\n","      <td>544134</td>\n","      <td>2024-01-25 12:58:00</td>\n","      <td>2024-01-25 13:17:00</td>\n","      <td>Employee_37</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_6488</td>\n","      <td>6488</td>\n","      <td>522</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R4734158</td>\n","      <td>12</td>\n","      <td>noon</td>\n","    </tr>\n","    <tr>\n","      <th>11429</th>\n","      <td>601627</td>\n","      <td>2024-02-26 15:43:00</td>\n","      <td>2024-02-26 15:46:00</td>\n","      <td>Employee_6</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_7733</td>\n","      <td>7733</td>\n","      <td>630</td>\n","      <td>Elm St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R3114018</td>\n","      <td>15</td>\n","      <td>noon</td>\n","    </tr>\n","    <tr>\n","      <th>56966</th>\n","      <td>406090</td>\n","      <td>2024-10-05 09:06:00</td>\n","      <td>2024-10-05 09:23:00</td>\n","      <td>Employee_36</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_1287</td>\n","      <td>1287</td>\n","      <td>631</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R8653828</td>\n","      <td>9</td>\n","      <td>morning</td>\n","    </tr>\n","    <tr>\n","      <th>50813</th>\n","      <td>584335</td>\n","      <td>2024-09-05 14:07:00</td>\n","      <td>2024-09-05 14:15:00</td>\n","      <td>Employee_48</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_4221</td>\n","      <td>4221</td>\n","      <td>652</td>\n","      <td>Elm St</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R7259922</td>\n","      <td>14</td>\n","      <td>noon</td>\n","    </tr>\n","    <tr>\n","      <th>69316</th>\n","      <td>494918</td>\n","      <td>2024-12-04 15:36:00</td>\n","      <td>2024-12-04 15:49:00</td>\n","      <td>Employee_32</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_2381</td>\n","      <td>2381</td>\n","      <td>577</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R6973590</td>\n","      <td>15</td>\n","      <td>noon</td>\n","    </tr>\n","    <tr>\n","      <th>30364</th>\n","      <td>170545</td>\n","      <td>2024-05-28 17:48:00</td>\n","      <td>2024-05-28 17:58:00</td>\n","      <td>Employee_30</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_5815</td>\n","      <td>5815</td>\n","      <td>701</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R1317416</td>\n","      <td>17</td>\n","      <td>afternoon</td>\n","    </tr>\n","    <tr>\n","      <th>59638</th>\n","      <td>480308</td>\n","      <td>2024-10-17 16:31:00</td>\n","      <td>2024-10-17 16:37:00</td>\n","      <td>Employee_3</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_4496</td>\n","      <td>4496</td>\n","      <td>770</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R7981770</td>\n","      <td>16</td>\n","      <td>afternoon</td>\n","    </tr>\n","    <tr>\n","      <th>11537</th>\n","      <td>406714</td>\n","      <td>2024-02-27 06:38:00</td>\n","      <td>2024-02-27 06:46:00</td>\n","      <td>Employee_50</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>phone</td>\n","      <td>Tenant_9898</td>\n","      <td>9898</td>\n","      <td>536</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R2714530</td>\n","      <td>6</td>\n","      <td>morning</td>\n","    </tr>\n","    <tr>\n","      <th>42692</th>\n","      <td>949264</td>\n","      <td>2024-07-27 16:11:00</td>\n","      <td>2024-07-27 16:26:00</td>\n","      <td>Employee_25</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4759</td>\n","      <td>4759</td>\n","      <td>503</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R3889027</td>\n","      <td>16</td>\n","      <td>afternoon</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-821f0a27-26f7-4dfc-9ed7-10c8b426cb8b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-821f0a27-26f7-4dfc-9ed7-10c8b426cb8b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-821f0a27-26f7-4dfc-9ed7-10c8b426cb8b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2d8b620d-1e51-416c-b6ae-96cbedc9fcd4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d8b620d-1e51-416c-b6ae-96cbedc9fcd4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2d8b620d-1e51-416c-b6ae-96cbedc9fcd4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"ContactMomentID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 234416,\n        \"min\": 108477,\n        \"max\": 949264,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          406714,\n          544134,\n          494918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentStartDateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-25 12:58:00\",\n        \"max\": \"2024-12-04 15:36:00\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2024-02-27 06:38:00\",\n          \"2024-01-25 12:58:00\",\n          \"2024-12-04 15:36:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentEndDateTime\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-25 13:17:00\",\n        \"max\": \"2024-12-04 15:49:00\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2024-02-27 06:46:00\",\n          \"2024-01-25 13:17:00\",\n          \"2024-12-04 15:49:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CreatedBy\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Employee_50\",\n          \"Employee_37\",\n          \"Employee_32\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Repairs\",\n          \"Noise Complaint\",\n          \"Maintenance\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DepartmentID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Description\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Repairs\",\n          \"Noise Complaint\",\n          \"Maintenance\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContactMomentOrigin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"email\",\n          \"phone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenant\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Tenant_9898\",\n          \"Tenant_6488\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenantID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2652,\n        \"min\": 1287,\n        \"max\": 9898,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9898,\n          6488\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ObjectID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91,\n        \"min\": 503,\n        \"max\": 770,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          536,\n          522\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Street\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Main St\",\n          \"Elm St\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Amsterdam\",\n          \"Rotterdam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postcode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2000BB\",\n          \"1000AA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RecID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"R2714530\",\n          \"R4734158\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12,\n          17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"morning\",\n          \"noon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["##2.3.Feature Extraction from ContactMomentStartDateTime"],"metadata":{"id":"TaahOAlrZ0mD"}},{"cell_type":"code","source":["# Extract date\n","df['Date'] = df['ContactMomentStartDateTime'].dt.date\n","# With week value 0 consider Monday\n","df['DayOfWeek'] = df['ContactMomentStartDateTime'].dt.dayofweek\n","df['IsWeekend'] = df['DayOfWeek'].isin([5, 6]).astype(int)\n","df['Month'] = df['ContactMomentStartDateTime'].dt.month\n","df['day_of_year'] = df['ContactMomentStartDateTime'].dt.day_of_year\n","df['week_of_year'] = df['ContactMomentStartDateTime'].dt.isocalendar().week\n","df['quarter'] = df['ContactMomentStartDateTime'].dt.quarter\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"2uN2pMa-70q3","executionInfo":{"status":"ok","timestamp":1751050579099,"user_tz":-300,"elapsed":159,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"62844ea4-aa75-468e-a7a0-a38c3076978f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ContactMomentID ContactMomentStartDateTime ContactMomentEndDateTime  \\\n","0           872246        2024-01-01 06:47:00      2024-01-01 06:57:00   \n","1           731262        2024-01-01 06:01:00      2024-01-01 06:05:00   \n","2           391369        2024-01-01 10:17:00      2024-01-01 10:19:00   \n","3           865179        2024-01-01 08:54:00      2024-01-01 09:07:00   \n","4           148050        2024-01-01 11:39:00      2024-01-01 11:52:00   \n","\n","     CreatedBy       Department  DepartmentID      Description  \\\n","0   Employee_7      Maintenance             1      Maintenance   \n","1   Employee_2      Maintenance             1      Maintenance   \n","2  Employee_10      Maintenance             1      Maintenance   \n","3  Employee_30  Noise Complaint             3  Noise Complaint   \n","4  Employee_43  Noise Complaint             3  Noise Complaint   \n","\n","  ContactMomentOrigin       Tenant  TenantID  ObjectID     Street       City  \\\n","0               email  Tenant_4657      4657       571  Maple Ave    Utrecht   \n","1               phone  Tenant_4811      4811       758  Maple Ave  Amsterdam   \n","2               phone  Tenant_7924      7924       674    Main St  Rotterdam   \n","3               phone  Tenant_5333      5333       522  Maple Ave  Amsterdam   \n","4               phone  Tenant_4150      4150       535    Main St  Rotterdam   \n","\n","  Postcode     RecID  Hour PartOfDay        Date  DayOfWeek  IsWeekend  Month  \\\n","0   3000CC  R2458591     6   morning  2024-01-01          0          0      1   \n","1   3000CC  R8038374     6   morning  2024-01-01          0          0      1   \n","2   1000AA  R2556017    10   morning  2024-01-01          0          0      1   \n","3   2000BB  R2322047     8   morning  2024-01-01          0          0      1   \n","4   1000AA  R4905582    11   morning  2024-01-01          0          0      1   \n","\n","   day_of_year  week_of_year  quarter  \n","0            1             1        1  \n","1            1             1        1  \n","2            1             1        1  \n","3            1             1        1  \n","4            1             1        1  "],"text/html":["\n","  <div id=\"df-3b6a6180-5d53-40e7-9190-beae4994b2d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContactMomentID</th>\n","      <th>ContactMomentStartDateTime</th>\n","      <th>ContactMomentEndDateTime</th>\n","      <th>CreatedBy</th>\n","      <th>Department</th>\n","      <th>DepartmentID</th>\n","      <th>Description</th>\n","      <th>ContactMomentOrigin</th>\n","      <th>Tenant</th>\n","      <th>TenantID</th>\n","      <th>ObjectID</th>\n","      <th>Street</th>\n","      <th>City</th>\n","      <th>Postcode</th>\n","      <th>RecID</th>\n","      <th>Hour</th>\n","      <th>PartOfDay</th>\n","      <th>Date</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>872246</td>\n","      <td>2024-01-01 06:47:00</td>\n","      <td>2024-01-01 06:57:00</td>\n","      <td>Employee_7</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4657</td>\n","      <td>4657</td>\n","      <td>571</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R2458591</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>731262</td>\n","      <td>2024-01-01 06:01:00</td>\n","      <td>2024-01-01 06:05:00</td>\n","      <td>Employee_2</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4811</td>\n","      <td>4811</td>\n","      <td>758</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8038374</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>391369</td>\n","      <td>2024-01-01 10:17:00</td>\n","      <td>2024-01-01 10:19:00</td>\n","      <td>Employee_10</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_7924</td>\n","      <td>7924</td>\n","      <td>674</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R2556017</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>865179</td>\n","      <td>2024-01-01 08:54:00</td>\n","      <td>2024-01-01 09:07:00</td>\n","      <td>Employee_30</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_5333</td>\n","      <td>5333</td>\n","      <td>522</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R2322047</td>\n","      <td>8</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>148050</td>\n","      <td>2024-01-01 11:39:00</td>\n","      <td>2024-01-01 11:52:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4150</td>\n","      <td>4150</td>\n","      <td>535</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4905582</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b6a6180-5d53-40e7-9190-beae4994b2d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b6a6180-5d53-40e7-9190-beae4994b2d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b6a6180-5d53-40e7-9190-beae4994b2d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f02e6ddc-338a-4d83-b1ef-3530f35f33a3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f02e6ddc-338a-4d83-b1ef-3530f35f33a3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f02e6ddc-338a-4d83-b1ef-3530f35f33a3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["##2.4.Calculate duration of each call (optional)"],"metadata":{"id":"BbD88uZpaGYK"}},{"cell_type":"code","source":["df['DurationMinutes'] = (df['ContactMomentEndDateTime'] - df['ContactMomentStartDateTime']).dt.total_seconds() / 60\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"b7Lb2oOI8FG9","executionInfo":{"status":"ok","timestamp":1751050579103,"user_tz":-300,"elapsed":3,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"d4838a8d-9d80-40e2-ebf0-9ecb24973448"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ContactMomentID ContactMomentStartDateTime ContactMomentEndDateTime  \\\n","0           872246        2024-01-01 06:47:00      2024-01-01 06:57:00   \n","1           731262        2024-01-01 06:01:00      2024-01-01 06:05:00   \n","2           391369        2024-01-01 10:17:00      2024-01-01 10:19:00   \n","3           865179        2024-01-01 08:54:00      2024-01-01 09:07:00   \n","4           148050        2024-01-01 11:39:00      2024-01-01 11:52:00   \n","\n","     CreatedBy       Department  DepartmentID      Description  \\\n","0   Employee_7      Maintenance             1      Maintenance   \n","1   Employee_2      Maintenance             1      Maintenance   \n","2  Employee_10      Maintenance             1      Maintenance   \n","3  Employee_30  Noise Complaint             3  Noise Complaint   \n","4  Employee_43  Noise Complaint             3  Noise Complaint   \n","\n","  ContactMomentOrigin       Tenant  TenantID  ObjectID     Street       City  \\\n","0               email  Tenant_4657      4657       571  Maple Ave    Utrecht   \n","1               phone  Tenant_4811      4811       758  Maple Ave  Amsterdam   \n","2               phone  Tenant_7924      7924       674    Main St  Rotterdam   \n","3               phone  Tenant_5333      5333       522  Maple Ave  Amsterdam   \n","4               phone  Tenant_4150      4150       535    Main St  Rotterdam   \n","\n","  Postcode     RecID  Hour PartOfDay        Date  DayOfWeek  IsWeekend  Month  \\\n","0   3000CC  R2458591     6   morning  2024-01-01          0          0      1   \n","1   3000CC  R8038374     6   morning  2024-01-01          0          0      1   \n","2   1000AA  R2556017    10   morning  2024-01-01          0          0      1   \n","3   2000BB  R2322047     8   morning  2024-01-01          0          0      1   \n","4   1000AA  R4905582    11   morning  2024-01-01          0          0      1   \n","\n","   day_of_year  week_of_year  quarter  DurationMinutes  \n","0            1             1        1             10.0  \n","1            1             1        1              4.0  \n","2            1             1        1              2.0  \n","3            1             1        1             13.0  \n","4            1             1        1             13.0  "],"text/html":["\n","  <div id=\"df-95c15968-bd6c-4619-8011-752bdb07128d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContactMomentID</th>\n","      <th>ContactMomentStartDateTime</th>\n","      <th>ContactMomentEndDateTime</th>\n","      <th>CreatedBy</th>\n","      <th>Department</th>\n","      <th>DepartmentID</th>\n","      <th>Description</th>\n","      <th>ContactMomentOrigin</th>\n","      <th>Tenant</th>\n","      <th>TenantID</th>\n","      <th>ObjectID</th>\n","      <th>Street</th>\n","      <th>City</th>\n","      <th>Postcode</th>\n","      <th>RecID</th>\n","      <th>Hour</th>\n","      <th>PartOfDay</th>\n","      <th>Date</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>DurationMinutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>872246</td>\n","      <td>2024-01-01 06:47:00</td>\n","      <td>2024-01-01 06:57:00</td>\n","      <td>Employee_7</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4657</td>\n","      <td>4657</td>\n","      <td>571</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R2458591</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>731262</td>\n","      <td>2024-01-01 06:01:00</td>\n","      <td>2024-01-01 06:05:00</td>\n","      <td>Employee_2</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4811</td>\n","      <td>4811</td>\n","      <td>758</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8038374</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>391369</td>\n","      <td>2024-01-01 10:17:00</td>\n","      <td>2024-01-01 10:19:00</td>\n","      <td>Employee_10</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_7924</td>\n","      <td>7924</td>\n","      <td>674</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R2556017</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>865179</td>\n","      <td>2024-01-01 08:54:00</td>\n","      <td>2024-01-01 09:07:00</td>\n","      <td>Employee_30</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_5333</td>\n","      <td>5333</td>\n","      <td>522</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R2322047</td>\n","      <td>8</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>148050</td>\n","      <td>2024-01-01 11:39:00</td>\n","      <td>2024-01-01 11:52:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4150</td>\n","      <td>4150</td>\n","      <td>535</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4905582</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95c15968-bd6c-4619-8011-752bdb07128d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-95c15968-bd6c-4619-8011-752bdb07128d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-95c15968-bd6c-4619-8011-752bdb07128d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5dc87aba-f923-433a-89d9-0e843959f659\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5dc87aba-f923-433a-89d9-0e843959f659')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5dc87aba-f923-433a-89d9-0e843959f659 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["##2.5.Calculate call and email per part of the day"],"metadata":{"id":"EpXYTqtkaPF7"}},{"cell_type":"code","source":["# Group by date and part of day\n","df_counts = df.groupby(['Date', 'PartOfDay', 'ContactMomentOrigin']).size().unstack(fill_value=0).reset_index()\n","\n","# Rename targets\n","df_counts = df_counts.rename(columns={\n","    'phone': 'NumCalls',\n","    'email': 'NumEmails'\n","})\n","df_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"rmtpFQZO8Jwo","executionInfo":{"status":"ok","timestamp":1751050579149,"user_tz":-300,"elapsed":44,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"3c75e9a9-ebaf-49cb-cc01-1a313bea3fd5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ContactMomentOrigin        Date  PartOfDay  NumEmails  NumCalls\n","0                    2024-01-01  afternoon         24        38\n","1                    2024-01-01    morning         34        36\n","2                    2024-01-01       noon         32        33\n","3                    2024-01-02  afternoon         25        37\n","4                    2024-01-02    morning         29        36\n","...                         ...        ...        ...       ...\n","1093                 2024-12-30    morning         26        30\n","1094                 2024-12-30       noon         35        24\n","1095                 2024-12-31  afternoon         30        48\n","1096                 2024-12-31    morning         29        43\n","1097                 2024-12-31       noon         27        40\n","\n","[1098 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-8b2aae0d-1c95-48e5-bc9a-4debe2027297\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>ContactMomentOrigin</th>\n","      <th>Date</th>\n","      <th>PartOfDay</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01</td>\n","      <td>afternoon</td>\n","      <td>24</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01</td>\n","      <td>morning</td>\n","      <td>34</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-01</td>\n","      <td>noon</td>\n","      <td>32</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-02</td>\n","      <td>afternoon</td>\n","      <td>25</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-02</td>\n","      <td>morning</td>\n","      <td>29</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>morning</td>\n","      <td>26</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>noon</td>\n","      <td>35</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>afternoon</td>\n","      <td>30</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>morning</td>\n","      <td>29</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>noon</td>\n","      <td>27</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1098 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b2aae0d-1c95-48e5-bc9a-4debe2027297')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b2aae0d-1c95-48e5-bc9a-4debe2027297 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b2aae0d-1c95-48e5-bc9a-4debe2027297');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2f3dcdfc-9dd1-448d-981f-4c806f9b248c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f3dcdfc-9dd1-448d-981f-4c806f9b248c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2f3dcdfc-9dd1-448d-981f-4c806f9b248c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_a4d32158-3851-4ffd-9593-73f90d54a912\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_counts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a4d32158-3851-4ffd-9593-73f90d54a912 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_counts');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_counts","summary":"{\n  \"name\": \"df_counts\",\n  \"rows\": 1098,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01\",\n        \"max\": \"2024-12-31\",\n        \"num_unique_values\": 366,\n        \"samples\": [\n          \"2024-07-12\",\n          \"2024-02-03\",\n          \"2024-01-16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"afternoon\",\n          \"morning\",\n          \"noon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumEmails\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 13,\n        \"max\": 47,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          43,\n          27,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumCalls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 22,\n        \"max\": 60,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          24,\n          22,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["##2.6.Data merging with required features (drop unnecessary features)"],"metadata":{"id":"DsXLQKj1abpg"}},{"cell_type":"code","source":["df.head(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Fxp4btTHoRvT","executionInfo":{"status":"ok","timestamp":1751050579238,"user_tz":-300,"elapsed":74,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"315e274c-9fe1-4b47-dccf-d85c2916cb42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    ContactMomentID ContactMomentStartDateTime ContactMomentEndDateTime  \\\n","0            872246        2024-01-01 06:47:00      2024-01-01 06:57:00   \n","1            731262        2024-01-01 06:01:00      2024-01-01 06:05:00   \n","2            391369        2024-01-01 10:17:00      2024-01-01 10:19:00   \n","3            865179        2024-01-01 08:54:00      2024-01-01 09:07:00   \n","4            148050        2024-01-01 11:39:00      2024-01-01 11:52:00   \n","5            488162        2024-01-01 09:17:00      2024-01-01 09:33:00   \n","6            383060        2024-01-01 07:34:00      2024-01-01 07:43:00   \n","7            169403        2024-01-01 06:14:00      2024-01-01 06:17:00   \n","8            358607        2024-01-01 09:56:00      2024-01-01 10:12:00   \n","9            195325        2024-01-01 09:23:00      2024-01-01 09:32:00   \n","10           654816        2024-01-01 09:38:00      2024-01-01 09:42:00   \n","11           407757        2024-01-01 10:48:00      2024-01-01 10:58:00   \n","12           738551        2024-01-01 07:32:00      2024-01-01 07:37:00   \n","13           972064        2024-01-01 10:20:00      2024-01-01 10:37:00   \n","14           791798        2024-01-01 09:52:00      2024-01-01 09:56:00   \n","15           518373        2024-01-01 09:13:00      2024-01-01 09:32:00   \n","16           341292        2024-01-01 07:14:00      2024-01-01 07:18:00   \n","17           392004        2024-01-01 06:55:00      2024-01-01 07:07:00   \n","18           299659        2024-01-01 10:36:00      2024-01-01 10:53:00   \n","19           522179        2024-01-01 09:55:00      2024-01-01 09:58:00   \n","20           361941        2024-01-01 09:08:00      2024-01-01 09:23:00   \n","21           526156        2024-01-01 10:53:00      2024-01-01 10:55:00   \n","22           830429        2024-01-01 06:24:00      2024-01-01 06:34:00   \n","23           884309        2024-01-01 08:13:00      2024-01-01 08:16:00   \n","24           171849        2024-01-01 10:10:00      2024-01-01 10:13:00   \n","25           539589        2024-01-01 10:15:00      2024-01-01 10:35:00   \n","26           237235        2024-01-01 07:42:00      2024-01-01 07:54:00   \n","27           663750        2024-01-01 06:00:00      2024-01-01 06:16:00   \n","28           837715        2024-01-01 07:23:00      2024-01-01 07:34:00   \n","29           212235        2024-01-01 10:19:00      2024-01-01 10:24:00   \n","30           612262        2024-01-01 11:21:00      2024-01-01 11:29:00   \n","31           877236        2024-01-01 06:00:00      2024-01-01 06:12:00   \n","32           710805        2024-01-01 11:57:00      2024-01-01 12:03:00   \n","33           470858        2024-01-01 06:57:00      2024-01-01 07:10:00   \n","34           288073        2024-01-01 07:55:00      2024-01-01 08:02:00   \n","35           309267        2024-01-01 11:06:00      2024-01-01 11:20:00   \n","36           468203        2024-01-01 07:25:00      2024-01-01 07:37:00   \n","37           213668        2024-01-01 06:07:00      2024-01-01 06:17:00   \n","38           146542        2024-01-01 10:07:00      2024-01-01 10:21:00   \n","39           854717        2024-01-01 06:42:00      2024-01-01 06:54:00   \n","40           797229        2024-01-01 11:18:00      2024-01-01 11:37:00   \n","41           736130        2024-01-01 06:19:00      2024-01-01 06:30:00   \n","42           640490        2024-01-01 10:30:00      2024-01-01 10:37:00   \n","43           125611        2024-01-01 07:43:00      2024-01-01 07:54:00   \n","44           519066        2024-01-01 11:36:00      2024-01-01 11:44:00   \n","45           587115        2024-01-01 06:49:00      2024-01-01 07:04:00   \n","46           742412        2024-01-01 09:42:00      2024-01-01 10:00:00   \n","47           980660        2024-01-01 11:55:00      2024-01-01 12:12:00   \n","48           435239        2024-01-01 06:45:00      2024-01-01 06:56:00   \n","49           446954        2024-01-01 07:45:00      2024-01-01 07:53:00   \n","\n","      CreatedBy       Department  DepartmentID      Description  \\\n","0    Employee_7      Maintenance             1      Maintenance   \n","1    Employee_2      Maintenance             1      Maintenance   \n","2   Employee_10      Maintenance             1      Maintenance   \n","3   Employee_30  Noise Complaint             3  Noise Complaint   \n","4   Employee_43  Noise Complaint             3  Noise Complaint   \n","5   Employee_23  Noise Complaint             3  Noise Complaint   \n","6   Employee_41      Maintenance             1      Maintenance   \n","7   Employee_14          Repairs             2          Repairs   \n","8   Employee_48      Maintenance             1      Maintenance   \n","9   Employee_49      Maintenance             1      Maintenance   \n","10  Employee_17          Repairs             2          Repairs   \n","11  Employee_28  Noise Complaint             3  Noise Complaint   \n","12  Employee_13  Noise Complaint             3  Noise Complaint   \n","13  Employee_20      Maintenance             1      Maintenance   \n","14  Employee_31  Noise Complaint             3  Noise Complaint   \n","15  Employee_43  Noise Complaint             3  Noise Complaint   \n","16  Employee_38          Repairs             2          Repairs   \n","17  Employee_43      Maintenance             1      Maintenance   \n","18   Employee_7      Maintenance             1      Maintenance   \n","19  Employee_47  Noise Complaint             3  Noise Complaint   \n","20   Employee_5      Maintenance             1      Maintenance   \n","21  Employee_32      Maintenance             1      Maintenance   \n","22  Employee_47          Repairs             2          Repairs   \n","23  Employee_21  Noise Complaint             3  Noise Complaint   \n","24  Employee_39  Noise Complaint             3  Noise Complaint   \n","25  Employee_43  Noise Complaint             3  Noise Complaint   \n","26  Employee_43      Maintenance             1      Maintenance   \n","27  Employee_14  Noise Complaint             3  Noise Complaint   \n","28  Employee_20      Maintenance             1      Maintenance   \n","29  Employee_48      Maintenance             1      Maintenance   \n","30  Employee_17  Noise Complaint             3  Noise Complaint   \n","31  Employee_29      Maintenance             1      Maintenance   \n","32  Employee_36  Noise Complaint             3  Noise Complaint   \n","33  Employee_50      Maintenance             1      Maintenance   \n","34  Employee_48      Maintenance             1      Maintenance   \n","35  Employee_30      Maintenance             1      Maintenance   \n","36  Employee_42          Repairs             2          Repairs   \n","37  Employee_39      Maintenance             1      Maintenance   \n","38  Employee_46  Noise Complaint             3  Noise Complaint   \n","39  Employee_20  Noise Complaint             3  Noise Complaint   \n","40  Employee_25      Maintenance             1      Maintenance   \n","41  Employee_42      Maintenance             1      Maintenance   \n","42  Employee_43  Noise Complaint             3  Noise Complaint   \n","43   Employee_3      Maintenance             1      Maintenance   \n","44  Employee_16  Noise Complaint             3  Noise Complaint   \n","45   Employee_4      Maintenance             1      Maintenance   \n","46  Employee_47  Noise Complaint             3  Noise Complaint   \n","47  Employee_41          Repairs             2          Repairs   \n","48  Employee_35      Maintenance             1      Maintenance   \n","49  Employee_35      Maintenance             1      Maintenance   \n","\n","   ContactMomentOrigin       Tenant  TenantID  ObjectID     Street       City  \\\n","0                email  Tenant_4657      4657       571  Maple Ave    Utrecht   \n","1                phone  Tenant_4811      4811       758  Maple Ave  Amsterdam   \n","2                phone  Tenant_7924      7924       674    Main St  Rotterdam   \n","3                phone  Tenant_5333      5333       522  Maple Ave  Amsterdam   \n","4                phone  Tenant_4150      4150       535    Main St  Rotterdam   \n","5                email  Tenant_6977      6977       583    Main St    Utrecht   \n","6                email  Tenant_8573      8573       694  Maple Ave    Utrecht   \n","7                email  Tenant_7572      7572       637  Maple Ave    Utrecht   \n","8                email  Tenant_5339      5339       571  Maple Ave    Utrecht   \n","9                email  Tenant_9348      9348       752    Main St  Amsterdam   \n","10               email  Tenant_7252      7252       739  Maple Ave  Amsterdam   \n","11               email  Tenant_6573      6573       557    Main St  Rotterdam   \n","12               email  Tenant_5889      5889       759    Main St  Rotterdam   \n","13               email  Tenant_2832      2832       685    Main St  Amsterdam   \n","14               phone  Tenant_3060      3060       565  Maple Ave  Amsterdam   \n","15               email  Tenant_4295      4295       659  Maple Ave  Rotterdam   \n","16               phone  Tenant_1344      1344       783    Main St  Amsterdam   \n","17               phone  Tenant_9423      9423       621     Elm St  Amsterdam   \n","18               email  Tenant_8749      8749       708    Main St    Utrecht   \n","19               phone  Tenant_2612      2612       531     Elm St  Amsterdam   \n","20               phone  Tenant_5563      5563       736     Elm St    Utrecht   \n","21               email  Tenant_4872      4872       585     Elm St  Amsterdam   \n","22               phone  Tenant_5673      5673       716  Maple Ave    Utrecht   \n","23               phone  Tenant_9883      9883       531    Main St  Amsterdam   \n","24               phone  Tenant_2312      2312       595    Main St    Utrecht   \n","25               phone  Tenant_1651      1651       541  Maple Ave    Utrecht   \n","26               email  Tenant_5351      5351       702  Maple Ave  Rotterdam   \n","27               email  Tenant_2638      2638       537  Maple Ave  Rotterdam   \n","28               email  Tenant_8179      8179       778  Maple Ave    Utrecht   \n","29               email  Tenant_5333      5333       559  Maple Ave  Amsterdam   \n","30               email  Tenant_5325      5325       758    Main St  Amsterdam   \n","31               email  Tenant_5291      5291       582  Maple Ave    Utrecht   \n","32               phone  Tenant_1590      1590       689    Main St  Rotterdam   \n","33               phone  Tenant_5088      5088       552  Maple Ave  Rotterdam   \n","34               email  Tenant_7755      7755       512     Elm St  Rotterdam   \n","35               phone  Tenant_8711      8711       613     Elm St  Rotterdam   \n","36               phone  Tenant_2137      2137       642  Maple Ave  Rotterdam   \n","37               phone  Tenant_5349      5349       519     Elm St  Rotterdam   \n","38               phone  Tenant_4114      4114       630     Elm St  Amsterdam   \n","39               phone  Tenant_6143      6143       563  Maple Ave  Rotterdam   \n","40               phone  Tenant_4143      4143       715  Maple Ave    Utrecht   \n","41               phone  Tenant_8043      8043       796     Elm St  Rotterdam   \n","42               email  Tenant_2389      2389       645  Maple Ave    Utrecht   \n","43               email  Tenant_4262      4262       575    Main St  Rotterdam   \n","44               phone  Tenant_7291      7291       753    Main St    Utrecht   \n","45               email  Tenant_3881      3881       765  Maple Ave  Amsterdam   \n","46               phone  Tenant_6198      6198       726  Maple Ave  Rotterdam   \n","47               email  Tenant_5246      5246       626     Elm St    Utrecht   \n","48               phone  Tenant_5451      5451       671    Main St  Amsterdam   \n","49               phone  Tenant_7797      7797       708     Elm St  Rotterdam   \n","\n","   Postcode     RecID  Hour PartOfDay        Date  DayOfWeek  IsWeekend  \\\n","0    3000CC  R2458591     6   morning  2024-01-01          0          0   \n","1    3000CC  R8038374     6   morning  2024-01-01          0          0   \n","2    1000AA  R2556017    10   morning  2024-01-01          0          0   \n","3    2000BB  R2322047     8   morning  2024-01-01          0          0   \n","4    1000AA  R4905582    11   morning  2024-01-01          0          0   \n","5    2000BB  R2197935     9   morning  2024-01-01          0          0   \n","6    1000AA  R6440561     7   morning  2024-01-01          0          0   \n","7    2000BB  R4567281     6   morning  2024-01-01          0          0   \n","8    2000BB  R8187926     9   morning  2024-01-01          0          0   \n","9    1000AA  R3684052     9   morning  2024-01-01          0          0   \n","10   3000CC  R2921859     9   morning  2024-01-01          0          0   \n","11   1000AA  R5418934    10   morning  2024-01-01          0          0   \n","12   1000AA  R9897858     7   morning  2024-01-01          0          0   \n","13   1000AA  R2321324    10   morning  2024-01-01          0          0   \n","14   2000BB  R9852897     9   morning  2024-01-01          0          0   \n","15   2000BB  R9683481     9   morning  2024-01-01          0          0   \n","16   1000AA  R1987737     7   morning  2024-01-01          0          0   \n","17   3000CC  R3219824     6   morning  2024-01-01          0          0   \n","18   2000BB  R6944126    10   morning  2024-01-01          0          0   \n","19   1000AA  R4214348     9   morning  2024-01-01          0          0   \n","20   1000AA  R1848731     9   morning  2024-01-01          0          0   \n","21   2000BB  R1983738    10   morning  2024-01-01          0          0   \n","22   3000CC  R9164991     6   morning  2024-01-01          0          0   \n","23   3000CC  R8999183     8   morning  2024-01-01          0          0   \n","24   1000AA  R7774229    10   morning  2024-01-01          0          0   \n","25   3000CC  R6307805    10   morning  2024-01-01          0          0   \n","26   2000BB  R6304573     7   morning  2024-01-01          0          0   \n","27   1000AA  R6855396     6   morning  2024-01-01          0          0   \n","28   3000CC  R1131249     7   morning  2024-01-01          0          0   \n","29   2000BB  R5727085    10   morning  2024-01-01          0          0   \n","30   3000CC  R8106422    11   morning  2024-01-01          0          0   \n","31   2000BB  R1162230     6   morning  2024-01-01          0          0   \n","32   1000AA  R1701771    11   morning  2024-01-01          0          0   \n","33   3000CC  R3592974     6   morning  2024-01-01          0          0   \n","34   3000CC  R5163555     7   morning  2024-01-01          0          0   \n","35   1000AA  R4740036    11   morning  2024-01-01          0          0   \n","36   3000CC  R9996207     7   morning  2024-01-01          0          0   \n","37   3000CC  R6262632     6   morning  2024-01-01          0          0   \n","38   3000CC  R4305700    10   morning  2024-01-01          0          0   \n","39   3000CC  R7851696     6   morning  2024-01-01          0          0   \n","40   1000AA  R6049101    11   morning  2024-01-01          0          0   \n","41   2000BB  R8418210     6   morning  2024-01-01          0          0   \n","42   2000BB  R2566777    10   morning  2024-01-01          0          0   \n","43   3000CC  R2221854     7   morning  2024-01-01          0          0   \n","44   3000CC  R1093026    11   morning  2024-01-01          0          0   \n","45   1000AA  R8658158     6   morning  2024-01-01          0          0   \n","46   3000CC  R8481188     9   morning  2024-01-01          0          0   \n","47   2000BB  R5013879    11   morning  2024-01-01          0          0   \n","48   1000AA  R4879923     6   morning  2024-01-01          0          0   \n","49   1000AA  R4470105     7   morning  2024-01-01          0          0   \n","\n","    Month  day_of_year  week_of_year  quarter  DurationMinutes  \n","0       1            1             1        1             10.0  \n","1       1            1             1        1              4.0  \n","2       1            1             1        1              2.0  \n","3       1            1             1        1             13.0  \n","4       1            1             1        1             13.0  \n","5       1            1             1        1             16.0  \n","6       1            1             1        1              9.0  \n","7       1            1             1        1              3.0  \n","8       1            1             1        1             16.0  \n","9       1            1             1        1              9.0  \n","10      1            1             1        1              4.0  \n","11      1            1             1        1             10.0  \n","12      1            1             1        1              5.0  \n","13      1            1             1        1             17.0  \n","14      1            1             1        1              4.0  \n","15      1            1             1        1             19.0  \n","16      1            1             1        1              4.0  \n","17      1            1             1        1             12.0  \n","18      1            1             1        1             17.0  \n","19      1            1             1        1              3.0  \n","20      1            1             1        1             15.0  \n","21      1            1             1        1              2.0  \n","22      1            1             1        1             10.0  \n","23      1            1             1        1              3.0  \n","24      1            1             1        1              3.0  \n","25      1            1             1        1             20.0  \n","26      1            1             1        1             12.0  \n","27      1            1             1        1             16.0  \n","28      1            1             1        1             11.0  \n","29      1            1             1        1              5.0  \n","30      1            1             1        1              8.0  \n","31      1            1             1        1             12.0  \n","32      1            1             1        1              6.0  \n","33      1            1             1        1             13.0  \n","34      1            1             1        1              7.0  \n","35      1            1             1        1             14.0  \n","36      1            1             1        1             12.0  \n","37      1            1             1        1             10.0  \n","38      1            1             1        1             14.0  \n","39      1            1             1        1             12.0  \n","40      1            1             1        1             19.0  \n","41      1            1             1        1             11.0  \n","42      1            1             1        1              7.0  \n","43      1            1             1        1             11.0  \n","44      1            1             1        1              8.0  \n","45      1            1             1        1             15.0  \n","46      1            1             1        1             18.0  \n","47      1            1             1        1             17.0  \n","48      1            1             1        1             11.0  \n","49      1            1             1        1              8.0  "],"text/html":["\n","  <div id=\"df-9d0524d6-43b6-4fdf-8fca-ac0db1198962\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContactMomentID</th>\n","      <th>ContactMomentStartDateTime</th>\n","      <th>ContactMomentEndDateTime</th>\n","      <th>CreatedBy</th>\n","      <th>Department</th>\n","      <th>DepartmentID</th>\n","      <th>Description</th>\n","      <th>ContactMomentOrigin</th>\n","      <th>Tenant</th>\n","      <th>TenantID</th>\n","      <th>ObjectID</th>\n","      <th>Street</th>\n","      <th>City</th>\n","      <th>Postcode</th>\n","      <th>RecID</th>\n","      <th>Hour</th>\n","      <th>PartOfDay</th>\n","      <th>Date</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>DurationMinutes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>872246</td>\n","      <td>2024-01-01 06:47:00</td>\n","      <td>2024-01-01 06:57:00</td>\n","      <td>Employee_7</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4657</td>\n","      <td>4657</td>\n","      <td>571</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R2458591</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>731262</td>\n","      <td>2024-01-01 06:01:00</td>\n","      <td>2024-01-01 06:05:00</td>\n","      <td>Employee_2</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4811</td>\n","      <td>4811</td>\n","      <td>758</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8038374</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>391369</td>\n","      <td>2024-01-01 10:17:00</td>\n","      <td>2024-01-01 10:19:00</td>\n","      <td>Employee_10</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_7924</td>\n","      <td>7924</td>\n","      <td>674</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R2556017</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>865179</td>\n","      <td>2024-01-01 08:54:00</td>\n","      <td>2024-01-01 09:07:00</td>\n","      <td>Employee_30</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_5333</td>\n","      <td>5333</td>\n","      <td>522</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R2322047</td>\n","      <td>8</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>148050</td>\n","      <td>2024-01-01 11:39:00</td>\n","      <td>2024-01-01 11:52:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4150</td>\n","      <td>4150</td>\n","      <td>535</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4905582</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>488162</td>\n","      <td>2024-01-01 09:17:00</td>\n","      <td>2024-01-01 09:33:00</td>\n","      <td>Employee_23</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_6977</td>\n","      <td>6977</td>\n","      <td>583</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R2197935</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>383060</td>\n","      <td>2024-01-01 07:34:00</td>\n","      <td>2024-01-01 07:43:00</td>\n","      <td>Employee_41</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_8573</td>\n","      <td>8573</td>\n","      <td>694</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>1000AA</td>\n","      <td>R6440561</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>169403</td>\n","      <td>2024-01-01 06:14:00</td>\n","      <td>2024-01-01 06:17:00</td>\n","      <td>Employee_14</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_7572</td>\n","      <td>7572</td>\n","      <td>637</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R4567281</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>358607</td>\n","      <td>2024-01-01 09:56:00</td>\n","      <td>2024-01-01 10:12:00</td>\n","      <td>Employee_48</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_5339</td>\n","      <td>5339</td>\n","      <td>571</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R8187926</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>195325</td>\n","      <td>2024-01-01 09:23:00</td>\n","      <td>2024-01-01 09:32:00</td>\n","      <td>Employee_49</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_9348</td>\n","      <td>9348</td>\n","      <td>752</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R3684052</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>654816</td>\n","      <td>2024-01-01 09:38:00</td>\n","      <td>2024-01-01 09:42:00</td>\n","      <td>Employee_17</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_7252</td>\n","      <td>7252</td>\n","      <td>739</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R2921859</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>407757</td>\n","      <td>2024-01-01 10:48:00</td>\n","      <td>2024-01-01 10:58:00</td>\n","      <td>Employee_28</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_6573</td>\n","      <td>6573</td>\n","      <td>557</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R5418934</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>738551</td>\n","      <td>2024-01-01 07:32:00</td>\n","      <td>2024-01-01 07:37:00</td>\n","      <td>Employee_13</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_5889</td>\n","      <td>5889</td>\n","      <td>759</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R9897858</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>972064</td>\n","      <td>2024-01-01 10:20:00</td>\n","      <td>2024-01-01 10:37:00</td>\n","      <td>Employee_20</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_2832</td>\n","      <td>2832</td>\n","      <td>685</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R2321324</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>791798</td>\n","      <td>2024-01-01 09:52:00</td>\n","      <td>2024-01-01 09:56:00</td>\n","      <td>Employee_31</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_3060</td>\n","      <td>3060</td>\n","      <td>565</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R9852897</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>518373</td>\n","      <td>2024-01-01 09:13:00</td>\n","      <td>2024-01-01 09:32:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_4295</td>\n","      <td>4295</td>\n","      <td>659</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>2000BB</td>\n","      <td>R9683481</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>341292</td>\n","      <td>2024-01-01 07:14:00</td>\n","      <td>2024-01-01 07:18:00</td>\n","      <td>Employee_38</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>phone</td>\n","      <td>Tenant_1344</td>\n","      <td>1344</td>\n","      <td>783</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R1987737</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>392004</td>\n","      <td>2024-01-01 06:55:00</td>\n","      <td>2024-01-01 07:07:00</td>\n","      <td>Employee_43</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_9423</td>\n","      <td>9423</td>\n","      <td>621</td>\n","      <td>Elm St</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R3219824</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>299659</td>\n","      <td>2024-01-01 10:36:00</td>\n","      <td>2024-01-01 10:53:00</td>\n","      <td>Employee_7</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_8749</td>\n","      <td>8749</td>\n","      <td>708</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R6944126</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>522179</td>\n","      <td>2024-01-01 09:55:00</td>\n","      <td>2024-01-01 09:58:00</td>\n","      <td>Employee_47</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_2612</td>\n","      <td>2612</td>\n","      <td>531</td>\n","      <td>Elm St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R4214348</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>361941</td>\n","      <td>2024-01-01 09:08:00</td>\n","      <td>2024-01-01 09:23:00</td>\n","      <td>Employee_5</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_5563</td>\n","      <td>5563</td>\n","      <td>736</td>\n","      <td>Elm St</td>\n","      <td>Utrecht</td>\n","      <td>1000AA</td>\n","      <td>R1848731</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>526156</td>\n","      <td>2024-01-01 10:53:00</td>\n","      <td>2024-01-01 10:55:00</td>\n","      <td>Employee_32</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4872</td>\n","      <td>4872</td>\n","      <td>585</td>\n","      <td>Elm St</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R1983738</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>830429</td>\n","      <td>2024-01-01 06:24:00</td>\n","      <td>2024-01-01 06:34:00</td>\n","      <td>Employee_47</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>phone</td>\n","      <td>Tenant_5673</td>\n","      <td>5673</td>\n","      <td>716</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R9164991</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>884309</td>\n","      <td>2024-01-01 08:13:00</td>\n","      <td>2024-01-01 08:16:00</td>\n","      <td>Employee_21</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_9883</td>\n","      <td>9883</td>\n","      <td>531</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8999183</td>\n","      <td>8</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>171849</td>\n","      <td>2024-01-01 10:10:00</td>\n","      <td>2024-01-01 10:13:00</td>\n","      <td>Employee_39</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_2312</td>\n","      <td>2312</td>\n","      <td>595</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>1000AA</td>\n","      <td>R7774229</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>539589</td>\n","      <td>2024-01-01 10:15:00</td>\n","      <td>2024-01-01 10:35:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_1651</td>\n","      <td>1651</td>\n","      <td>541</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R6307805</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>237235</td>\n","      <td>2024-01-01 07:42:00</td>\n","      <td>2024-01-01 07:54:00</td>\n","      <td>Employee_43</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_5351</td>\n","      <td>5351</td>\n","      <td>702</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>2000BB</td>\n","      <td>R6304573</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>663750</td>\n","      <td>2024-01-01 06:00:00</td>\n","      <td>2024-01-01 06:16:00</td>\n","      <td>Employee_14</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_2638</td>\n","      <td>2638</td>\n","      <td>537</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R6855396</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>837715</td>\n","      <td>2024-01-01 07:23:00</td>\n","      <td>2024-01-01 07:34:00</td>\n","      <td>Employee_20</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_8179</td>\n","      <td>8179</td>\n","      <td>778</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R1131249</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>212235</td>\n","      <td>2024-01-01 10:19:00</td>\n","      <td>2024-01-01 10:24:00</td>\n","      <td>Employee_48</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_5333</td>\n","      <td>5333</td>\n","      <td>559</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>2000BB</td>\n","      <td>R5727085</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>612262</td>\n","      <td>2024-01-01 11:21:00</td>\n","      <td>2024-01-01 11:29:00</td>\n","      <td>Employee_17</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_5325</td>\n","      <td>5325</td>\n","      <td>758</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R8106422</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>877236</td>\n","      <td>2024-01-01 06:00:00</td>\n","      <td>2024-01-01 06:12:00</td>\n","      <td>Employee_29</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_5291</td>\n","      <td>5291</td>\n","      <td>582</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R1162230</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>710805</td>\n","      <td>2024-01-01 11:57:00</td>\n","      <td>2024-01-01 12:03:00</td>\n","      <td>Employee_36</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_1590</td>\n","      <td>1590</td>\n","      <td>689</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R1701771</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>470858</td>\n","      <td>2024-01-01 06:57:00</td>\n","      <td>2024-01-01 07:10:00</td>\n","      <td>Employee_50</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_5088</td>\n","      <td>5088</td>\n","      <td>552</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R3592974</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>288073</td>\n","      <td>2024-01-01 07:55:00</td>\n","      <td>2024-01-01 08:02:00</td>\n","      <td>Employee_48</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_7755</td>\n","      <td>7755</td>\n","      <td>512</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R5163555</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>309267</td>\n","      <td>2024-01-01 11:06:00</td>\n","      <td>2024-01-01 11:20:00</td>\n","      <td>Employee_30</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_8711</td>\n","      <td>8711</td>\n","      <td>613</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4740036</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>468203</td>\n","      <td>2024-01-01 07:25:00</td>\n","      <td>2024-01-01 07:37:00</td>\n","      <td>Employee_42</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>phone</td>\n","      <td>Tenant_2137</td>\n","      <td>2137</td>\n","      <td>642</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R9996207</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>213668</td>\n","      <td>2024-01-01 06:07:00</td>\n","      <td>2024-01-01 06:17:00</td>\n","      <td>Employee_39</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_5349</td>\n","      <td>5349</td>\n","      <td>519</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R6262632</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>146542</td>\n","      <td>2024-01-01 10:07:00</td>\n","      <td>2024-01-01 10:21:00</td>\n","      <td>Employee_46</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_4114</td>\n","      <td>4114</td>\n","      <td>630</td>\n","      <td>Elm St</td>\n","      <td>Amsterdam</td>\n","      <td>3000CC</td>\n","      <td>R4305700</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>854717</td>\n","      <td>2024-01-01 06:42:00</td>\n","      <td>2024-01-01 06:54:00</td>\n","      <td>Employee_20</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_6143</td>\n","      <td>6143</td>\n","      <td>563</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R7851696</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>797229</td>\n","      <td>2024-01-01 11:18:00</td>\n","      <td>2024-01-01 11:37:00</td>\n","      <td>Employee_25</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_4143</td>\n","      <td>4143</td>\n","      <td>715</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>1000AA</td>\n","      <td>R6049101</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>736130</td>\n","      <td>2024-01-01 06:19:00</td>\n","      <td>2024-01-01 06:30:00</td>\n","      <td>Employee_42</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_8043</td>\n","      <td>8043</td>\n","      <td>796</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>2000BB</td>\n","      <td>R8418210</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>640490</td>\n","      <td>2024-01-01 10:30:00</td>\n","      <td>2024-01-01 10:37:00</td>\n","      <td>Employee_43</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>email</td>\n","      <td>Tenant_2389</td>\n","      <td>2389</td>\n","      <td>645</td>\n","      <td>Maple Ave</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R2566777</td>\n","      <td>10</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>125611</td>\n","      <td>2024-01-01 07:43:00</td>\n","      <td>2024-01-01 07:54:00</td>\n","      <td>Employee_3</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_4262</td>\n","      <td>4262</td>\n","      <td>575</td>\n","      <td>Main St</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R2221854</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>519066</td>\n","      <td>2024-01-01 11:36:00</td>\n","      <td>2024-01-01 11:44:00</td>\n","      <td>Employee_16</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_7291</td>\n","      <td>7291</td>\n","      <td>753</td>\n","      <td>Main St</td>\n","      <td>Utrecht</td>\n","      <td>3000CC</td>\n","      <td>R1093026</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>587115</td>\n","      <td>2024-01-01 06:49:00</td>\n","      <td>2024-01-01 07:04:00</td>\n","      <td>Employee_4</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>email</td>\n","      <td>Tenant_3881</td>\n","      <td>3881</td>\n","      <td>765</td>\n","      <td>Maple Ave</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R8658158</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>742412</td>\n","      <td>2024-01-01 09:42:00</td>\n","      <td>2024-01-01 10:00:00</td>\n","      <td>Employee_47</td>\n","      <td>Noise Complaint</td>\n","      <td>3</td>\n","      <td>Noise Complaint</td>\n","      <td>phone</td>\n","      <td>Tenant_6198</td>\n","      <td>6198</td>\n","      <td>726</td>\n","      <td>Maple Ave</td>\n","      <td>Rotterdam</td>\n","      <td>3000CC</td>\n","      <td>R8481188</td>\n","      <td>9</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>980660</td>\n","      <td>2024-01-01 11:55:00</td>\n","      <td>2024-01-01 12:12:00</td>\n","      <td>Employee_41</td>\n","      <td>Repairs</td>\n","      <td>2</td>\n","      <td>Repairs</td>\n","      <td>email</td>\n","      <td>Tenant_5246</td>\n","      <td>5246</td>\n","      <td>626</td>\n","      <td>Elm St</td>\n","      <td>Utrecht</td>\n","      <td>2000BB</td>\n","      <td>R5013879</td>\n","      <td>11</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>435239</td>\n","      <td>2024-01-01 06:45:00</td>\n","      <td>2024-01-01 06:56:00</td>\n","      <td>Employee_35</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_5451</td>\n","      <td>5451</td>\n","      <td>671</td>\n","      <td>Main St</td>\n","      <td>Amsterdam</td>\n","      <td>1000AA</td>\n","      <td>R4879923</td>\n","      <td>6</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>446954</td>\n","      <td>2024-01-01 07:45:00</td>\n","      <td>2024-01-01 07:53:00</td>\n","      <td>Employee_35</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>Maintenance</td>\n","      <td>phone</td>\n","      <td>Tenant_7797</td>\n","      <td>7797</td>\n","      <td>708</td>\n","      <td>Elm St</td>\n","      <td>Rotterdam</td>\n","      <td>1000AA</td>\n","      <td>R4470105</td>\n","      <td>7</td>\n","      <td>morning</td>\n","      <td>2024-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d0524d6-43b6-4fdf-8fca-ac0db1198962')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d0524d6-43b6-4fdf-8fca-ac0db1198962 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d0524d6-43b6-4fdf-8fca-ac0db1198962');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-712a519b-3cee-4636-84f7-ce1960b9b575\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-712a519b-3cee-4636-84f7-ce1960b9b575')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-712a519b-3cee-4636-84f7-ce1960b9b575 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Drop duplicates to get one row per Date-PartOfDay combo\n","features_df = df.drop_duplicates(subset=['Date', 'PartOfDay'])[\n","    ['Date', 'PartOfDay', 'DayOfWeek', 'IsWeekend', 'Month','day_of_year','week_of_year','quarter']\n","]\n","\n","# Merge features with target\n","final_df = pd.merge(df_counts, features_df, on=['Date', 'PartOfDay'], how='left')\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"zQVvxH__8fsf","executionInfo":{"status":"ok","timestamp":1751050579308,"user_tz":-300,"elapsed":68,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"9602f431-5ec2-49fd-eee8-1000721f1662"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date  PartOfDay  NumEmails  NumCalls  DayOfWeek  IsWeekend  Month  \\\n","0     2024-01-01  afternoon         24        38          0          0      1   \n","1     2024-01-01    morning         34        36          0          0      1   \n","2     2024-01-01       noon         32        33          0          0      1   \n","3     2024-01-02  afternoon         25        37          1          0      1   \n","4     2024-01-02    morning         29        36          1          0      1   \n","...          ...        ...        ...       ...        ...        ...    ...   \n","1093  2024-12-30    morning         26        30          0          0     12   \n","1094  2024-12-30       noon         35        24          0          0     12   \n","1095  2024-12-31  afternoon         30        48          1          0     12   \n","1096  2024-12-31    morning         29        43          1          0     12   \n","1097  2024-12-31       noon         27        40          1          0     12   \n","\n","      day_of_year  week_of_year  quarter  \n","0               1             1        1  \n","1               1             1        1  \n","2               1             1        1  \n","3               2             1        1  \n","4               2             1        1  \n","...           ...           ...      ...  \n","1093          365             1        4  \n","1094          365             1        4  \n","1095          366             1        4  \n","1096          366             1        4  \n","1097          366             1        4  \n","\n","[1098 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-b3a777cf-e26c-4dda-8350-6594ce2fd9b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>PartOfDay</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01</td>\n","      <td>afternoon</td>\n","      <td>24</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01</td>\n","      <td>morning</td>\n","      <td>34</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-01</td>\n","      <td>noon</td>\n","      <td>32</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-02</td>\n","      <td>afternoon</td>\n","      <td>25</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-02</td>\n","      <td>morning</td>\n","      <td>29</td>\n","      <td>36</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>morning</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>noon</td>\n","      <td>35</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>afternoon</td>\n","      <td>30</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>morning</td>\n","      <td>29</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>noon</td>\n","      <td>27</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1098 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3a777cf-e26c-4dda-8350-6594ce2fd9b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3a777cf-e26c-4dda-8350-6594ce2fd9b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3a777cf-e26c-4dda-8350-6594ce2fd9b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c973a76a-7c76-4560-9316-c97094f07c21\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c973a76a-7c76-4560-9316-c97094f07c21')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c973a76a-7c76-4560-9316-c97094f07c21 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_3533e2cd-bcf2-4610-8d85-de96c8af6bf7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3533e2cd-bcf2-4610-8d85-de96c8af6bf7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 1098,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01\",\n        \"max\": \"2024-12-31\",\n        \"num_unique_values\": 366,\n        \"samples\": [\n          \"2024-07-12\",\n          \"2024-02-03\",\n          \"2024-01-16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"afternoon\",\n          \"morning\",\n          \"noon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumEmails\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 13,\n        \"max\": 47,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          43,\n          27,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumCalls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 22,\n        \"max\": 60,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          24,\n          22,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsWeekend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 366,\n        \"samples\": [\n          194,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          20,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quarter\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["##2.7.Encoding categorical features"],"metadata":{"id":"CRLHiyKFas2G"}},{"cell_type":"code","source":["final_df = pd.get_dummies(final_df, columns=['PartOfDay'])\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"EXBHBo_R86vS","executionInfo":{"status":"ok","timestamp":1751050579349,"user_tz":-300,"elapsed":45,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"4f17ea1a-6de6-4297-d979-551d8dbd491f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date  NumEmails  NumCalls  DayOfWeek  IsWeekend  Month  \\\n","0     2024-01-01         24        38          0          0      1   \n","1     2024-01-01         34        36          0          0      1   \n","2     2024-01-01         32        33          0          0      1   \n","3     2024-01-02         25        37          1          0      1   \n","4     2024-01-02         29        36          1          0      1   \n","...          ...        ...       ...        ...        ...    ...   \n","1093  2024-12-30         26        30          0          0     12   \n","1094  2024-12-30         35        24          0          0     12   \n","1095  2024-12-31         30        48          1          0     12   \n","1096  2024-12-31         29        43          1          0     12   \n","1097  2024-12-31         27        40          1          0     12   \n","\n","      day_of_year  week_of_year  quarter  PartOfDay_afternoon  \\\n","0               1             1        1                 True   \n","1               1             1        1                False   \n","2               1             1        1                False   \n","3               2             1        1                 True   \n","4               2             1        1                False   \n","...           ...           ...      ...                  ...   \n","1093          365             1        4                False   \n","1094          365             1        4                False   \n","1095          366             1        4                 True   \n","1096          366             1        4                False   \n","1097          366             1        4                False   \n","\n","      PartOfDay_morning  PartOfDay_noon  \n","0                 False           False  \n","1                  True           False  \n","2                 False            True  \n","3                 False           False  \n","4                  True           False  \n","...                 ...             ...  \n","1093               True           False  \n","1094              False            True  \n","1095              False           False  \n","1096               True           False  \n","1097              False            True  \n","\n","[1098 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-06e7310a-4ea0-4161-a9ab-9680f2675429\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>PartOfDay_afternoon</th>\n","      <th>PartOfDay_morning</th>\n","      <th>PartOfDay_noon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01</td>\n","      <td>24</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01</td>\n","      <td>34</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-01</td>\n","      <td>32</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-02</td>\n","      <td>25</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-02</td>\n","      <td>29</td>\n","      <td>36</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>35</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>30</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>29</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>27</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1098 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06e7310a-4ea0-4161-a9ab-9680f2675429')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-06e7310a-4ea0-4161-a9ab-9680f2675429 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-06e7310a-4ea0-4161-a9ab-9680f2675429');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1298061b-80ce-4268-b8d9-e7b898da1fe8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1298061b-80ce-4268-b8d9-e7b898da1fe8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1298061b-80ce-4268-b8d9-e7b898da1fe8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_4e0f206c-8154-4b09-86e5-e8c1c61d507b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4e0f206c-8154-4b09-86e5-e8c1c61d507b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 1098,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01\",\n        \"max\": \"2024-12-31\",\n        \"num_unique_values\": 366,\n        \"samples\": [\n          \"2024-07-12\",\n          \"2024-02-03\",\n          \"2024-01-16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumEmails\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 13,\n        \"max\": 47,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          43,\n          27,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumCalls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 22,\n        \"max\": 60,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          24,\n          22,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsWeekend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 366,\n        \"samples\": [\n          194,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          20,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quarter\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay_afternoon\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay_morning\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PartOfDay_noon\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["##2.8.Adding cyclic encoding"],"metadata":{"id":"Rzcqdsv7a2zg"}},{"cell_type":"code","source":["# Function for cyclic encoding\n","def add_cyclic_features(df, column, max_value):\n","    df[f'{column}_sin'] = np.sin(2 * np.pi * df[column] / max_value)\n","    df[f'{column}_cos'] = np.cos(2 * np.pi * df[column] / max_value)\n","\n","# Add cyclic features for day_of_week, month, and day_of_year\n","add_cyclic_features(final_df, 'DayOfWeek', 7)\n","add_cyclic_features(final_df, 'Month', 12)\n","add_cyclic_features(final_df, 'day_of_year', 366)\n","add_cyclic_features(final_df, 'week_of_year', 53)\n","add_cyclic_features(final_df, 'quarter', 4)\n","\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"l4GWZU2mZvr9","executionInfo":{"status":"ok","timestamp":1751050579425,"user_tz":-300,"elapsed":76,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"b1a3692f-036e-443f-b2a1-28f182a0f237"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date  NumEmails  NumCalls  DayOfWeek  IsWeekend  Month  \\\n","0     2024-01-01         24        38          0          0      1   \n","1     2024-01-01         34        36          0          0      1   \n","2     2024-01-01         32        33          0          0      1   \n","3     2024-01-02         25        37          1          0      1   \n","4     2024-01-02         29        36          1          0      1   \n","...          ...        ...       ...        ...        ...    ...   \n","1093  2024-12-30         26        30          0          0     12   \n","1094  2024-12-30         35        24          0          0     12   \n","1095  2024-12-31         30        48          1          0     12   \n","1096  2024-12-31         29        43          1          0     12   \n","1097  2024-12-31         27        40          1          0     12   \n","\n","      day_of_year  week_of_year  quarter  PartOfDay_afternoon  \\\n","0               1             1        1                 True   \n","1               1             1        1                False   \n","2               1             1        1                False   \n","3               2             1        1                 True   \n","4               2             1        1                False   \n","...           ...           ...      ...                  ...   \n","1093          365             1        4                False   \n","1094          365             1        4                False   \n","1095          366             1        4                 True   \n","1096          366             1        4                False   \n","1097          366             1        4                False   \n","\n","      PartOfDay_morning  PartOfDay_noon  DayOfWeek_sin  DayOfWeek_cos  \\\n","0                 False           False       0.000000        1.00000   \n","1                  True           False       0.000000        1.00000   \n","2                 False            True       0.000000        1.00000   \n","3                 False           False       0.781831        0.62349   \n","4                  True           False       0.781831        0.62349   \n","...                 ...             ...            ...            ...   \n","1093               True           False       0.000000        1.00000   \n","1094              False            True       0.000000        1.00000   \n","1095              False           False       0.781831        0.62349   \n","1096               True           False       0.781831        0.62349   \n","1097              False            True       0.781831        0.62349   \n","\n","         Month_sin  Month_cos  day_of_year_sin  day_of_year_cos  \\\n","0     5.000000e-01   0.866025     1.716633e-02         0.999853   \n","1     5.000000e-01   0.866025     1.716633e-02         0.999853   \n","2     5.000000e-01   0.866025     1.716633e-02         0.999853   \n","3     5.000000e-01   0.866025     3.432760e-02         0.999411   \n","4     5.000000e-01   0.866025     3.432760e-02         0.999411   \n","...            ...        ...              ...              ...   \n","1093 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1094 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1095 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1096 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1097 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","\n","      week_of_year_sin  week_of_year_cos   quarter_sin   quarter_cos  \n","0             0.118273          0.992981  1.000000e+00  6.123234e-17  \n","1             0.118273          0.992981  1.000000e+00  6.123234e-17  \n","2             0.118273          0.992981  1.000000e+00  6.123234e-17  \n","3             0.118273          0.992981  1.000000e+00  6.123234e-17  \n","4             0.118273          0.992981  1.000000e+00  6.123234e-17  \n","...                ...               ...           ...           ...  \n","1093          0.118273          0.992981 -2.449294e-16  1.000000e+00  \n","1094          0.118273          0.992981 -2.449294e-16  1.000000e+00  \n","1095          0.118273          0.992981 -2.449294e-16  1.000000e+00  \n","1096          0.118273          0.992981 -2.449294e-16  1.000000e+00  \n","1097          0.118273          0.992981 -2.449294e-16  1.000000e+00  \n","\n","[1098 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-4b19a549-ef5d-4f95-9cf2-8acd83180419\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>PartOfDay_afternoon</th>\n","      <th>PartOfDay_morning</th>\n","      <th>PartOfDay_noon</th>\n","      <th>DayOfWeek_sin</th>\n","      <th>DayOfWeek_cos</th>\n","      <th>Month_sin</th>\n","      <th>Month_cos</th>\n","      <th>day_of_year_sin</th>\n","      <th>day_of_year_cos</th>\n","      <th>week_of_year_sin</th>\n","      <th>week_of_year_cos</th>\n","      <th>quarter_sin</th>\n","      <th>quarter_cos</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01</td>\n","      <td>24</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01</td>\n","      <td>34</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-01</td>\n","      <td>32</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-02</td>\n","      <td>25</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>3.432760e-02</td>\n","      <td>0.999411</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-02</td>\n","      <td>29</td>\n","      <td>36</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>3.432760e-02</td>\n","      <td>0.999411</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>35</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>30</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>29</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>27</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1098 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b19a549-ef5d-4f95-9cf2-8acd83180419')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b19a549-ef5d-4f95-9cf2-8acd83180419 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b19a549-ef5d-4f95-9cf2-8acd83180419');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-51257e64-61b7-43e7-bcf2-3df7b9e5c1b7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51257e64-61b7-43e7-bcf2-3df7b9e5c1b7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-51257e64-61b7-43e7-bcf2-3df7b9e5c1b7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_963cd775-0c5e-48d4-8bd5-40b22f29d6d2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_963cd775-0c5e-48d4-8bd5-40b22f29d6d2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df"}},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["##2.9.Adding lag features"],"metadata":{"id":"u2HIYn34bPAe"}},{"cell_type":"markdown","source":["**lag_1:** Is today similar to yesterday?\n","\n","**lag_7:** Do we have weekly repetition?\n","\n","**rolling_mean_7:** Are we in an upward or downward trend?\n","\n","**rolling_std_7:** Was the past week stable or unpredictable?"],"metadata":{"id":"OgbG25gnVt1S"}},{"cell_type":"code","source":["# Create lag features\n","final_df['NumCalls_lag_1'] = final_df['NumCalls'].shift(3)\n","final_df['NumCalls_lag_7'] = final_df['NumCalls'].shift(21)\n","\n","# Create rolling statistics\n","final_df['NumCalls_rolling_mean_7'] = final_df['NumCalls'].rolling(window=21).mean()\n","final_df['NumCalls_rolling_std_7'] = final_df['NumCalls'].rolling(window=21).std()\n","\n","# Drop rows with NaN values introduced by lag/rolling\n","final_df = final_df.dropna()\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"QbC8Lb0KZ7aH","executionInfo":{"status":"ok","timestamp":1751050579500,"user_tz":-300,"elapsed":79,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"042c464e-a92d-48a9-9b79-1962ec442fb1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date  NumEmails  NumCalls  DayOfWeek  IsWeekend  Month  \\\n","21    2024-01-08         35        42          0          0      1   \n","22    2024-01-08         25        38          0          0      1   \n","23    2024-01-08         40        36          0          0      1   \n","24    2024-01-09         41        31          1          0      1   \n","25    2024-01-09         27        44          1          0      1   \n","...          ...        ...       ...        ...        ...    ...   \n","1093  2024-12-30         26        30          0          0     12   \n","1094  2024-12-30         35        24          0          0     12   \n","1095  2024-12-31         30        48          1          0     12   \n","1096  2024-12-31         29        43          1          0     12   \n","1097  2024-12-31         27        40          1          0     12   \n","\n","      day_of_year  week_of_year  quarter  PartOfDay_afternoon  \\\n","21              8             2        1                 True   \n","22              8             2        1                False   \n","23              8             2        1                False   \n","24              9             2        1                 True   \n","25              9             2        1                False   \n","...           ...           ...      ...                  ...   \n","1093          365             1        4                False   \n","1094          365             1        4                False   \n","1095          366             1        4                 True   \n","1096          366             1        4                False   \n","1097          366             1        4                False   \n","\n","      PartOfDay_morning  PartOfDay_noon  DayOfWeek_sin  DayOfWeek_cos  \\\n","21                False           False       0.000000        1.00000   \n","22                 True           False       0.000000        1.00000   \n","23                False            True       0.000000        1.00000   \n","24                False           False       0.781831        0.62349   \n","25                 True           False       0.781831        0.62349   \n","...                 ...             ...            ...            ...   \n","1093               True           False       0.000000        1.00000   \n","1094              False            True       0.000000        1.00000   \n","1095              False           False       0.781831        0.62349   \n","1096               True           False       0.781831        0.62349   \n","1097              False            True       0.781831        0.62349   \n","\n","         Month_sin  Month_cos  day_of_year_sin  day_of_year_cos  \\\n","21    5.000000e-01   0.866025     1.369061e-01         0.990584   \n","22    5.000000e-01   0.866025     1.369061e-01         0.990584   \n","23    5.000000e-01   0.866025     1.369061e-01         0.990584   \n","24    5.000000e-01   0.866025     1.538906e-01         0.988088   \n","25    5.000000e-01   0.866025     1.538906e-01         0.988088   \n","...            ...        ...              ...              ...   \n","1093 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1094 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1095 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1096 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1097 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","\n","      week_of_year_sin  week_of_year_cos   quarter_sin   quarter_cos  \\\n","21            0.234886          0.972023  1.000000e+00  6.123234e-17   \n","22            0.234886          0.972023  1.000000e+00  6.123234e-17   \n","23            0.234886          0.972023  1.000000e+00  6.123234e-17   \n","24            0.234886          0.972023  1.000000e+00  6.123234e-17   \n","25            0.234886          0.972023  1.000000e+00  6.123234e-17   \n","...                ...               ...           ...           ...   \n","1093          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1094          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1095          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1096          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1097          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","\n","      NumCalls_lag_1  NumCalls_lag_7  NumCalls_rolling_mean_7  \\\n","21              36.0            38.0                36.476190   \n","22              31.0            36.0                36.571429   \n","23              37.0            33.0                36.714286   \n","24              42.0            37.0                36.428571   \n","25              38.0            36.0                36.809524   \n","...              ...             ...                      ...   \n","1093            31.0            38.0                39.238095   \n","1094            39.0            52.0                37.904762   \n","1095            39.0            53.0                37.666667   \n","1096            30.0            38.0                37.904762   \n","1097            24.0            46.0                37.619048   \n","\n","      NumCalls_rolling_std_7  \n","21                  4.935778  \n","22                  4.945416  \n","23                  4.879988  \n","24                  5.035588  \n","25                  5.297349  \n","...                      ...  \n","1093                7.034947  \n","1094                7.147760  \n","1095                6.688298  \n","1096                6.788997  \n","1097                6.553443  \n","\n","[1077 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-578484fd-a216-4e49-808b-1201810c642b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>PartOfDay_afternoon</th>\n","      <th>PartOfDay_morning</th>\n","      <th>PartOfDay_noon</th>\n","      <th>DayOfWeek_sin</th>\n","      <th>DayOfWeek_cos</th>\n","      <th>Month_sin</th>\n","      <th>Month_cos</th>\n","      <th>day_of_year_sin</th>\n","      <th>day_of_year_cos</th>\n","      <th>week_of_year_sin</th>\n","      <th>week_of_year_cos</th>\n","      <th>quarter_sin</th>\n","      <th>quarter_cos</th>\n","      <th>NumCalls_lag_1</th>\n","      <th>NumCalls_lag_7</th>\n","      <th>NumCalls_rolling_mean_7</th>\n","      <th>NumCalls_rolling_std_7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>2024-01-08</td>\n","      <td>35</td>\n","      <td>42</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.369061e-01</td>\n","      <td>0.990584</td>\n","      <td>0.234886</td>\n","      <td>0.972023</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>36.0</td>\n","      <td>38.0</td>\n","      <td>36.476190</td>\n","      <td>4.935778</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2024-01-08</td>\n","      <td>25</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.369061e-01</td>\n","      <td>0.990584</td>\n","      <td>0.234886</td>\n","      <td>0.972023</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>31.0</td>\n","      <td>36.0</td>\n","      <td>36.571429</td>\n","      <td>4.945416</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2024-01-08</td>\n","      <td>40</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.369061e-01</td>\n","      <td>0.990584</td>\n","      <td>0.234886</td>\n","      <td>0.972023</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>37.0</td>\n","      <td>33.0</td>\n","      <td>36.714286</td>\n","      <td>4.879988</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2024-01-09</td>\n","      <td>41</td>\n","      <td>31</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.538906e-01</td>\n","      <td>0.988088</td>\n","      <td>0.234886</td>\n","      <td>0.972023</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>42.0</td>\n","      <td>37.0</td>\n","      <td>36.428571</td>\n","      <td>5.035588</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2024-01-09</td>\n","      <td>27</td>\n","      <td>44</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>1.538906e-01</td>\n","      <td>0.988088</td>\n","      <td>0.234886</td>\n","      <td>0.972023</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>38.0</td>\n","      <td>36.0</td>\n","      <td>36.809524</td>\n","      <td>5.297349</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>31.0</td>\n","      <td>38.0</td>\n","      <td>39.238095</td>\n","      <td>7.034947</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>35</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>39.0</td>\n","      <td>52.0</td>\n","      <td>37.904762</td>\n","      <td>7.147760</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>30</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>39.0</td>\n","      <td>53.0</td>\n","      <td>37.666667</td>\n","      <td>6.688298</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>29</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>30.0</td>\n","      <td>38.0</td>\n","      <td>37.904762</td>\n","      <td>6.788997</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>27</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>24.0</td>\n","      <td>46.0</td>\n","      <td>37.619048</td>\n","      <td>6.553443</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1077 rows × 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-578484fd-a216-4e49-808b-1201810c642b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-578484fd-a216-4e49-808b-1201810c642b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-578484fd-a216-4e49-808b-1201810c642b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-81c2de36-b642-46a9-8fb0-13982ba3c88c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81c2de36-b642-46a9-8fb0-13982ba3c88c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-81c2de36-b642-46a9-8fb0-13982ba3c88c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_1182f176-dfa0-459d-86ee-a8ef451eef43\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1182f176-dfa0-459d-86ee-a8ef451eef43 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# Create lag features\n","final_df['NumEmails_lag_1'] = final_df['NumEmails'].shift(3)\n","final_df['NumEmails_lag_7'] = final_df['NumEmails'].shift(21)\n","\n","# Create rolling statistics\n","final_df['NumEmails_rolling_mean_7'] = final_df['NumEmails'].rolling(window=21).mean()\n","final_df['NumEmails_rolling_std_7'] = final_df['NumEmails'].rolling(window=21).std()\n","\n","# Drop rows with NaN values introduced by lag/rolling\n","final_df = final_df.dropna()\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"Lko0GcwbaUcv","executionInfo":{"status":"ok","timestamp":1751050579569,"user_tz":-300,"elapsed":68,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"c8df58a7-0db8-4184-9bf1-eb85d11fec52"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date  NumEmails  NumCalls  DayOfWeek  IsWeekend  Month  \\\n","42    2024-01-15         32        37          0          0      1   \n","43    2024-01-15         31        30          0          0      1   \n","44    2024-01-15         34        43          0          0      1   \n","45    2024-01-16         31        46          1          0      1   \n","46    2024-01-16         21        43          1          0      1   \n","...          ...        ...       ...        ...        ...    ...   \n","1093  2024-12-30         26        30          0          0     12   \n","1094  2024-12-30         35        24          0          0     12   \n","1095  2024-12-31         30        48          1          0     12   \n","1096  2024-12-31         29        43          1          0     12   \n","1097  2024-12-31         27        40          1          0     12   \n","\n","      day_of_year  week_of_year  quarter  PartOfDay_afternoon  \\\n","42             15             3        1                 True   \n","43             15             3        1                False   \n","44             15             3        1                False   \n","45             16             3        1                 True   \n","46             16             3        1                False   \n","...           ...           ...      ...                  ...   \n","1093          365             1        4                False   \n","1094          365             1        4                False   \n","1095          366             1        4                 True   \n","1096          366             1        4                False   \n","1097          366             1        4                False   \n","\n","      PartOfDay_morning  PartOfDay_noon  DayOfWeek_sin  DayOfWeek_cos  \\\n","42                False           False       0.000000        1.00000   \n","43                 True           False       0.000000        1.00000   \n","44                False            True       0.000000        1.00000   \n","45                False           False       0.781831        0.62349   \n","46                 True           False       0.781831        0.62349   \n","...                 ...             ...            ...            ...   \n","1093               True           False       0.000000        1.00000   \n","1094              False            True       0.000000        1.00000   \n","1095              False           False       0.781831        0.62349   \n","1096               True           False       0.781831        0.62349   \n","1097              False            True       0.781831        0.62349   \n","\n","         Month_sin  Month_cos  day_of_year_sin  day_of_year_cos  \\\n","42    5.000000e-01   0.866025     2.546711e-01         0.967028   \n","43    5.000000e-01   0.866025     2.546711e-01         0.967028   \n","44    5.000000e-01   0.866025     2.546711e-01         0.967028   \n","45    5.000000e-01   0.866025     2.712339e-01         0.962513   \n","46    5.000000e-01   0.866025     2.712339e-01         0.962513   \n","...            ...        ...              ...              ...   \n","1093 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1094 -2.449294e-16   1.000000    -1.716633e-02         0.999853   \n","1095 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1096 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","1097 -2.449294e-16   1.000000    -2.449294e-16         1.000000   \n","\n","      week_of_year_sin  week_of_year_cos   quarter_sin   quarter_cos  \\\n","42            0.348202           0.93742  1.000000e+00  6.123234e-17   \n","43            0.348202           0.93742  1.000000e+00  6.123234e-17   \n","44            0.348202           0.93742  1.000000e+00  6.123234e-17   \n","45            0.348202           0.93742  1.000000e+00  6.123234e-17   \n","46            0.348202           0.93742  1.000000e+00  6.123234e-17   \n","...                ...               ...           ...           ...   \n","1093          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1094          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1095          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1096          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","1097          0.118273          0.992981 -2.449294e-16  1.000000e+00   \n","\n","      NumCalls_lag_1  NumCalls_lag_7  NumCalls_rolling_mean_7  \\\n","42              33.0            42.0                38.952381   \n","43              47.0            38.0                38.571429   \n","44              42.0            36.0                38.904762   \n","45              37.0            31.0                39.619048   \n","46              30.0            44.0                39.571429   \n","...              ...             ...                      ...   \n","1093            31.0            38.0                39.238095   \n","1094            39.0            52.0                37.904762   \n","1095            39.0            53.0                37.666667   \n","1096            30.0            38.0                37.904762   \n","1097            24.0            46.0                37.619048   \n","\n","      NumCalls_rolling_std_7  NumEmails_lag_1  NumEmails_lag_7  \\\n","42                  6.880961             32.0             35.0   \n","43                  7.152422             27.0             25.0   \n","44                  7.189609             32.0             40.0   \n","45                  7.109685             32.0             41.0   \n","46                  7.082171             31.0             27.0   \n","...                      ...              ...              ...   \n","1093                7.034947             27.0             33.0   \n","1094                7.147760             24.0             27.0   \n","1095                6.688298             29.0             27.0   \n","1096                6.788997             26.0             32.0   \n","1097                6.553443             35.0             37.0   \n","\n","      NumEmails_rolling_mean_7  NumEmails_rolling_std_7  \n","42                   30.857143                 4.508722  \n","43                   31.142857                 4.304483  \n","44                   30.857143                 3.863751  \n","45                   30.380952                 3.089922  \n","46                   30.095238                 3.645611  \n","...                        ...                      ...  \n","1093                 29.857143                 4.090058  \n","1094                 30.238095                 4.182162  \n","1095                 30.380952                 4.116749  \n","1096                 30.238095                 4.109802  \n","1097                 29.761905                 3.858818  \n","\n","[1056 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-5505e843-cf68-4509-8181-c7dd4ee33e07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>PartOfDay_afternoon</th>\n","      <th>PartOfDay_morning</th>\n","      <th>PartOfDay_noon</th>\n","      <th>DayOfWeek_sin</th>\n","      <th>DayOfWeek_cos</th>\n","      <th>Month_sin</th>\n","      <th>Month_cos</th>\n","      <th>day_of_year_sin</th>\n","      <th>day_of_year_cos</th>\n","      <th>week_of_year_sin</th>\n","      <th>week_of_year_cos</th>\n","      <th>quarter_sin</th>\n","      <th>quarter_cos</th>\n","      <th>NumCalls_lag_1</th>\n","      <th>NumCalls_lag_7</th>\n","      <th>NumCalls_rolling_mean_7</th>\n","      <th>NumCalls_rolling_std_7</th>\n","      <th>NumEmails_lag_1</th>\n","      <th>NumEmails_lag_7</th>\n","      <th>NumEmails_rolling_mean_7</th>\n","      <th>NumEmails_rolling_std_7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>2024-01-15</td>\n","      <td>32</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>2.546711e-01</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>33.0</td>\n","      <td>42.0</td>\n","      <td>38.952381</td>\n","      <td>6.880961</td>\n","      <td>32.0</td>\n","      <td>35.0</td>\n","      <td>30.857143</td>\n","      <td>4.508722</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2024-01-15</td>\n","      <td>31</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>2.546711e-01</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>47.0</td>\n","      <td>38.0</td>\n","      <td>38.571429</td>\n","      <td>7.152422</td>\n","      <td>27.0</td>\n","      <td>25.0</td>\n","      <td>31.142857</td>\n","      <td>4.304483</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2024-01-15</td>\n","      <td>34</td>\n","      <td>43</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>2.546711e-01</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>42.0</td>\n","      <td>36.0</td>\n","      <td>38.904762</td>\n","      <td>7.189609</td>\n","      <td>32.0</td>\n","      <td>40.0</td>\n","      <td>30.857143</td>\n","      <td>3.863751</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2024-01-16</td>\n","      <td>31</td>\n","      <td>46</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>2.712339e-01</td>\n","      <td>0.962513</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>37.0</td>\n","      <td>31.0</td>\n","      <td>39.619048</td>\n","      <td>7.109685</td>\n","      <td>32.0</td>\n","      <td>41.0</td>\n","      <td>30.380952</td>\n","      <td>3.089922</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2024-01-16</td>\n","      <td>21</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>5.000000e-01</td>\n","      <td>0.866025</td>\n","      <td>2.712339e-01</td>\n","      <td>0.962513</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.000000e+00</td>\n","      <td>6.123234e-17</td>\n","      <td>30.0</td>\n","      <td>44.0</td>\n","      <td>39.571429</td>\n","      <td>7.082171</td>\n","      <td>31.0</td>\n","      <td>27.0</td>\n","      <td>30.095238</td>\n","      <td>3.645611</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1093</th>\n","      <td>2024-12-30</td>\n","      <td>26</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>31.0</td>\n","      <td>38.0</td>\n","      <td>39.238095</td>\n","      <td>7.034947</td>\n","      <td>27.0</td>\n","      <td>33.0</td>\n","      <td>29.857143</td>\n","      <td>4.090058</td>\n","    </tr>\n","    <tr>\n","      <th>1094</th>\n","      <td>2024-12-30</td>\n","      <td>35</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>365</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.00000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-1.716633e-02</td>\n","      <td>0.999853</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>39.0</td>\n","      <td>52.0</td>\n","      <td>37.904762</td>\n","      <td>7.147760</td>\n","      <td>24.0</td>\n","      <td>27.0</td>\n","      <td>30.238095</td>\n","      <td>4.182162</td>\n","    </tr>\n","    <tr>\n","      <th>1095</th>\n","      <td>2024-12-31</td>\n","      <td>30</td>\n","      <td>48</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>39.0</td>\n","      <td>53.0</td>\n","      <td>37.666667</td>\n","      <td>6.688298</td>\n","      <td>29.0</td>\n","      <td>27.0</td>\n","      <td>30.380952</td>\n","      <td>4.116749</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>2024-12-31</td>\n","      <td>29</td>\n","      <td>43</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>30.0</td>\n","      <td>38.0</td>\n","      <td>37.904762</td>\n","      <td>6.788997</td>\n","      <td>26.0</td>\n","      <td>32.0</td>\n","      <td>30.238095</td>\n","      <td>4.109802</td>\n","    </tr>\n","    <tr>\n","      <th>1097</th>\n","      <td>2024-12-31</td>\n","      <td>27</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>366</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.781831</td>\n","      <td>0.62349</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000</td>\n","      <td>0.118273</td>\n","      <td>0.992981</td>\n","      <td>-2.449294e-16</td>\n","      <td>1.000000e+00</td>\n","      <td>24.0</td>\n","      <td>46.0</td>\n","      <td>37.619048</td>\n","      <td>6.553443</td>\n","      <td>35.0</td>\n","      <td>37.0</td>\n","      <td>29.761905</td>\n","      <td>3.858818</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1056 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5505e843-cf68-4509-8181-c7dd4ee33e07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5505e843-cf68-4509-8181-c7dd4ee33e07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5505e843-cf68-4509-8181-c7dd4ee33e07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b7b910e5-aab3-4702-b010-20f8e6360487\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7b910e5-aab3-4702-b010-20f8e6360487')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b7b910e5-aab3-4702-b010-20f8e6360487 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_9a3c7fe2-26e1-46d4-88bc-15e28be40730\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9a3c7fe2-26e1-46d4-88bc-15e28be40730 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df"}},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"ZCI9dANWbC9l"}},{"cell_type":"markdown","source":["#3.Data Prepaartion for Modeling"],"metadata":{"id":"aNqR8vdfbV85"}},{"cell_type":"markdown","source":["##3.1.Splitting data"],"metadata":{"id":"GGOrRoXrbbZW"}},{"cell_type":"code","source":["# Chronological split (preferred in time series forecasting) -- it is not optional, we are required to perfprm split in this manner!\n","train_data = final_df[final_df['day_of_year'] <= 270].copy()\n","test_data = final_df[final_df['day_of_year'] > 271].copy()"],"metadata":{"id":"2uktva9tERoa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Split features and target\n","X_train = train_data.drop(columns=['Date', 'NumEmails','NumCalls'])\n","y_train = train_data[['NumEmails','NumCalls']]\n","X_test = test_data.drop(columns=['Date', 'NumEmails','NumCalls'])\n","y_test = test_data[['NumEmails','NumCalls']]\n","\n","# Confirm splits\n","print(f\"X_train shape: {X_train.shape}\")\n","print(f\"X_test shape: {X_test.shape}\")\n","print(f\"y_train shape: {y_train.shape}\")\n","print(f\"y_test shape: {y_test.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T-0iKqbVUdHp","executionInfo":{"status":"ok","timestamp":1751050579630,"user_tz":-300,"elapsed":41,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"5edb73b9-61ac-4422-849c-f3c29238c48d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (768, 27)\n","X_test shape: (285, 27)\n","y_train shape: (768, 2)\n","y_test shape: (285, 2)\n"]}]},{"cell_type":"markdown","source":["##3.2.Visualization of the data after splitting"],"metadata":{"id":"HU_WG2w3cPth"}},{"cell_type":"code","source":["# Plot for NumCalls\n","plt.figure(figsize=(14, 5))\n","sns.lineplot(x=X_train['day_of_year'], y=y_train['NumCalls'], label='Train - Calls', color='blue')\n","sns.lineplot(x=X_test['day_of_year'], y=y_test['NumCalls'], label='Test - Calls', color='orange')\n","plt.title('Number of Calls over Day of Year')\n","plt.xlabel('Day of Year')\n","plt.ylabel('NumCalls')\n","plt.legend()\n","plt.show()\n","\n","# Plot for NumEmails\n","plt.figure(figsize=(14, 5))\n","sns.lineplot(x=X_train['day_of_year'], y=y_train['NumEmails'], label='Train - Emails', color='green')\n","sns.lineplot(x=X_test['day_of_year'], y=y_test['NumEmails'], label='Test - Emails', color='red')\n","plt.title('Number of Emails over Day of Year')\n","plt.xlabel('Day of Year')\n","plt.ylabel('NumEmails')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":957},"id":"wnHtoL4fNl9_","executionInfo":{"status":"ok","timestamp":1751050612549,"user_tz":-300,"elapsed":32921,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"389a74ab-3cb9-45b9-cbdd-c85c29f2370e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x500 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABH8AAAHWCAYAAADuACUDAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzsnXe8JUWZ/p8+56aZuRNIwwwwwqADQxQFZAUEVpAsCiJIkKDCuisLwo9VkoCigK4KoqKALihhAVlBWBXXCIiCgAwgcRIwwAQm3HxP7P79UeftfrtOdbwn3/f7+dyZe0/orq6urq56+nnfshzHcSAIgiAIgiAIgiAIgiB0JJlmF0AQBEEQBEEQBEEQBEGoHyL+CIIgCIIgCIIgCIIgdDAi/giCIAiCIAiCIAiCIHQwIv4IgiAIgiAIgiAIgiB0MCL+CIIgCIIgCIIgCIIgdDAi/giCIAiCIAiCIAiCIHQwIv4IgiAIgiAIgiAIgiB0MCL+CIIgCIIgCIIgCIIgdDAi/giCIAiCIAiCIAiCIHQwIv4IgiAIQgfxpz/9CZZl4Z577ml2UWKxevVqHHvssdhkk01gWRauvfbahu7/lltugWVZePXVV93XDjjgABxwwAENLYcwcR588EHstttu6Ovrg2VZGBgYaHaRBEEQBKFlEPFHEARBEBJCgkFfXx/efPPNqvcPOOAA7Lzzzk0oWftx7rnn4je/+Q0uvPBC3HrrrTj00ENDP5/L5XDNNddgr732wsyZM9HX14ftttsOZ511Fl555ZUGlbrzOOCAA2BZFizLQiaTwYwZM7D99tvjk5/8JH772982u3iRrFu3DscddxymTJmC73//+7j11lsxbdq0qs8ddthh2GijjbB69eqq9wYHBzF37lzstddesG27EcUWBEEQhIbR1ewCCIIgCEK7ks/ncfXVV+O73/1us4vStvzhD3/ARz7yEZx//vmRn127di0OPfRQPPXUUzjyyCNx4oknor+/Hy+//DLuvPNO3HjjjSgUCg0odWey1VZb4aqrrgIAjI6OYsmSJfj5z3+O2267Dccddxxuu+02dHd3N7mUZp544gkMDw/jiiuuwEEHHRT4ueuvvx4777wzzj33XNxxxx2+9y666CKsXbsWDz74IDIZeT4qCIIgdBYi/giCIAhCSnbbbTfcdNNNuPDCC7HFFls0uzgNZXR01OisSMqaNWswa9asWJ897bTT8PTTT+Oee+7Bxz72Md97V1xxBS6++OIJl6dTsW0bhUIBfX19gZ+ZOXMmTj75ZN9rV199Nc4++2xcf/312GabbfD1r3+93kVNxZo1awAgsi3Nnz8fl112Gb74xS/itNNOw8EHHwxAiUc//OEPcf755+Pd7353vYuLXC6Hnp4eEZkEQRCEhiF3HEEQBEFIyUUXXYRyuYyrr7469HOvvvoqLMvCLbfcUvWeZVm4/PLL3b8vv/xyWJaFV155BSeffDJmzpyJzTbbDF/60pfgOA5WrFiBj3zkI5gxYwbmzJmDb33rW8Z9lstlXHTRRZgzZw6mTZuGo446CitWrKj63OOPP45DDz0UM2fOxNSpU7H//vvj0Ucf9X2GyvTCCy/gxBNPxEYbbYR999039JiXLVuGj3/849h4440xdepU/NM//RN++ctfuu9T6JzjOPj+97/vhhwF8fjjj+OXv/wlPv3pT1cJPwDQ29uLb37zm+7fzz77LE477TRsu+226Ovrw5w5c/CpT30K69atCy13EN/97nex0047YerUqdhoo42wxx57VDlHTKxZswaf/vSnsfnmm6Ovrw/vfve78ZOf/MR9v1gsYuONN8bpp59e9d2hoSH09fX5XFH5fB6XXXYZ3vWud6G3txfz5s3DF77wBeTzed93LcvCWWedhdtvvx077bQTent78eCDDyY+7mw2i+uuuw477rgjvve972FwcNB97+abb8YHP/hBzJ49G729vdhxxx3xgx/8wPf9U089FZtuuimKxWLVtg8++GBsv/32kWX42c9+ht133x1TpkzBpptuipNPPtkXbnnAAQfg1FNPBQDsueeesCwLp512WuD2zjvvPOy66674t3/7N+RyOZTLZXz2s5/F1ltvjcsuuwwA8NJLL+HYY4/FxhtvjL6+Puyxxx64//77fdtZv349zj//fOyyyy7o7+/HjBkzcNhhh+GZZ57xfY7ycN1555245JJLsOWWW2Lq1KkYGhqKPHZBEARBqBXi/BEEQRCElMyfPx+nnHIKbrrpJlxwwQU1df8cf/zx2GGHHXD11Vfjl7/8Jb761a9i4403xg033IAPfvCD+PrXv47bb78d559/Pvbcc0/st99+vu9/7Wtfg2VZ+OIXv4g1a9bg2muvxUEHHYRFixZhypQpAFTI1WGHHYbdd98dl112GTKZjDuhf+SRR/C+973Pt82Pf/zjWLBgAa688ko4jhNY9tWrV2PvvffG2NgYzj77bGyyySb4yU9+gqOOOgr33HMPjj76aOy333649dZb8clPfhIf+tCHcMopp4TWB028P/nJT8aqv9/+9rdYtmwZTj/9dMyZMwfPP/88brzxRjz//PN47LHHQoUmnZtuuglnn302jj32WJxzzjnI5XJ49tln8fjjj+PEE08M/N74+DgOOOAALFmyBGeddRbmz5+Pn/3sZzjttNMwMDCAc845B93d3Tj66KPx85//HDfccAN6enrc7993333I5/P4xCc+AUC5d4466ij8+c9/xplnnokddtgBzz33HK655hq88soruO+++3z7/8Mf/oC7774bZ511FjbddFNss802sY+Zk81mccIJJ+BLX/oS/vznP+OII44AAPzgBz/ATjvthKOOOgpdXV144IEH8G//9m+wbRuf+9znAKjz9dOf/hS/+c1vcOSRR7rbXLVqFf7whz+4YksQt9xyC04//XTsueeeuOqqq7B69Wp85zvfwaOPPoqnn34as2bNwsUXX4ztt98eN954I77yla9g/vz5eOc73xm4za6uLtx4443Ye++9ccUVV2D27Nn4+9//jgcffBBTp07F888/j3322QdbbrklLrjgAkybNg133303PvrRj+J//ud/cPTRRwNQAud9992Hj3/845g/fz5Wr16NG264Afvvvz9eeOGFqv7giiuuQE9PD84//3zk83nfuRYEQRCEuuMIgiAIgpCIm2++2QHgPPHEE87SpUudrq4u5+yzz3bf33///Z2ddtrJ/Xv58uUOAOfmm2+u2hYA57LLLnP/vuyyyxwAzplnnum+ViqVnK222sqxLMu5+uqr3dc3bNjgTJkyxTn11FPd1/74xz86AJwtt9zSGRoacl+/++67HQDOd77zHcdxHMe2bWfBggXOIYcc4ti27X5ubGzMmT9/vvOhD32oqkwnnHBCrPr5/Oc/7wBwHnnkEfe14eFhZ/78+c4222zjlMtl3/F/7nOfi9zm0Ucf7QBwNmzYEKsMY2NjVa/993//twPAefjhh93X6FwuX77cfW3//fd39t9/f/fvj3zkI77zGZdrr73WAeDcdttt7muFQsF5//vf7/T397vn5ze/+Y0DwHnggQd83z/88MOdbbfd1v371ltvdTKZjK9eHcdxfvjDHzoAnEcffdR9DYCTyWSc559/PlZZ9Tarc++99/raj+OY6/iQQw7xlblcLjtbbbWVc/zxx/s+9+1vf9uxLMtZtmxZ4D4LhYIze/ZsZ+edd3bGx8fd1//3f//XAeBceuml7mv8mozLWWed5XR3dzv9/f2+tn3ggQc6u+yyi5PL5dzXbNt29t57b2fBggXua7lczteWHUdd6729vc5XvvIV9zW6JrfddltjnQmCIAhCI5CwL0EQBEGYANtuuy0++clP4sYbb8TKlStrtt3PfOYz7u/ZbBZ77LEHHMfBpz/9aff1WbNmYfvtt8eyZcuqvn/KKadg+vTp7t/HHnss5s6di1/96lcAgEWLFmHx4sU48cQTsW7dOqxduxZr167F6OgoDjzwQDz88MNVKx599rOfjVX2X/3qV3jf+97nCw3r7+/HmWeeiVdffRUvvPBCvEpgUIgMP6YwyN0EqPwqa9euxT/90z8BAP7+978n2vesWbPwxhtv4Iknnkj0vV/96leYM2cOTjjhBPe17u5unH322RgZGcFDDz0EAPjgBz+ITTfdFHfddZf7uQ0bNuC3v/0tjj/+ePe1n/3sZ9hhhx2wcOFC93ytXbsWH/zgBwEAf/zjH33733///bHjjjsmKnMQ/f39AIDh4WH3NV7Hg4ODWLt2Lfbff38sW7bMDQ/LZDI46aSTcP/99/u+e/vtt2PvvffG/PnzA/f55JNPYs2aNfi3f/s3X66iI444AgsXLvSFEabha1/7GjbZZBNkMhlcc801AFQo1x/+8Accd9xxGB4edut43bp1OOSQQ7B48WI35Ky3t9fN2VMul7Fu3Tr09/dj++23N7axU0891VdngiAIgtBIRPwRBEEQhAlyySWXoFQqReb+ScI73vEO39+0rPmmm25a9fqGDRuqvr9gwQLf35Zl4V3vehdeffVVAMDixYsBqAnpZptt5vv50Y9+hHw+78vvAiB0os557bXXjLlcdthhB/f9pMyYMQOAX3wIY/369TjnnHOw+eabY8qUKdhss83c8uvHFcUXv/hF9Pf3433vex8WLFiAz33uc1V5kUy89tprWLBgQVVSX70eurq68LGPfQy/+MUv3Nw9P//5z1EsFn3iz+LFi/H8889Xna/tttsOgJf0mIh7vuIwMjICwC++PfroozjooIMwbdo0zJo1C5ttthkuuugiAP46PuWUUzA+Po57770XAPDyyy/jqaeeigzho/oxtaWFCxemakccWs5+3rx52HzzzQEAS5YsgeM4+NKXvlRVzxSiRvVs2zauueYaLFiwAL29vdh0002x2Wab4dlnnzW2sVqeD0EQBEFIiuT8EQRBEIQJsu222+Lkk0/GjTfeiAsuuKDq/aD8MuVyOXCb2Ww21msAQvPvBEGunv/8z//EbrvtZvwMuT2IZroWFi5cCAB47rnn8IEPfCDy88cddxz+8pe/4D/+4z+w2267ob+/H7Zt49BDD61yNEWxww474OWXX8b//u//4sEHH8T//M//4Prrr8ell16KL3/5y6mOR+cTn/gEbrjhBvz617/GRz/6Udx9991YuHChb+Up27axyy674Nvf/rZxG/PmzfP9Xcvz9Y9//AMA8K53vQsAsHTpUhx44IFYuHAhvv3tb2PevHno6enBr371K1xzzTW+Ot5xxx2x++6747bbbsMpp5yC2267DT09PTjuuONqVr5aQeU+//zzccghhxg/Q3Vw5ZVX4ktf+hI+9alP4YorrsDGG2+MTCaDz3/+88Y2Jq4fQRAEoZmI+CMIgiAINeCSSy7BbbfdZlwKe6ONNgIADAwM+F6fqHMhDHL2EI7jYMmSJdh1110BwE2IO2PGDBx00EE13ffWW2+Nl19+uer1l156yX0/KR/+8Idx1VVX4bbbbosUfzZs2IDf//73+PKXv4xLL73UfV2vkyRMmzYNxx9/PI4//ngUCgUcc8wx+NrXvoYLL7wwcPn0rbfeGs8++yxs2/a5f0z1sN9++2Hu3Lm46667sO++++IPf/hD1dL173znO/HMM8/gwAMPTJSweqKUy2XccccdmDp1qhvK98ADDyCfz+P+++/3udT00DPilFNOwXnnnYeVK1fijjvuwBFHHOFeF0FQ/bz88stuaBvx8ssvp2pHUWy77bYAVHhe1HVxzz334J//+Z/x4x//2Pf6wMBAlUNPEARBEJqNhH0JgiAIQg145zvfiZNPPhk33HADVq1a5XtvxowZ2HTTTfHwww/7Xr/++uvrVp6f/vSnvhCpe+65BytXrsRhhx0GANh9993xzne+E9/85jfdkB7O22+/nXrfhx9+OP72t7/hr3/9q/va6OgobrzxRmyzzTap8tC8//3vx6GHHoof/ehHVataAUChUHCXRCeHlO6IuvbaaxPvF0DV8vA9PT3Ycccd4TiOcQlz4vDDD8eqVat8uXxKpRK++93vor+/H/vvv7/7eiaTwbHHHosHHngAt956K0qlki/kC1BupjfffBM33XRT1b7Gx8cxOjqa6vjCKJfLOPvss/Hiiy/i7LPPdsPvTHU8ODiIm2++2bidE044AZZl4ZxzzsGyZctw8sknR+57jz32wOzZs/HDH/7Qt5T9r3/9a7z44ovuqmO1ZPbs2TjggANwww03GHN48esim81WtbGf/exnvmXoBUEQBKFVEOePIAiCINSIiy++GLfeeitefvll7LTTTr73PvOZz+Dqq6/GZz7zGeyxxx54+OGH8corr9StLBtvvDH23XdfnH766Vi9ejWuvfZavOtd78IZZ5wBQIkNP/rRj3DYYYdhp512wumnn44tt9wSb775Jv74xz9ixowZeOCBB1Lt+4ILLsB///d/47DDDsPZZ5+NjTfeGD/5yU+wfPly/M///E9VDpy4/PSnP8XBBx+MY445Bh/+8Idx4IEHYtq0aVi8eDHuvPNOrFy5Et/85jcxY8YM7LfffvjGN76BYrGILbfcEv/3f/+H5cuXp9rvwQcfjDlz5mCfffbB5ptvjhdffBHf+973cMQRR4QmoD7zzDNxww034LTTTsNTTz2FbbbZBvfccw8effRRXHvttVXfPf744/Hd734Xl112GXbZZRc3NxDxyU9+EnfffTc++9nP4o9//CP22WcflMtlvPTSS7j77rvxm9/8BnvssUeqYwSUeHPbbbcBAMbGxrBkyRL8/Oc/x9KlS/GJT3wCV1xxha9Oenp68OEPfxj/8i//gpGREdx0002YPXu2UTTZbLPNcOihh+JnP/sZZs2aFUu46e7uxte//nWcfvrp2H///XHCCSe4S71vs802OPfcc1Mfaxjf//73se+++2KXXXbBGWecgW233RarV6/GX//6V7zxxht45plnAABHHnkkvvKVr+D000/H3nvvjeeeew6333676x4SBEEQhFZCxB9BEARBqBHvete7cPLJJ+MnP/lJ1XuXXnop3n77bdxzzz24++67cdhhh+HXv/41Zs+eXZeyXHTRRXj22Wdx1VVXYXh4GAceeCCuv/56TJ061f3MAQccgL/+9a+44oor8L3vfQ8jIyOYM2cO9tprL/zLv/xL6n1vvvnm+Mtf/oIvfvGL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eP3110O38+UvfxnHHXccnn32WRx++OE46aSTsH79+tTlsm0bd955J0466SRsscUWVe/39/e7LqVisYgrrrgCzzzzDO677z68+uqrOO2002Lv66STTsJWW22FJ554Ak899RQuuOACdHd3py67MDl5+WUggX4sCIIgCIIgCILQkjQ17Mu2beyxxx648sorAQDvec978I9//AM//OEPceqpp6ba5oUXXojzzjvP/XtoaCiRANQJfOUrX8GHPvQh9++NN94Y7373u92/r7jiCtx77724//77cdZZZwVu57TTTsMJJ5wAALjyyitx3XXX4W9/+xsOPfTQVOVau3YtNmzYgIULF0Z+9lOf+pT7+7bbbovrrrsOe+65J0ZGRnyhbUG8/vrr+I//+A93XwsWLEhVZmFys349MG0aMGNGs0siCIIgCIIgCIKQnqY6f+bOnYsdd9zR99oOO+zgOlLmzJkDAFi9erXvM6tXr3bf0+nt7cWMGTN8P3GZOhUYGWnOz9SpSWounD322MP398jICM4//3zssMMOmDVrFvr7+/Hiiy9GOn923XVX9/dp06ZhxowZgaFXV155Jfr7+90f07aTJHN+6qmn8OEPfxjveMc7MH36dOy///4AEFlm4rzzzsNnPvMZHHTQQbj66quxdOnS2PsWBECFYhYKwPh4s0siCIIgCIIgCIIwMZoq/uyzzz6+ZMUA8Morr2DrrbcGoJI/z5kzB7///e/d94eGhvD444/j/e9/f83LY1nqKX8zfiyrdscxbdo039/nn38+7r33Xlx55ZV45JFHsGjRIuyyyy4oFAqh29HDpCzLgm3bxs9+9rOfxaJFi9wfU1jXZptthlmzZuGll14K3e/o6CgOOeQQzJgxA7fffjueeOIJ3HvvvQAQWWbi8ssvx/PPP48jjjgCf/jDH7Djjju62xCEODgOYNvA8HCzSyIIgiAIgiAIgjAxmhr2de6552LvvffGlVdeieOOOw5/+9vfcOONN+LGG28EoMSGz3/+8/jqV7+KBQsWYP78+fjSl76ELbbYAh/96EebWfS24tFHH8Vpp52Go48+GoByAr366qs13cfGG2+MjTfeOPQzmUwGn/jEJ3DrrbfisssuqxKIRkZG0NfXh5deegnr1q3D1Vdf7YbspUnWvN1222G77bbDueeeixNOOAE333yzWweCEIXjqJ/hYfV/LQVaQRAEQRAEQRCERtJU58+ee+6Je++9F//93/+NnXfeGVdccQWuvfZanHTSSe5nvvCFL+Df//3fceaZZ7o5Xx588EH09fU1seTtxYIFC/Dzn/8cixYtwjPPPIMTTzwx0MFTb772ta9h3rx52GuvvfDTn/4UL7zwAhYvXoz/+q//wnve8x6MjIzgHe94B3p6evDd734Xy5Ytw/33348rrrgi9j7Gx8dx1lln4U9/+hNee+01PProo3jiiSewww471PHIhE6DxJ98Xv0IgiAIgiAIgiC0K011/gDAkUceiSOPPDLwfcuy8JWvfAVf+cpXGliqzuLb3/42PvWpT2HvvffGpptuii9+8YsYatISRhtvvDEee+wxXH311fjqV7+K1157DRtttBF22WUX/Od//qe7fP0tt9yCiy66CNdddx3e+9734pvf/CaOOuqoWPvIZrNYt24dTjnlFKxevRqbbropjjnmGHz5y1+u89EJnQSJP4UCkMsBojcLgiAIgiAIgtCuWE6SLLxtyNDQEGbOnInBwcGq5M+5XA7Lly/H/PnzxUk0iZF2IJgoFICHHlJLve+zDxCQY14QBEEQBEEQBKFphGkenKaGfQmCILQq5PwpFiXsSxAEQRAEQRCE9kbEH0EQBAO27SV6Hh1tdmkEQRAEQRBqTHEEGF/Z7FIIgtAgRPwRBEEwQAGxfX0q9EsQBEEQBKGjKA4CubebXQpBEBqEiD+CIAgGKOyrp0c5f0qlZpdIEARBEAShljiAU252IQRBaBAi/giCIBgg8ae3V/L+CIIgCILQgTgi/gjCZELEH0EQBAOOo/L+9PYq4SeXa3aJBEEQBEEQaokDOHazCyEIQoMQ8UcQBMEA5fzJZtXvIv4IgiAIgtBZiPNHECYTIv4IgiAYoLAvy1I/Iv4IgiAIgtBRODYAcf4IwmRBxB9BEAQDJP4AQFcXMDzc3PIIgiAIgiDUFnH+CMJkQsQfoaW5/PLLsdtuu7l/n3baafjoRz/atPIIkwfu/OnpUcu9kxgkCIIgCILQ9vAnXYIgdDwi/rQZlmWF/lx++eUT2vZ9991Xs7IuWbIEp59+Orbaaiv09vZi/vz5OOGEE/Dkk0/WbB+CUC9sW42HMhkl/uTzQKHQ7FIJgiAIghBEqQSsW9fsUrQTDgBbBCBBmCR0NbsAQjJWrlzp/n7XXXfh0ksvxcsvv+y+1t/f34xiVfHkk0/iwAMPxM4774wbbrgBCxcuxPDwMH7xi1/g//2//4eHHnqo2UUUhFBoHGRZQHc3MDqqlnzv7W1uuQRBEARBMDMwALz2GrDJJs0uSZvgkPDjALCaXRpBEOqMOH84jgOURpvzE1NxnzNnjvszc+ZMWJble+3OO+/EDjvsgL6+PixcuBDXX3+9+91CoYCzzjoLc+fORV9fH7beemtcddVVAIBtttkGAHD00UfDsiz373TV6OC0007DggUL8Mgjj+CII47AO9/5Tuy222647LLL8Itf/ML97Be/+EVst912mDp1Krbddlt86UtfQrFYjL2ve+65B7vssgumTJmCTTbZBAcddBBGR0dTl10QCH5JWpa39LsgCIIgCK2JRDElhJZ5l0oThEmBOH845THg7iY5Z44bAbqmTWgTt99+Oy699FJ873vfw3ve8x48/fTTOOOMMzBt2jSceuqpuO6663D//ffj7rvvxjve8Q6sWLECK1asAAA88cQTmD17Nm6++WYceuihyGazqcuxaNEiPP/887jjjjuQyVTri7NmzXJ/nz59Om655RZsscUWeO6553DGGWdg+vTp+MIXvhC5n5UrV+KEE07AN77xDRx99NEYHh7GI488AkduYEIN4M2ImrE0LUEQBEFoXUT8SYhThnL9SKUJwmRAxJ8O4rLLLsO3vvUtHHPMMQCA+fPn44UXXsANN9yAU089Fa+//joWLFiAfffdF5ZlYeutt3a/u9lmmwFQwsycOXMmVI7FixcDABYuXBj52UsuucT9fZtttsH555+PO++8M7b4UyqVcMwxx7jHsssuu6QstSD40QeQtoTEC4IgCEJLIy7dpNgV3UcGOIIwGRDxh5Odqhw4zdr3BBgdHcXSpUvx6U9/GmeccYb7eqlUwsyZMwGolbI+9KEPYfvtt8ehhx6KI488EgcffHCi/Rx22GF45JFHAABbb701nn/++arPJHHe3HXXXbjuuuuwdOlSjIyMoFQqYcaMGbG+++53vxsHHnggdtllFxxyyCE4+OCDceyxx2KjjTaKvX9BCEJ3/siAUhAEQRBaG3lIkxDHhlruXSpOECYDIv5wLGvCoVfNYmREiVY33XQT9tprL997FML13ve+F8uXL8evf/1r/O53v8Nxxx2Hgw46CPfcc0/s/fzoRz/C+Pg4AKC7u9v4me22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bW0NTz31VOIz0nYEAN02kNa3LC8v9ySWbzab+PnPfy5tSAAAnHjiidi6dSvuv/9+ANJmppWrrroKX/7yl/HNb34Txx13XPfnLu+h5eVlYz9EvxMmD1t7MXHeeecBQKKPkfYyXVSrVZx88sk455xzcO211+Lss8/GH//xH0v/IlixtRkT0seML1Mp/lSrVZxzzjn4xje+0f1Zu93GN77xjUTsoiAAwKFDh/DAAw9g586dOOecc1CpVBJt57777sPDDz8sbUfACSecgOXl5UT7ePrpp/Gd73yn2z727t2Lp556CnfddVf3M7fccgva7Xb3ZSlMN//0T/+EJ598Ejt37gQgbWbaiKIIV111FW666SbccsstOOGEExK/d3kP7d27Fz/84Q8TouHXvvY1LCwsdG36wmSQ1V5M3H333QCQ6GOkvUw37XYbq6ur0r8IzlCbMSF9zBgz6ozTo+Kzn/1sVKvVohtvvDG69957o7e//e3R0tJSIgu5MJ38zu/8TnTrrbdGDz74YPTtb387uvDCC6OtW7dGjz/+eBRFUfSOd7wj2r17d3TLLbdE3/ve96K9e/dGe/fuHXGphWFx8ODB6Pvf/370/e9/PwIQffSjH42+//3vR//4j/8YRVEUXXfdddHS0lL0pS99KbrnnnuiSy65JDrhhBOio0ePdo9x8cUXR895znOi73znO9Htt98ePeMZz4je8IY3jOqShAGT1mYOHjwY/dt/+2+jO+64I3rwwQejr3/969Fzn/vc6BnPeEa0srLSPYa0menhne98Z7S4uBjdeuut0b59+7p/jhw50v1M1nuo2WxGZ5xxRvSKV7wiuvvuu6OvfOUr0bZt26JrrrlmFJckDJCs9nL//fdH/+E//Ifoe9/7XvTggw9GX/rSl6ITTzwxOv/887vHkPYyXXzgAx+IbrvttujBBx+M7rnnnugDH/hAFARB9H//7/+Nokj6F6GXtDYjfczGYmrFnyiKok984hPR7t27o2q1Gp177rnRnXfeOeoiCWPA6173umjnzp1RtVqNjj322Oh1r3tddP/993d/f/To0eg3f/M3o02bNkUzMzPRr/7qr0b79u0bYYmFYfLNb34zAtDz57LLLouiSG33/u/+3b+LduzYEdVqteiCCy6I7rvvvsQxnnzyyegNb3hDNDc3Fy0sLERvfvObo4MHD47gaoRhkNZmjhw5Er3iFa+Itm3bFlUqlWjPnj3R2972tp6FCGkz04OprQCIbrjhhu5nXN5DDz30UPTKV74yajQa0datW6Pf+Z3fidbX14d8NcKgyWovDz/8cHT++edHmzdvjmq1WnTyySdH733ve6MDBw4kjiPtZXp4y1veEu3ZsyeqVqvRtm3bogsuuKAr/ESR9C9CL2ltRvqYjUUQRVE0PJ+RIAiCIAiCIAiCIAiCMEymMuePIAiCIAiCIAiCIAjCtCDijyAIgiAIgiAIgiAIwgQj4o8gCIIgCIIgCIIgCMIEI+KPIAiCIAiCIAiCIAjCBCPijyAIgiAIgiAIgiAIwgQj4o8gCIIgCIIgCIIgCMIEI+KPIAiCIAiCIAiCIAjCBCPijyAIgiAIgiAIgiAIwgQj4o8gCIIgCMKA+Pa3v40zzzwTlUoFr3nNa0ZdHEEQBEEQphQRfwRBEARB2JBcfvnlCIIAQRCgUqlgx44dePnLX44/+7M/Q7vdHnXxAADvec978OxnPxsPPvggbrzxxsTvVldXcfrpp+Ptb397z/fe97734YQTTsDBgweHVFJBEARBECYZEX8EQRAEQdiwXHzxxdi3bx8eeugh3HzzzXjpS1+K3/7t38arXvUqNJvNURcPDzzwAF72spfhuOOOw9LSUuJ3tVoN/+t//S/ceOON+OpXv9r9+Z133ok/+qM/wo033oj5+flCyxNF0VjUiyAIgiAIw0XEH0EQBEEQNiy1Wg3Ly8s49thj8dznPhe/+7u/iy996Uu4+eabE06bj370ozjzzDMxOzuLXbt24Td/8zdx6NAhAMDhw4exsLCAz3/+84ljf/GLX8Ts7KzVfbO6uop3vetd2L59O+r1On75l38Z3/3udwEADz30EIIgwJNPPom3vOUtCIKgx/kDAOeccw5+7/d+D1dccQWeeuoprKys4M1vfjN+67d+Cy9+8Ytx++2340UvehEajQZ27dqFd73rXTh8+HD3+3/+53+O5z3veZifn8fy8jLe+MY34vHHH+/+/tZbb0UQBLj55ptxzjnnoFar4fbbb89b3YIgCIIgbFBE/BEEQRAEYaJ42ctehrPPPhtf+MIXuj8LwxAf//jH8eMf/xif+tSncMstt+B973sfAGB2dhavf/3rccMNNySOc8MNN+Bf/at/ZXXfvO9978Nf//Vf41Of+hT+7u/+DieffDIuuugi/PznP8euXbuwb98+LCws4GMf+xj27duH173udcbj/N7v/R6Wl5fxrne9C7//+7+PIAjwn/7Tf8IDDzyAiy++GJdeeinuuece/OVf/iVuv/12XHXVVd3vrq+v4w/+4A/wgx/8AF/84hfx0EMP4fLLL+85xwc+8AFcd911+MlPfoKzzjrLt0oFQRAEQdjgBFEURaMuhCAIgiAIgi+XX345nnrqKXzxi1/s+d3rX/963HPPPbj33nuN3/385z+Pd7zjHXjiiScAAH/7t3+LX/qlX8IjjzyCnTt34vHHH8exxx6Lr3/963jxi1/c8/3Dhw9j06ZNuPHGG/HGN74RgBJijj/+eLz73e/Ge9/7XgDA0tISPvaxjxkFGc69996Lc845B+12G9/+9rfxvOc9D29961tRKpXwP/7H/+h+7vbbb8eLX/xiHD58GPV6vec43/ve9/D85z8fBw8exNzcHG699Va89KUvxRe/+EVccsklqWUQBEEQBGFyEeePIAiCIAgTRxRFCIKg+/+vf/3ruOCCC3Dsscdifn4ev/Zrv4Ynn3wSR44cAQCce+65OP300/GpT30KAPC///f/xp49e3D++ecbj//AAw9gfX0dL3zhC7s/q1QqOPfcc/GTn/zEu7ynnXYaLr30Urz85S/H8573PADAD37wA9x4442Ym5vr/rnooovQbrfx4IMPAgDuuusuvPrVr8bu3bsxPz/fFaoefvjhxPHpmIIgCIIgTCci/giCIAiCMHH85Cc/wQknnABA5d951atehbPOOgt//dd/jbvuuguf/OQnAQBra2vd77z1rW/t5uW54YYb8OY3vzkhIA2acrmMcrnc/f+hQ4fwG7/xG7j77ru7f37wgx/gpz/9KU466SQcPnwYF110ERYWFvDpT38a3/3ud3HTTTf1XBegQtsEQRAEQZheytkfEQRBEARB2Djccsst+OEPf4irr74agHLHtNtt/Nf/+l8Rhmrd66/+6q96vvdv/s2/wfve9z58/OMfx7333ovLLrvMeo6TTjoJ1WoV3/72t7Fnzx4AKuzru9/9Lt797ncXch3Pfe5zce+99+Lkk082/v6HP/whnnzySVx33XXYtWsXABX2JQiCIAiCoCPijyAIgiAIG5bV1VXs378frVYLjz32GL7yla/g2muvxate9Sr8+q//OgDg5JNPxvr6Oj7xiU/g1a9+Nb797W/jT/7kT3qOtWnTJrz2ta/Fe9/7XrziFa/AcccdZz3v7Ows3vnOd+K9730vNm/ejN27d+MjH/kIjhw5giuuuKKQa3v/+9+PF7zgBbjqqqvw1re+FbOzs7j33nvxta99Df/tv/037N69G9VqFZ/4xCfwjne8Az/60Y/wB3/wB4WcWxAEQRCEyULCvgRBEARB2LB85Stfwc6dO3H88cfj4osvxje/+U18/OMfx5e+9CWUSiUAwNlnn42PfvSj+M//+T/jjDPOwKc//Wlce+21xuNdccUVWFtbw1ve8pbMc1933XW49NJL8Wu/9mt47nOfi/vvvx9f/epXsWnTpkKu7ayzzsJtt92Gf/iHf8CLXvQiPOc5z8EHP/hBHHPMMQCAbdu24cYbb8TnPvc5nHbaabjuuuvwX/7Lfynk3IIgCIIgTBay25cgCIIgCEKHP//zP8fVV1+NRx99FNVqddTFEQRBEARBKAQJ+xIEQRAEYeo5cuQI9u3bh+uuuw6/8Ru/IcKPIAiCIAgThYR9CYIgCIIw9XzkIx/BqaeeiuXlZVxzzTWjLo4gCIIgCEKhSNiXIAiCIAiCIAiCIAjCBCPOH0EQBEEQBEEQBEEQhAlGxB9BEARBEARBEARBEIQJRsQfQRAEQRAEQRAEQRCECUbEH0EQBEEQBEEQBEEQhAlGxB9BEARBEARBEARBEIQJRsQfQRAEQRAEQRAEQRCECUbEH0EQBEEQBEEQBEEQhAlGxB9BEARBEARBEARBEIQJ5v8PpzwzzdU5LwUAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##3.3.Scaling of data"],"metadata":{"id":"b7plCHFTcel6"}},{"cell_type":"code","source":["# Initialize the scaler\n","from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","# Fit the scaler on the training data and transform it\n","X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train), columns=X_train.columns, index=X_train.index)\n","\n","# Transform the test data using the same scaler\n","X_test_scaled = pd.DataFrame(scaler.transform(X_test), columns=X_test.columns, index=X_test.index)"],"metadata":{"id":"k6zU-r27VW09"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#4.Model Building Using Multivariate LR\n"],"metadata":{"id":"FzHdOOPHcqmX"}},{"cell_type":"markdown","source":["##4.1.Training and Evaluation"],"metadata":{"id":"O_Fi7LaFeHqz"}},{"cell_type":"code","source":["# Wrap Linear Regression inside MultiOutputRegressor\n","lr_base = LinearRegression()\n","lr_model = MultiOutputRegressor(lr_base)\n","lr_model.fit(X_train_scaled, y_train)\n","\n","# Predict\n","y_pred = lr_model.predict(X_test_scaled)\n","\n","# Target variable names\n","targets = ['NumEmails', 'NumCalls']\n","\n","# Metric evaluation\n","for i, target in enumerate(targets):\n","    mae = mean_absolute_error(y_test.iloc[:, i], y_pred[:, i])\n","    rmse = np.sqrt(mean_squared_error(y_test.iloc[:, i], y_pred[:, i]))\n","    cv_score = cross_val_score(\n","        lr_model.estimators_[i], X_train_scaled, y_train.iloc[:, i],\n","        cv=5, scoring='neg_mean_squared_error'\n","    )\n","    cv_rmse = np.mean(np.sqrt(-cv_score))\n","\n","    print(f\"Linear Regression ({target})\")\n","    print(f\"MAE:{mae:.2f}\")\n","    print(f\"RMSE:{rmse:.2f}\")\n","    print(f\"CV RMSE:{cv_rmse:.2f}\")\n","    print(\"-\" * 50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SOrUKWGNhTOk","executionInfo":{"status":"ok","timestamp":1751050612558,"user_tz":-300,"elapsed":26,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"b6a101ed-2a8c-40ba-ce7e-9a67edbc0460"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Linear Regression (NumEmails)\n","MAE:5.55\n","RMSE:7.19\n","CV RMSE:5.80\n","--------------------------------------------------\n","Linear Regression (NumCalls)\n","MAE:5.53\n","RMSE:6.70\n","CV RMSE:6.40\n","--------------------------------------------------\n"]}]},{"cell_type":"code","source":["print(\"Mean NumEmails:\", y_test['NumEmails'].mean())\n","print(\"Mean NumCalls:\", y_test['NumCalls'].mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ePows0tO6qAD","executionInfo":{"status":"ok","timestamp":1751050612565,"user_tz":-300,"elapsed":6,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e3e86aed-7b8f-4f9b-84f6-b91c91c3791c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean NumEmails: 29.835087719298247\n","Mean NumCalls: 38.4280701754386\n"]}]},{"cell_type":"markdown","source":["##4.2.Feature importance\n","\n","- It is simple equals to calculating the coefficients of your each variable!!"],"metadata":{"id":"djKVFaheeLfj"}},{"cell_type":"code","source":["# Show feature importance (coefficients)\n","print(\"Feature Coefficients:\")\n","feature_names = X_train_scaled.columns if isinstance(X_train_scaled, pd.DataFrame) else [f\"Feature_{i}\" for i in range(X_train_scaled.shape[1])]\n","for i, target in enumerate(targets):\n","    coefs = lr_model.estimators_[i].coef_\n","    coef_df = pd.DataFrame({\n","        'Feature': feature_names,\n","        'Coefficient': coefs\n","    }).sort_values(by='Coefficient', key=np.abs, ascending=False)\n","    print(f\"\\nTarget: {target}\")\n","    display(coef_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"yKU6oX0sczSh","executionInfo":{"status":"ok","timestamp":1751050612575,"user_tz":-300,"elapsed":9,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"e9653fc4-31c4-4a77-ee9d-7dea615c8b53"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Feature Coefficients:\n","\n","Target: NumEmails\n"]},{"output_type":"display_data","data":{"text/plain":["                     Feature  Coefficient\n","13           day_of_year_sin   -10.923500\n","15          week_of_year_sin    10.536304\n","2                      Month     6.788437\n","14           day_of_year_cos    -5.799764\n","16          week_of_year_cos     5.051591\n","4               week_of_year    -2.719255\n","3                day_of_year    -2.713176\n","11                 Month_sin     2.667413\n","25  NumEmails_rolling_mean_7     1.213626\n","12                 Month_cos     1.121741\n","21   NumCalls_rolling_mean_7     0.799898\n","1                  IsWeekend    -0.667222\n","10             DayOfWeek_cos     0.598791\n","5                    quarter     0.483907\n","17               quarter_sin    -0.483907\n","19            NumCalls_lag_1    -0.426740\n","20            NumCalls_lag_7     0.385214\n","23           NumEmails_lag_1    -0.359557\n","8             PartOfDay_noon     0.299964\n","9              DayOfWeek_sin    -0.282643\n","22    NumCalls_rolling_std_7    -0.243656\n","0                  DayOfWeek     0.243115\n","24           NumEmails_lag_7    -0.216260\n","6        PartOfDay_afternoon    -0.186423\n","26   NumEmails_rolling_std_7    -0.165921\n","7          PartOfDay_morning    -0.113542\n","18               quarter_cos     0.021733"],"text/html":["\n","  <div id=\"df-c5068b79-d9d2-41b8-bafd-4ffc26ac9c37\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Coefficient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13</th>\n","      <td>day_of_year_sin</td>\n","      <td>-10.923500</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>week_of_year_sin</td>\n","      <td>10.536304</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Month</td>\n","      <td>6.788437</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>day_of_year_cos</td>\n","      <td>-5.799764</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>week_of_year_cos</td>\n","      <td>5.051591</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>week_of_year</td>\n","      <td>-2.719255</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>day_of_year</td>\n","      <td>-2.713176</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Month_sin</td>\n","      <td>2.667413</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>NumEmails_rolling_mean_7</td>\n","      <td>1.213626</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Month_cos</td>\n","      <td>1.121741</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>NumCalls_rolling_mean_7</td>\n","      <td>0.799898</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>IsWeekend</td>\n","      <td>-0.667222</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>DayOfWeek_cos</td>\n","      <td>0.598791</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>quarter</td>\n","      <td>0.483907</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>quarter_sin</td>\n","      <td>-0.483907</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>NumCalls_lag_1</td>\n","      <td>-0.426740</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>NumCalls_lag_7</td>\n","      <td>0.385214</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>NumEmails_lag_1</td>\n","      <td>-0.359557</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>PartOfDay_noon</td>\n","      <td>0.299964</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>DayOfWeek_sin</td>\n","      <td>-0.282643</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>NumCalls_rolling_std_7</td>\n","      <td>-0.243656</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DayOfWeek</td>\n","      <td>0.243115</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>NumEmails_lag_7</td>\n","      <td>-0.216260</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>PartOfDay_afternoon</td>\n","      <td>-0.186423</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>NumEmails_rolling_std_7</td>\n","      <td>-0.165921</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>PartOfDay_morning</td>\n","      <td>-0.113542</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>quarter_cos</td>\n","      <td>0.021733</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5068b79-d9d2-41b8-bafd-4ffc26ac9c37')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5068b79-d9d2-41b8-bafd-4ffc26ac9c37 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5068b79-d9d2-41b8-bafd-4ffc26ac9c37');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ae80a43c-1ccf-4a97-9886-a6d419ce9bef\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae80a43c-1ccf-4a97-9886-a6d419ce9bef')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ae80a43c-1ccf-4a97-9886-a6d419ce9bef button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5ce77df6-cdd2-41ad-84ba-310d4330e438\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('coef_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5ce77df6-cdd2-41ad-84ba-310d4330e438 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('coef_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"coef_df","summary":"{\n  \"name\": \"coef_df\",\n  \"rows\": 27,\n  \"fields\": [\n    {\n      \"column\": \"Feature\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"NumEmails_rolling_mean_7\",\n          \"quarter\",\n          \"Month_cos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Coefficient\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.7317075810372557,\n        \"min\": -10.923500029417735,\n        \"max\": 10.53630368792858,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          1.2136260339402394,\n          0.48390746356556524,\n          1.1217405019249038\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Target: NumCalls\n"]},{"output_type":"display_data","data":{"text/plain":["                     Feature  Coefficient\n","21   NumCalls_rolling_mean_7     1.549464\n","11                 Month_sin     1.422790\n","14           day_of_year_cos     1.101478\n","2                      Month     0.906994\n","12                 Month_cos    -0.826263\n","13           day_of_year_sin    -0.428096\n","0                  DayOfWeek    -0.381255\n","15          week_of_year_sin    -0.359157\n","16          week_of_year_cos     0.320676\n","6        PartOfDay_afternoon    -0.308569\n","25  NumEmails_rolling_mean_7    -0.305755\n","10             DayOfWeek_cos    -0.304524\n","19            NumCalls_lag_1    -0.290561\n","1                  IsWeekend     0.274671\n","8             PartOfDay_noon     0.237876\n","20            NumCalls_lag_7     0.230670\n","18               quarter_cos    -0.187922\n","24           NumEmails_lag_7    -0.154307\n","5                    quarter     0.151524\n","17               quarter_sin    -0.151524\n","23           NumEmails_lag_1    -0.131084\n","4               week_of_year     0.103307\n","3                day_of_year     0.093018\n","7          PartOfDay_morning     0.070692\n","22    NumCalls_rolling_std_7    -0.042850\n","26   NumEmails_rolling_std_7    -0.033441\n","9              DayOfWeek_sin    -0.010572"],"text/html":["\n","  <div id=\"df-45c84726-de44-48f3-b182-d9f428bb67e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Coefficient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>NumCalls_rolling_mean_7</td>\n","      <td>1.549464</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Month_sin</td>\n","      <td>1.422790</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>day_of_year_cos</td>\n","      <td>1.101478</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Month</td>\n","      <td>0.906994</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Month_cos</td>\n","      <td>-0.826263</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>day_of_year_sin</td>\n","      <td>-0.428096</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>DayOfWeek</td>\n","      <td>-0.381255</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>week_of_year_sin</td>\n","      <td>-0.359157</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>week_of_year_cos</td>\n","      <td>0.320676</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>PartOfDay_afternoon</td>\n","      <td>-0.308569</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>NumEmails_rolling_mean_7</td>\n","      <td>-0.305755</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>DayOfWeek_cos</td>\n","      <td>-0.304524</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>NumCalls_lag_1</td>\n","      <td>-0.290561</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>IsWeekend</td>\n","      <td>0.274671</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>PartOfDay_noon</td>\n","      <td>0.237876</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>NumCalls_lag_7</td>\n","      <td>0.230670</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>quarter_cos</td>\n","      <td>-0.187922</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>NumEmails_lag_7</td>\n","      <td>-0.154307</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>quarter</td>\n","      <td>0.151524</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>quarter_sin</td>\n","      <td>-0.151524</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>NumEmails_lag_1</td>\n","      <td>-0.131084</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>week_of_year</td>\n","      <td>0.103307</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>day_of_year</td>\n","      <td>0.093018</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>PartOfDay_morning</td>\n","      <td>0.070692</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>NumCalls_rolling_std_7</td>\n","      <td>-0.042850</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>NumEmails_rolling_std_7</td>\n","      <td>-0.033441</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>DayOfWeek_sin</td>\n","      <td>-0.010572</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45c84726-de44-48f3-b182-d9f428bb67e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-45c84726-de44-48f3-b182-d9f428bb67e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-45c84726-de44-48f3-b182-d9f428bb67e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a08deb93-7e7e-489e-9279-4ddc665ed215\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a08deb93-7e7e-489e-9279-4ddc665ed215')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a08deb93-7e7e-489e-9279-4ddc665ed215 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_3f2c5469-959c-4795-8158-23c1f517bf4b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('coef_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3f2c5469-959c-4795-8158-23c1f517bf4b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('coef_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"coef_df","summary":"{\n  \"name\": \"coef_df\",\n  \"rows\": 27,\n  \"fields\": [\n    {\n      \"column\": \"Feature\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"week_of_year_cos\",\n          \"IsWeekend\",\n          \"PartOfDay_afternoon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Coefficient\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5603780838886696,\n        \"min\": -0.8262625804033925,\n        \"max\": 1.5494642477380425,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          0.3206757204093991,\n          0.2746714315439366,\n          -0.3085685555915662\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["### **How to Read Coefficients**\n","\n","In a linear model:\n","\n","* **Positive coefficient**: As this feature increases, the predicted value **increases**.\n","* **Negative coefficient**: As this feature increases, the predicted value **decreases**.\n","* **Larger absolute value**: More impact on the prediction.\n","\n","---\n","\n","### **Insights for NumEmails**\n","\n","Top features impacting email volume:\n","\n","| Feature                            | Insight                                                                                                                        |\n","| ---------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n","| `NumEmails_rolling_mean_7` (+3.24) | If the 7-day average email volume is high, today's email volume is expected to be high too. Strong temporal dependency.        |\n","| `NumEmails_lag_1` (−0.77)          | If yesterday’s email volume was high, today might see a slight drop — maybe reflecting burst patterns or one-off email surges. |\n","| `Month` (+0.73)                    | Certain months likely bring more email traffic — possibly tied to seasonal workloads.                                          |\n","| `PartOfDay_noon` (+0.48)           | Noon hours likely have higher email activity.                                                                                  |\n","| `NumCalls_rolling_mean_7` (−0.37)  | As calls increase over the week, emails might reduce — possibly channel switching (calls instead of emails).                   |\n","\n","---\n","\n","### ✅ **Insights for NumCalls**\n","\n","Top features impacting call volume:\n","\n","| Feature                           | Insight                                                                                 |\n","| --------------------------------- | --------------------------------------------------------------------------------------- |\n","| `NumCalls_rolling_mean_7` (+5.77) | Strongest predictor — if recent calls are high, today's will likely be high too.        |\n","| `IsWeekend` (−2.36)               | Weekends clearly reduce calls — aligns with normal business logic.                      |\n","| `NumCalls_lag_1` (−1.41)          | If yesterday had a spike in calls, today may calm down — possible daily load balancing. |\n","| `Month` (+1.23)                   | Monthly seasonality: some months see more customer issues or queries.                   |\n","| `DayOfWeek_cos` (+1.21)           | Indicates specific days (like Mondays?) have systematically higher call volumes.        |\n","\n","---\n","\n","### 🔍 Additional Notable Observations\n","\n","* `PartOfDay_noon` boosts emails but has smaller effect on calls — midday is email-heavy.\n","* `Month_cos` and `Month_sin` are used to model seasonality smoothly. Both appear in mid to lower ranks.\n","* Features like `day_of_year_sin`, `day_of_year_cos`, and `week_of_year` capture more subtle seasonal cycles.\n","* `NumEmails` stats (e.g., `rolling_mean_7`, `lag_1`) also influence `NumCalls`, though less strongly — implying some **cross-dependence**.\n","\n"],"metadata":{"id":"zuYGGDccmiQx"}},{"cell_type":"markdown","source":["##4.3.Plotting actual vs predicted Calls and Emails"],"metadata":{"id":"C5sYMwp2eZSp"}},{"cell_type":"code","source":["# Prepare for plotting actual vs predicted\n","test_data['Date'] = pd.to_datetime(test_data['Date'])\n","\n","actual_df = y_test.copy()\n","actual_df['date'] = test_data['Date']\n","\n","predicted_df = pd.DataFrame(y_pred, columns=['Pred_NumEmails', 'Pred_NumCalls'])\n","predicted_df['date'] = test_data.reset_index(drop=True)['Date'].dt.date\n","\n","# Aggregate by date\n","daily_actual = actual_df.groupby('date')[['NumEmails', 'NumCalls']].mean()\n","daily_predicted = predicted_df.groupby('date')[['Pred_NumEmails', 'Pred_NumCalls']].mean()\n","\n","# Plot actual vs predicted\n","for target in targets:\n","    plt.figure(figsize=(12, 5))\n","    plt.plot(daily_actual.index, daily_actual[target], label=f'Actual {target}', color='blue', linewidth=2)\n","    plt.plot(daily_predicted.index, daily_predicted[f'Pred_{target}'], label=f'Predicted {target} (Linear Regression)', color='red', linestyle='--', linewidth=2)\n","    plt.title(f\"Linear Regression: Daily Actual vs Predicted - {target}\")\n","    plt.xlabel('Date')\n","    plt.ylabel(target)\n","    plt.xticks(rotation=45)\n","    plt.legend()\n","    plt.tight_layout()\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":986},"id":"5PDfOwjsc3lH","executionInfo":{"status":"ok","timestamp":1751050613300,"user_tz":-300,"elapsed":722,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"94236053-7c11-4270-dd90-2851ac522549"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"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WrRogfPnzxtdI4yIiIiIbIc1poiIiIzw5s0bvfvXrl3D5s2bUatWLfs0iMzy8OFDbNq0CZ07d7Z3U4iIiIgIADOmiIiIjJAzZ05069YNBQoUwO3btzFnzhxER0fj9OnTKFy4sL2bRym4efMmDh06hF9//RXHjx9HSEgI/P397d0sIiIioncei58TEREZoUGDBlixYgUePXoEFxcXVKlSBd999x2DUunEvn370L17d+TNmxdLlixhUIqIiIgojWDGFBERERERERER2QVrTBERERERERERkV0wMEVERERERERERHaR4WtMxcfH48GDB/D09IRGo7F3c4iIiIiIiIiIMjQhBF69eoWAgAA4OCSfE5XhA1MPHjxAnjx57N0MIiIiIiIiIqJ3yt27d5E7d+5kl8nwgSlPT08A8s3w8vKyc2uIiIiIiIiIiDK2ly9fIk+ePNqYTHIyfGBK6b7n5eXFwBQRERERERERUSoxpqQSi58TEREREREREZFdMDBFRERERERERER2wcAUERERERERERHZRYavMWWM+Ph4xMTE2LsZRETphrOzc4rDvhIREREREaXknQ9MxcTE4ObNm4iPj7d3U4iI0g0HBwfkz58fzs7O9m4KERERERGlY+90YEoIgYcPH8LR0RF58uTh1X8iIiPEx8fjwYMHePjwIfLmzWvUSBtERERERESGvNOBqdjYWERGRiIgIADu7u72bg4RUbrh6+uLBw8eIDY2Fk5OTvZuDhERERERpVPvdIpQXFwcALArChGRiZT9prIfJSIiIiIiMsc7HZhSsBsKEZFpuN8kIiIiIiJrYGCKiIiIiIiIiIjsgoEpsjqNRoMNGzbYuxlp0t69e6HRaPDixQsAwOLFi+Hj42PXNhERERERERHZCwNT6diRI0fg6OiIxo0bm/zcfPnyYfr06dZvlBG6desGjUaDSZMm6c3fsGFDqnUP0mg0Bm8rV6606XarVq2Khw8fwtvb26bbISIiIiIiIkoPGJhKxxYsWIDPPvsM+/fvx4MHD+zdHJO4urri+++/R1hYmN3asGjRIjx8+FDv1rx5c5tu09nZGf7+/qzPQ0RERERERAQGptKt169fY9WqVfj000/RuHFjLF68ONEyf/31FypVqgRXV1dkz54dLVq0AADUqlULt2/fxueff67NFAKAMWPGoGzZsnrrmD59OvLly6e9f/z4cdSrVw/Zs2eHt7c3atasiVOnTpnc/rp168Lf3x8TJ05Mchlj2tOtWzc0b94c3333Hfz8/ODj44Nx48YhNjYWQ4cORdasWZE7d24sWrQo0fp9fHzg7++vd3N1dQWgdrH7+++/UbRoUbi7u6N169aIjIzEkiVLkC9fPmTJkgUDBgzQG5Vs6dKlqFixIjw9PeHv748OHTrg8ePH2scTduVL6OzZs/jwww/h6ekJLy8vVKhQASdOnDDiHSUiIiIiIqI0Twh7tyDNYWAqnVq9ejWKFSuGokWLolOnTli4cCGEzgd806ZNaNGiBRo1aoTTp09j165deO+99wAA69atQ+7cuTFu3DhtppCxXr16ha5du+LgwYM4evQoChcujEaNGuHVq1cmtd/R0RHfffcdZs2ahXv37pn03IR2796NBw8eYP/+/Zg6dSpGjx6NJk2aIEuWLDh27Bg++eQT9OnTx+TtREZGYubMmVi5ciW2bt2KvXv3okWLFti8eTM2b96MpUuXYu7cufjjjz+0z3n79i3Gjx+Ps2fPYsOGDbh16xa6detm9DY7duyI3Llz4/jx4zh58iSGDx8OJycnk9pNREREREREacClS8CyZcDmzUBoKPDsGVC9OnDokL1blqZksncD0pqKFYFHj1J/u/7+gCmJMQsWLECnTp0AAA0aNEB4eDj27duHWrVqAQC+/fZbtGvXDmPHjtU+p0yZMgCArFmzwtHRUZvVY4ratWvr3Z83bx58fHywb98+NGnSxKR1tWjRAmXLlsXo0aOxYMECk56rK2vWrJg5cyYcHBxQtGhRTJ48GZGRkfjqq68AACNGjMCkSZNw8OBBtGvXTvu89u3bw9HRUW9dly5dQt68eQHIINOcOXNQsGBBAEDr1q2xdOlShIaGwsPDAyVKlMCHH36IPXv2oG3btgCAjz/+WLuuAgUKYObMmahUqRJev34NDw+PFF/LnTt3MHToUBQrVgwAULhwYbPfFyIiIiIiIrKjTZuAL7+U06tXA8uXy6BUjRrAqFHA118DmRiW4TuQwKNHwP379m5F8q5evYp//vkH69evBwBkypQJbdu2xYIFC7SBqTNnzqBXr15W33ZoaCi+/vpr7N27F48fP0ZcXBwiIyNx584ds9b3/fffo3bt2hgyZIjZbSpZsiQcHNTkPz8/P5QqVUp739HREdmyZdPrUgcA06ZNQ926dfXmBQQEaKfd3d21QSllvfny5dMLMPn5+emt9+TJkxgzZgzOnj2LsLAwxMfHA5ABpxIlSqT4Wr744gv07NkTS5cuRd26dfG///1Prw1ERERERESUTujWVM6UCXj6VE7HxwNjxwI7dsiMKp1yNe8iBqYSMDGByC7bXbBgAWJjY/WCKEIIuLi44KeffoK3tzfc3NxMboODg4Ned0BAZg3p6tq1K549e4YZM2YgMDAQLi4uqFKlCmJiYkzeHgDUqFEDwcHBGDFiRKIub8a0B0Cirm4ajcbgPCVIpPD390ehQoWSbJup642IiEBwcDCCg4OxbNky+Pr64s6dOwgODjb6/RkzZgw6dOiATZs2YcuWLRg9ejRWrlyprQ9GRERERERE6YRuYCpvXmDPHmDiRBmUiosDDh8GypQBfvkFaN/efu20MwamEkjrdaZjY2Px22+/4ccff0T9+vX1HmvevDlWrFiBTz75BKVLl8auXbvQvXt3g+txdnbWK9oNAL6+vnj06BGEENqC6GfOnNFb5tChQ5g9ezYaNWoEALh79y6eKlFfM02aNAlly5ZF0aJFTW5PWnLlyhU8e/YMkyZNQp48eQDArMLlRYoUQZEiRfD555+jffv2WLRoEQNTRERERERE6Y1uYCpLFpk1NWoUULcu0KEDcOsW8PKlnN66FfjpJ8DT027NtRcWP09n/v77b4SFhaFHjx4oVaqU3q1Vq1baWk2jR4/GihUrMHr0aFy+fBnnz5/H999/r11Pvnz5sH//fty/f18bWKpVqxaePHmCyZMnIyQkBD///DO2bNmit/3ChQtj6dKluHz5Mo4dO4aOHTualZ2lKygoCB07dsTMmTP15hvTHku8ePECjx490rtFRESYvb68efPC2dkZs2bNwo0bN7Bx40aMHz/e6Oe/efMG/fv3x969e3H79m0cOnQIx48fR/Hixc1uExEREREREdlJwsCUokoV4MwZoGNHdd5vvwFlywLHjqVW69IMBqbSmQULFqBu3brw9vZO9FirVq1w4sQJnDt3DrVq1cKaNWuwceNGlC1bFrVr18Y///yjXXbcuHG4desWChYsCF9fXwBA8eLFMXv2bPz8888oU6YM/vnnn0S1nxYsWICwsDCUL18enTt3xoABA5AjRw6LX9e4ceMSdbUzpj2W6N69O3LmzKl3mzVrltnr8/X1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U9y8eRMdOnSwd9Os6tatW5g9e3aSQSkiIiIiIkpGfLwsgE5GYWCKiAwqW7YsOnfubO9mpCkODg5YvHgxKlWqhGrVquH8+fPYuXNnkvWe0quKFSuibdu29m4GEREREVH69NtvgIsL4OcHGBj1m/RxVD4iIiPlyZMHhw4dsncziIiIiIgoLQsLA96+BR4/BhyYD5QSvkNERERERERERNYSFqZOZ8liv3akEwxMERERERERERFZy4sX6jQDUyliYApyBDIiIjIe95tEREREREnQzZjy8bFbM9KLd7rGlJOTEzQaDZ48eQJfX19oNBp7N4mIKM0TQuDJkyfQaDRwcnKyd3OIiIiIiNIWduUzyTsdmHJ0dETu3Llx79493Lp1y97NISJKNzQaDXLnzg1HR0d7N4WIiIiIKG1hYMok73RgCgA8PDxQuHBhvH371t5NISJKN5ycnBiUIiIiIiIyRAlMZc4MsIdBit75wBQgM6d4gkVEREREREREFlMCU8yWMgqLnxMRERERERERWQsDUyZhxhQRERERERERkTUIAWzaJINTLi72bk26wMAUEREREREREZE1aDRAnTr2bkW6wq58RERERERERERkFwxMERERERERERGRXbArHxERERERERGRNdy/D5w9KwufFyoE+Prau0VpHjOmiIiIiIiIiIisYfduoHFjoGpVYOVKe7cmXWBgioiIiIiIiIjIGsLC1OksWezXjnSEgSkiIiIiIiIiImtgYMpkDEwREREREREREVkDA1MmY2CKiIiIiIiIiMgaGJgyGQNTRERERERERETW8OKFOs3AlFEYmCIiIiIiIiIisgZmTJmMgSkiIiIiIiIiImtQAlNuboCLi33bkk4wMEVEREREREREZA1KYIrZUkZjYIqIiIiIiIiIyBpiY+VfBqaMlsneDSAiIiIiIiIiyhAePQLevgUiIuzdknSDGVNERERERERERNbi5AT4+Ni7FekGA1NERERERERERGQXDEwREREREREREZFdsMYUEREREREREZGlTp8G5syRhc+bNgU++MDeLUoXGJgiIiIiIiIiIrLU5cvA/PlyOiCAgSkjsSsfEREREREREZGlwsLU6SxZ7NeOdCbNBKYmTZoEjUaDQYMGaefVqlULGo1G7/bJJ5/Yr5FERERERERERIYwMGWWNNGV7/jx45g7dy5Kly6d6LFevXph3Lhx2vvu7u6p2TQiIiIiIiIiopQxMGUWu2dMvX79Gh07dsT8+fORxcA/zt3dHf7+/tqbl5eXHVpJRERERERERJQMBqbMYvfAVL9+/dC4cWPUrVvX4OPLli1D9uzZUapUKYwYMQKRkZGp3EIiIiIiIiIiohQwMGUWu3blW7lyJU6dOoXjx48bfLxDhw4IDAxEQEAAzp07h2HDhuHq1atYt25dkuuMjo5GdHS09v7Lly+t3m4iIiIiIiIiIj0MTJnFboGpu3fvYuDAgdixYwdcXV0NLtO7d2/tdFBQEHLmzIk6deogJCQEBQsWNPiciRMnYuzYsTZpMxERERERERGRQUpgytkZSCLOQYlphBDCHhvesGEDWrRoAUdHR+28uLg4aDQaODg4IDo6Wu8xAIiIiICHhwe2bt2K4OBgg+s1lDGVJ08ehIeHsz4VEREREREREdlG3rzA3buAnx/w6JG9W2NXL1++hLe3t1GxGLtlTNWpUwfnz5/Xm9e9e3cUK1YMw4YNSxSUAoAzZ84AAHLmzJnkel1cXODi4mLVthIRERERERERJathQ+D+fYBJMSaxW2DK09MTpUqV0puXOXNmZMuWDaVKlUJISAiWL1+ORo0aIVu2bDh37hw+//xz1KhRA6VLl7ZTq4mIiIiIiIiIDJg7194tSJfsWvw8Oc7Ozti5cyemT5+OiIgI5MmTB61atcLXX39t76YREREREREREZEV2K3GVGoxpV8jERERERERERFZxpRYjEMqtYmIiIiIiIiIiEgPA1NERERERERERJbYuVOOxlesGDBvnr1bk66k2RpTRERERERERETpwpMnwOPH8hYRYe/WpCvMmCIiIiIiIiIissSLF+q0j4+9WpEuMTBFRERERERERGSJsDB1OksW+7UjHWJgioiIiIiIiIjIEgxMmY2BKSIiIiIiIiIiSzAwZTYGpoiIiIiIiIiILMHAlNkYmCIiIiIiIiIisgQDU2ZjYIqIiIiIiIiIyBJKYCpTJiBzZvu2JZ1hYIqIiIiIiIiIyBIvXsi/WbIAGo1dm5LeZLJ3A4iIiIiIiIiI0rWZM4HQUEAIe7ck3WFgioiIiIiIiIjIEk2b2rsF6Ra78hERERERERERkV0wMEVERERERERERHbBrnxEREREREREROZ68QK4dEkWPg8IALy97d2idIUZU0RERERERERE5jp+HKhWDShRApg82d6tSXcYmCIiIiIiIiIiMldYmDqdJYv92pFOMTBFRERERERERGQuBqYswsAUEREREREREZG5GJiyCANTRERERERERETmevFCnWZgymQMTBERERERERERmYsZUxZhYIqIiIiIiIiIyFwMTFmEgSkiIiIiIiIiInMxMGURBqaIiIiIiIiIiMylBKYcHQFPT/u2JR1iYIqIiIiIiIiIyFxK8XMfH0CjsWdL0qVM9m4AEREREREREVG6dfmyDE69fm3vlqRLDEwREREREREREZnLyQnw9ZU3Mhm78hERERERERERkV0wMEVERERERERERHbBrnxEREREREREROa4cwf4+WcgSxagWjWgenV7tyjdYWCKiIiIiIiIiMgc168DkyfL6eHDGZgyA7vyERERERERERGZIyxMnc6SxX7tSMcYmCIiIiIiIiIiMgcDUxZjYIqIiIiIiIiIyBwMTFmMgSkiIiIiIiIiInMwMGUxBqaIiIiIiIiIiMzBwJTFGJgiIiIiIiIiIjKHbmDKx8duzUjPGJgiIiIiIiIiIjIHM6YsxsAUEREREREREZE5lMCURgN4e9u3LelUmglMTZo0CRqNBoMGDdLOi4qKQr9+/ZAtWzZ4eHigVatWCA0NtV8jiYiIiIiIiIgU5coB1aoBlSsDDmkmxJKupIl37fjx45g7dy5Kly6tN//zzz/HX3/9hTVr1mDfvn148OABWrZsaadWEhERERERERHpmDsXOHgQOHLE3i1Jt+wemHr9+jU6duyI+fPnI4tOf8zw8HAsWLAAU6dORe3atVGhQgUsWrQIhw8fxtGjR+3YYiIiIiIiIiIisga7B6b69euHxo0bo27dunrzT548ibdv3+rNL1asGPLmzYsjyUQio6Oj8fLlS70bERERERERERGlPZnsufGVK1fi1KlTOH78eKLHHj16BGdnZ/gkGG7Rz88Pjx49SnKdEydOxNixY63dVCIiIiIiIiIisjK7ZUzdvXsXAwcOxLJly+Dq6mq19Y4YMQLh4eHa2927d622biIiIiIiIiIiAMClS0DRosD77wMzZti7NemW3TKmTp48icePH6N8+fLaeXFxcdi/fz9++uknbNu2DTExMXjx4oVe1lRoaCj8/f2TXK+LiwtcXFxs2XQiIiIiIiIietc9fgz8+6+crlHDvm1Jx+wWmKpT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APj9999x//33IyMjozD76qWXXgIA5OTk4Omnn0blypVRokQJXHnllfj999/N+UWJiIiIPMTAFBEREZEJrrvuOjRr1gzffvstACAqKgqTJk3Ctm3b8Mknn2DJkiUYMWIEAKB9+/Z45513kJKSgqNHj+Lo0aN4+umnAQCPPvooVq9ejS+++AKbN29Gv3790LVrV+zevdu0342IiIjIXRYhhDC7EUREREThasCAATh37hzmz59f7Gd33HEHNm/ejO3btxf72ddff42HHnoIp06dAiBrTD355JM4d+5c4X0OHTqEWrVq4dChQ7jssssKb7/++uvRpk0bvP76637/fYiIiIj8KcbsBhARERFFKiEELBYLAOC3337D2LFj8c8//+D8+fPIz89HdnY2MjMzkZSUZPfxW7ZsQUFBAerWrWtze05ODsqWLWt4+4mIiIh8xcAUERERkUl27NiBmjVr4sCBA+jevTsefvhhvPbaayhTpgxWrlyJBx54ALm5uQ4DUxcvXkR0dDQ2bNiA6Ohom58lJycH4lcgIiIi8gkDU0REREQmWLJkCbZs2YKhQ4diw4YNsFqtmDBhAqKiZAnQL7/80ub+cXFxKCgosLmtefPmKCgowIkTJ3DNNdcErO1ERERE/sLAFBEREZHBcnJycOzYMRQUFOD48eP46aefMHbsWHTv3h333nsvtm7diry8PEyePBk9evTAH3/8gWnTptk8R40aNXDx4kUsXrwYzZo1Q1JSEurWrYu77roL9957LyZMmIDmzZvj5MmTWLx4MZo2bYqbb77ZpN+YiIiIyD3clY+IiIjIYD/99BMqVaqEGjVqoGvXrli6dCkmTZqEBQsWIDo6Gs2aNcPEiRMxfvx4NG7cGJ999hnGjh1r8xzt27fHQw89hNtvvx3ly5fHG2+8AQCYMWMG7r33XgwbNgz16tVDr169sG7dOlSrVs2MX5WIiIjII9yVj4iIiIiIiIiITMGMKSIiIiIiIiIiMgUDU0REREREREREZAoGpoiIiIiIiIiIyBQMTBERERERERERkSkYmCIiIiIiIiIiIlMwMEVERERERERERKZgYIqIiIiIiIiIiEzBwBQREREREREREZmCgSkiIiIiIiIiIjIFA1NERERERERERGQKBqaIiIiIiIiIiMgUDEwREREREREREZEp/h9aBm1OGIF/xwAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"n0Xjm_sGepZX"}},{"cell_type":"code","source":["import joblib\n","# Save the trained model (e.g., MultiOutputRegressor with LinearRegression)\n","joblib.dump(lr_model, 'forecast_model.pkl')\n","joblib.dump(scaler, 'scaler.pkl')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p9Sba9WitCVf","executionInfo":{"status":"ok","timestamp":1751050613334,"user_tz":-300,"elapsed":30,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"a7be90ed-d7fa-4d89-f6aa-24943323fbd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['scaler.pkl']"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["import requests\n","\n","url = \"https://myhuggingface333-email-and-calls-forecasting.hf.space/predict\"\n","\n","# ⚠️ Feature order matters! This must match training exactly\n","features = [\n","    3,      # DayOfWeek (e.g., Wednesday)\n","    0,      # IsWeekend (False)\n","    9,      # Month (September)\n","    270,    # day_of_year\n","    39,     # week_of_year\n","    3,      # quarter\n","    0,      # PartOfDay_afternoon (False)\n","    1,      # PartOfDay_morning (True)\n","    0,      # PartOfDay_noon (False)\n","    0.433884,     # DayOfWeek_sin\n","    -0.900969,    # DayOfWeek_cos\n","    -1.0,         # Month_sin\n","    -1.836970e-16,  # Month_cos\n","    -0.997018,    # day_of_year_sin\n","    -0.077175,    # day_of_year_cos\n","    -0.99605,     # week_of_year_sin\n","    -0.088796,    # week_of_year_cos\n","    -1.0,         # quarter_sin\n","    -1.836970e-16,  # quarter_cos\n","    43.0,         # NumCalls_lag_1\n","    37.0,         # NumCalls_lag_7\n","    41.809524,    # NumCalls_rolling_mean_7\n","    7.040022,     # NumCalls_rolling_std_7\n","    30.0,         # NumEmails_lag_1\n","    35.0,         # NumEmails_lag_7\n","    31.333333,    # NumEmails_rolling_mean_7\n","    5.833810      # NumEmails_rolling_std_7\n","]\n","\n","# Make POST request\n","response = requests.post(url, json={\"features\": features})\n","\n","# Output the result\n","print(response.status_code)\n","print(response.json())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CAc6a_ctz9Zi","executionInfo":{"status":"ok","timestamp":1751052078837,"user_tz":-300,"elapsed":285,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"0365a147-fab0-4f9b-f951-a5d077950e10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["200\n","{'NumCalls': 43.7, 'NumEmails': 31.24}\n"]}]},{"cell_type":"code","source":["!pip install gradio requests"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U8ZRD3Bq2Of5","executionInfo":{"status":"ok","timestamp":1751052265527,"user_tz":-300,"elapsed":6527,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"468014ed-0b4c-4855-e71b-2a29d61f473e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: gradio in /usr/local/lib/python3.11/dist-packages (5.31.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (2.32.3)\n","Requirement already satisfied: aiofiles<25.0,>=22.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (24.1.0)\n","Requirement already satisfied: anyio<5.0,>=3.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (4.9.0)\n","Requirement already satisfied: fastapi<1.0,>=0.115.2 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.115.13)\n","Requirement already satisfied: ffmpy in /usr/local/lib/python3.11/dist-packages (from gradio) (0.6.0)\n","Requirement already satisfied: gradio-client==1.10.1 in /usr/local/lib/python3.11/dist-packages (from gradio) (1.10.1)\n","Requirement already satisfied: groovy~=0.1 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.1.2)\n","Requirement already satisfied: httpx>=0.24.1 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.28.1)\n","Requirement already satisfied: huggingface-hub>=0.28.1 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.33.0)\n","Requirement already satisfied: jinja2<4.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (3.1.6)\n","Requirement already satisfied: markupsafe<4.0,>=2.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (3.0.2)\n","Requirement already satisfied: numpy<3.0,>=1.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (2.0.2)\n","Requirement already satisfied: orjson~=3.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (3.10.18)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from gradio) (24.2)\n","Requirement already satisfied: pandas<3.0,>=1.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (2.2.2)\n","Requirement already satisfied: pillow<12.0,>=8.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (11.2.1)\n","Requirement already satisfied: pydantic<2.12,>=2.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (2.11.7)\n","Requirement already satisfied: pydub in /usr/local/lib/python3.11/dist-packages (from gradio) (0.25.1)\n","Requirement already satisfied: python-multipart>=0.0.18 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.0.20)\n","Requirement already satisfied: pyyaml<7.0,>=5.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (6.0.2)\n","Requirement already satisfied: ruff>=0.9.3 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.12.0)\n","Requirement already satisfied: safehttpx<0.2.0,>=0.1.6 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.1.6)\n","Requirement already satisfied: semantic-version~=2.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (2.10.0)\n","Requirement already satisfied: starlette<1.0,>=0.40.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.46.2)\n","Requirement already satisfied: tomlkit<0.14.0,>=0.12.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.13.3)\n","Requirement already satisfied: typer<1.0,>=0.12 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.16.0)\n","Requirement already satisfied: typing-extensions~=4.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (4.14.0)\n","Requirement already satisfied: uvicorn>=0.14.0 in /usr/local/lib/python3.11/dist-packages (from gradio) (0.34.3)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from gradio-client==1.10.1->gradio) (2025.3.2)\n","Requirement already satisfied: websockets<16.0,>=10.0 in /usr/local/lib/python3.11/dist-packages (from gradio-client==1.10.1->gradio) (15.0.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests) (2025.6.15)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio<5.0,>=3.0->gradio) (1.3.1)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx>=0.24.1->gradio) (1.0.9)\n","Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*->httpx>=0.24.1->gradio) (0.16.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.28.1->gradio) (3.18.0)\n","Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.28.1->gradio) (4.67.1)\n","Requirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.28.1->gradio) (1.1.5)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas<3.0,>=1.0->gradio) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas<3.0,>=1.0->gradio) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas<3.0,>=1.0->gradio) (2025.2)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<2.12,>=2.0->gradio) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic<2.12,>=2.0->gradio) (2.33.2)\n","Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<2.12,>=2.0->gradio) (0.4.1)\n","Requirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0,>=0.12->gradio) (8.2.1)\n","Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0,>=0.12->gradio) (1.5.4)\n","Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.11/dist-packages (from typer<1.0,>=0.12->gradio) (13.9.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas<3.0,>=1.0->gradio) (1.17.0)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (2.19.2)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0,>=0.12->gradio) (0.1.2)\n"]}]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"Hfgp_Y_Q2oYD","executionInfo":{"status":"ok","timestamp":1751052364350,"user_tz":-300,"elapsed":194,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"df5f8025-3b69-4e03-cbaa-c66253c92d7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     DayOfWeek  IsWeekend  Month  day_of_year  week_of_year  quarter  \\\n","42           0          0      1           15             3        1   \n","43           0          0      1           15             3        1   \n","44           0          0      1           15             3        1   \n","45           1          0      1           16             3        1   \n","46           1          0      1           16             3        1   \n","..         ...        ...    ...          ...           ...      ...   \n","805          2          0      9          269            39        3   \n","806          2          0      9          269            39        3   \n","807          3          0      9          270            39        3   \n","808          3          0      9          270            39        3   \n","809          3          0      9          270            39        3   \n","\n","     PartOfDay_afternoon  PartOfDay_morning  PartOfDay_noon  DayOfWeek_sin  \\\n","42                  True              False           False       0.000000   \n","43                 False               True           False       0.000000   \n","44                 False              False            True       0.000000   \n","45                  True              False           False       0.781831   \n","46                 False               True           False       0.781831   \n","..                   ...                ...             ...            ...   \n","805                False               True           False       0.974928   \n","806                False              False            True       0.974928   \n","807                 True              False           False       0.433884   \n","808                False               True           False       0.433884   \n","809                False              False            True       0.433884   \n","\n","     DayOfWeek_cos  Month_sin     Month_cos  day_of_year_sin  day_of_year_cos  \\\n","42        1.000000        0.5  8.660254e-01         0.254671         0.967028   \n","43        1.000000        0.5  8.660254e-01         0.254671         0.967028   \n","44        1.000000        0.5  8.660254e-01         0.254671         0.967028   \n","45        0.623490        0.5  8.660254e-01         0.271234         0.962513   \n","46        0.623490        0.5  8.660254e-01         0.271234         0.962513   \n","..             ...        ...           ...              ...              ...   \n","805      -0.222521       -1.0 -1.836970e-16        -0.995546        -0.094279   \n","806      -0.222521       -1.0 -1.836970e-16        -0.995546        -0.094279   \n","807      -0.900969       -1.0 -1.836970e-16        -0.997018        -0.077175   \n","808      -0.900969       -1.0 -1.836970e-16        -0.997018        -0.077175   \n","809      -0.900969       -1.0 -1.836970e-16        -0.997018        -0.077175   \n","\n","     week_of_year_sin  week_of_year_cos  quarter_sin   quarter_cos  \\\n","42           0.348202           0.93742          1.0  6.123234e-17   \n","43           0.348202           0.93742          1.0  6.123234e-17   \n","44           0.348202           0.93742          1.0  6.123234e-17   \n","45           0.348202           0.93742          1.0  6.123234e-17   \n","46           0.348202           0.93742          1.0  6.123234e-17   \n","..                ...               ...          ...           ...   \n","805          -0.99605         -0.088796         -1.0 -1.836970e-16   \n","806          -0.99605         -0.088796         -1.0 -1.836970e-16   \n","807          -0.99605         -0.088796         -1.0 -1.836970e-16   \n","808          -0.99605         -0.088796         -1.0 -1.836970e-16   \n","809          -0.99605         -0.088796         -1.0 -1.836970e-16   \n","\n","     NumCalls_lag_1  NumCalls_lag_7  NumCalls_rolling_mean_7  \\\n","42             33.0            42.0                38.952381   \n","43             47.0            38.0                38.571429   \n","44             42.0            36.0                38.904762   \n","45             37.0            31.0                39.619048   \n","46             30.0            44.0                39.571429   \n","..              ...             ...                      ...   \n","805            55.0            36.0                38.952381   \n","806            42.0            26.0                39.761905   \n","807            34.0            30.0                40.523810   \n","808            39.0            37.0                41.523810   \n","809            43.0            37.0                41.809524   \n","\n","     NumCalls_rolling_std_7  NumEmails_lag_1  NumEmails_lag_7  \\\n","42                 6.880961             32.0             35.0   \n","43                 7.152422             27.0             25.0   \n","44                 7.189609             32.0             40.0   \n","45                 7.109685             32.0             41.0   \n","46                 7.082171             31.0             27.0   \n","..                      ...              ...              ...   \n","805                6.974785             39.0             29.0   \n","806                6.355350             34.0             33.0   \n","807                6.079630             16.0             29.0   \n","808                7.110689             39.0             36.0   \n","809                7.040022             30.0             35.0   \n","\n","     NumEmails_rolling_mean_7  NumEmails_rolling_std_7  \n","42                  30.857143                 4.508722  \n","43                  31.142857                 4.304483  \n","44                  30.857143                 3.863751  \n","45                  30.380952                 3.089922  \n","46                  30.095238                 3.645611  \n","..                        ...                      ...  \n","805                 31.095238                 5.476356  \n","806                 30.952381                 5.463297  \n","807                 31.095238                 5.448897  \n","808                 31.000000                 5.375872  \n","809                 31.333333                 5.833810  \n","\n","[768 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-1f1651f1-4653-4876-b11f-060d71229239\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DayOfWeek</th>\n","      <th>IsWeekend</th>\n","      <th>Month</th>\n","      <th>day_of_year</th>\n","      <th>week_of_year</th>\n","      <th>quarter</th>\n","      <th>PartOfDay_afternoon</th>\n","      <th>PartOfDay_morning</th>\n","      <th>PartOfDay_noon</th>\n","      <th>DayOfWeek_sin</th>\n","      <th>DayOfWeek_cos</th>\n","      <th>Month_sin</th>\n","      <th>Month_cos</th>\n","      <th>day_of_year_sin</th>\n","      <th>day_of_year_cos</th>\n","      <th>week_of_year_sin</th>\n","      <th>week_of_year_cos</th>\n","      <th>quarter_sin</th>\n","      <th>quarter_cos</th>\n","      <th>NumCalls_lag_1</th>\n","      <th>NumCalls_lag_7</th>\n","      <th>NumCalls_rolling_mean_7</th>\n","      <th>NumCalls_rolling_std_7</th>\n","      <th>NumEmails_lag_1</th>\n","      <th>NumEmails_lag_7</th>\n","      <th>NumEmails_rolling_mean_7</th>\n","      <th>NumEmails_rolling_std_7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.5</td>\n","      <td>8.660254e-01</td>\n","      <td>0.254671</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.0</td>\n","      <td>6.123234e-17</td>\n","      <td>33.0</td>\n","      <td>42.0</td>\n","      <td>38.952381</td>\n","      <td>6.880961</td>\n","      <td>32.0</td>\n","      <td>35.0</td>\n","      <td>30.857143</td>\n","      <td>4.508722</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.5</td>\n","      <td>8.660254e-01</td>\n","      <td>0.254671</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.0</td>\n","      <td>6.123234e-17</td>\n","      <td>47.0</td>\n","      <td>38.0</td>\n","      <td>38.571429</td>\n","      <td>7.152422</td>\n","      <td>27.0</td>\n","      <td>25.0</td>\n","      <td>31.142857</td>\n","      <td>4.304483</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.5</td>\n","      <td>8.660254e-01</td>\n","      <td>0.254671</td>\n","      <td>0.967028</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.0</td>\n","      <td>6.123234e-17</td>\n","      <td>42.0</td>\n","      <td>36.0</td>\n","      <td>38.904762</td>\n","      <td>7.189609</td>\n","      <td>32.0</td>\n","      <td>40.0</td>\n","      <td>30.857143</td>\n","      <td>3.863751</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.623490</td>\n","      <td>0.5</td>\n","      <td>8.660254e-01</td>\n","      <td>0.271234</td>\n","      <td>0.962513</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.0</td>\n","      <td>6.123234e-17</td>\n","      <td>37.0</td>\n","      <td>31.0</td>\n","      <td>39.619048</td>\n","      <td>7.109685</td>\n","      <td>32.0</td>\n","      <td>41.0</td>\n","      <td>30.380952</td>\n","      <td>3.089922</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.781831</td>\n","      <td>0.623490</td>\n","      <td>0.5</td>\n","      <td>8.660254e-01</td>\n","      <td>0.271234</td>\n","      <td>0.962513</td>\n","      <td>0.348202</td>\n","      <td>0.93742</td>\n","      <td>1.0</td>\n","      <td>6.123234e-17</td>\n","      <td>30.0</td>\n","      <td>44.0</td>\n","      <td>39.571429</td>\n","      <td>7.082171</td>\n","      <td>31.0</td>\n","      <td>27.0</td>\n","      <td>30.095238</td>\n","      <td>3.645611</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>805</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>269</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.974928</td>\n","      <td>-0.222521</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>-0.995546</td>\n","      <td>-0.094279</td>\n","      <td>-0.99605</td>\n","      <td>-0.088796</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>55.0</td>\n","      <td>36.0</td>\n","      <td>38.952381</td>\n","      <td>6.974785</td>\n","      <td>39.0</td>\n","      <td>29.0</td>\n","      <td>31.095238</td>\n","      <td>5.476356</td>\n","    </tr>\n","    <tr>\n","      <th>806</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>269</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.974928</td>\n","      <td>-0.222521</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>-0.995546</td>\n","      <td>-0.094279</td>\n","      <td>-0.99605</td>\n","      <td>-0.088796</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>42.0</td>\n","      <td>26.0</td>\n","      <td>39.761905</td>\n","      <td>6.355350</td>\n","      <td>34.0</td>\n","      <td>33.0</td>\n","      <td>30.952381</td>\n","      <td>5.463297</td>\n","    </tr>\n","    <tr>\n","      <th>807</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>270</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0.433884</td>\n","      <td>-0.900969</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>-0.997018</td>\n","      <td>-0.077175</td>\n","      <td>-0.99605</td>\n","      <td>-0.088796</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>34.0</td>\n","      <td>30.0</td>\n","      <td>40.523810</td>\n","      <td>6.079630</td>\n","      <td>16.0</td>\n","      <td>29.0</td>\n","      <td>31.095238</td>\n","      <td>5.448897</td>\n","    </tr>\n","    <tr>\n","      <th>808</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>270</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>0.433884</td>\n","      <td>-0.900969</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>-0.997018</td>\n","      <td>-0.077175</td>\n","      <td>-0.99605</td>\n","      <td>-0.088796</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>39.0</td>\n","      <td>37.0</td>\n","      <td>41.523810</td>\n","      <td>7.110689</td>\n","      <td>39.0</td>\n","      <td>36.0</td>\n","      <td>31.000000</td>\n","      <td>5.375872</td>\n","    </tr>\n","    <tr>\n","      <th>809</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>270</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0.433884</td>\n","      <td>-0.900969</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>-0.997018</td>\n","      <td>-0.077175</td>\n","      <td>-0.99605</td>\n","      <td>-0.088796</td>\n","      <td>-1.0</td>\n","      <td>-1.836970e-16</td>\n","      <td>43.0</td>\n","      <td>37.0</td>\n","      <td>41.809524</td>\n","      <td>7.040022</td>\n","      <td>30.0</td>\n","      <td>35.0</td>\n","      <td>31.333333</td>\n","      <td>5.833810</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows × 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f1651f1-4653-4876-b11f-060d71229239')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f1651f1-4653-4876-b11f-060d71229239 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f1651f1-4653-4876-b11f-060d71229239');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-006fe77d-f7ec-4dbd-9244-6c127cdfea73\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-006fe77d-f7ec-4dbd-9244-6c127cdfea73')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-006fe77d-f7ec-4dbd-9244-6c127cdfea73 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_72e46857-37e5-4f0b-95a5-eb91f9b3cf48\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_72e46857-37e5-4f0b-95a5-eb91f9b3cf48 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"hAye4NUb6Ae6","executionInfo":{"status":"ok","timestamp":1751053250148,"user_tz":-300,"elapsed":83,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"0d3c5655-08d3-4354-9df4-0468c8a52e70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     NumEmails  NumCalls\n","42          32        37\n","43          31        30\n","44          34        43\n","45          31        46\n","46          21        43\n","..         ...       ...\n","805         39        39\n","806         30        43\n","807         32        46\n","808         34        58\n","809         42        43\n","\n","[768 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1d00a7b0-9017-4961-a34a-97a0cbb0d040\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NumEmails</th>\n","      <th>NumCalls</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>32</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>31</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>34</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>31</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>21</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>805</th>\n","      <td>39</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>806</th>\n","      <td>30</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>807</th>\n","      <td>32</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>808</th>\n","      <td>34</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>809</th>\n","      <td>42</td>\n","      <td>43</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d00a7b0-9017-4961-a34a-97a0cbb0d040')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1d00a7b0-9017-4961-a34a-97a0cbb0d040 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1d00a7b0-9017-4961-a34a-97a0cbb0d040');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3cf428a4-aada-4827-ad26-c25847173550\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3cf428a4-aada-4827-ad26-c25847173550')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3cf428a4-aada-4827-ad26-c25847173550 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_f946531c-8153-44ad-ab2b-b3aff63736a5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('y_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f946531c-8153-44ad-ab2b-b3aff63736a5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('y_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"y_train","summary":"{\n  \"name\": \"y_train\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"NumEmails\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 13,\n        \"max\": 47,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          25,\n          29,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumCalls\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 22,\n        \"max\": 60,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          53,\n          42,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["# gradio_app.py\n","import gradio as gr\n","import requests\n","\n","API_URL = \"https://myhuggingface333-email-and-calls-forecasting.hf.space/predict\"\n","\n","# Define the input interface (27 inputs)\n","def forecast(*features):\n","    try:\n","        response = requests.post(API_URL, json={\"features\": list(features)})\n","        if response.status_code == 200:\n","            result = response.json()\n","            return f\"Predicted Emails: {result['NumEmails']}\\nPredicted Calls: {result['NumCalls']}\"\n","        else:\n","            return f\"Error {response.status_code}: {response.text}\"\n","    except Exception as e:\n","        return str(e)\n","\n","# Labels for each feature (adjust as needed for user-friendliness)\n","feature_labels = [\n","    \"DayOfWeek\", \"IsWeekend\", \"Month\", \"day_of_year\", \"week_of_year\", \"quarter\",\n","    \"PartOfDay_afternoon\", \"PartOfDay_morning\", \"PartOfDay_noon\",\n","    \"DayOfWeek_sin\", \"DayOfWeek_cos\", \"Month_sin\", \"Month_cos\",\n","    \"day_of_year_sin\", \"day_of_year_cos\", \"week_of_year_sin\", \"week_of_year_cos\",\n","    \"quarter_sin\", \"quarter_cos\",\n","    \"NumCalls_lag_1\", \"NumCalls_lag_7\", \"NumCalls_rolling_mean_7\", \"NumCalls_rolling_std_7\",\n","    \"NumEmails_lag_1\", \"NumEmails_lag_7\", \"NumEmails_rolling_mean_7\", \"NumEmails_rolling_std_7\"\n","]\n","\n","inputs = [gr.Number(label=label) for label in feature_labels]\n","\n","iface = gr.Interface(\n","    fn=forecast,\n","    inputs=inputs,\n","    outputs=\"text\",\n","    title=\"📬📞 Email & Calls Forecasting\",\n","    description=\"Enter 27 features to forecast the expected number of Emails and Calls.\"\n",")\n","\n","if __name__ == \"__main__\":\n","    iface.launch()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"RhTogs762Iri","executionInfo":{"status":"ok","timestamp":1751102481945,"user_tz":-300,"elapsed":5921,"user":{"displayName":"Ahmad Hassan","userId":"15315243366983422703"}},"outputId":"b46f1e83-6ac7-4feb-a249-8e804ed9d28a"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["It looks like you are running Gradio on a hosted a Jupyter notebook. For the Gradio app to work, sharing must be enabled. Automatically setting `share=True` (you can turn this off by setting `share=False` in `launch()` explicitly).\n","\n","Colab notebook detected. To show errors in colab notebook, set debug=True in launch()\n","* Running on public URL: https://2dc59958b1b958daad.gradio.live\n","\n","This share link expires in 1 week. For free permanent hosting and GPU upgrades, run `gradio deploy` from the terminal in the working directory to deploy to Hugging Face Spaces (https://huggingface.co/spaces)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div><iframe src=\"https://2dc59958b1b958daad.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"]},"metadata":{}}]},{"cell_type":"markdown","source":["#5.Initalizing and applying ML models on preapred data in loop using CV technique"],"metadata":{"id":"2E2eJVuOek1p"}},{"cell_type":"code","source":["# Define base models\n","base_models = {\n","    \"Linear Regression\": LinearRegression(),\n","    \"KNN\": KNeighborsRegressor(n_neighbors=2),\n","    \"Decision Tree\": DecisionTreeRegressor(),\n","    \"Random Forest\": RandomForestRegressor(),\n","    \"SVR\": SVR(),\n","    \"AdaBoost\": AdaBoostRegressor(),\n","    \"Gradient Boosting\": GradientBoostingRegressor(),\n","    \"SGD\": SGDRegressor(),\n","    \"Bagging\": BaggingRegressor(),\n","    \"CatBoost\": CatBoostRegressor(verbose=0),\n","    \"LightGBM\": LGBMRegressor(silent=True, verbose=-1)\n","}"],"metadata":{"id":"oCxRqU-iWKd0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Wrap models that don’t support multi-output\n","models = {}\n","for name, model in base_models.items():\n","    if name in [\"Random Forest\", \"Linear Regression\"]:\n","        models[name] = model\n","    else:\n","        models[name] = MultiOutputRegressor(model)"],"metadata":{"id":"7sezVMe-eu-N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Store results\n","mae_dict = {}\n","rmse_dict = {}\n","cv_rmse_dict = {}\n","predictions = {}"],"metadata":{"id":"5PBSj1eme-xF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# Train & evaluate\n","for model_name, model in models.items():\n","    model.fit(X_train_scaled, y_train)\n","    y_pred = model.predict(X_test_scaled)\n","    predictions[model_name] = y_pred\n","\n","    mae_vals, rmse_vals, cv_vals = [], [], []\n","\n","    for i, target in enumerate(['NumEmails', 'NumCalls']):\n","        mae = mean_absolute_error(y_test.iloc[:, i], y_pred[:, i])\n","        rmse = np.sqrt(mean_squared_error(y_test.iloc[:, i], y_pred[:, i]))\n","        mae_vals.append(mae)\n","        rmse_vals.append(rmse)\n","\n","        try:\n","            if isinstance(model, MultiOutputRegressor):\n","                cv_score = cross_val_score(\n","                    model.estimator, X_train_scaled, y_train.iloc[:, i],\n","                    cv=5, scoring='neg_mean_squared_error'\n","                )\n","            else:\n","                cv_score = cross_val_score(\n","                    model, X_train_scaled, y_train.iloc[:, i],\n","                    cv=5, scoring='neg_mean_squared_error'\n","                )\n","            cv_rmse = np.mean(np.sqrt(-cv_score))\n","        except Exception:\n","            cv_rmse = np.nan\n","        cv_vals.append(cv_rmse)\n","\n","    mae_dict[model_name] = dict(zip(['NumEmails', 'NumCalls'], mae_vals))\n","    rmse_dict[model_name] = dict(zip(['NumEmails', 'NumCalls'], rmse_vals))\n","    cv_rmse_dict[model_name] = dict(zip(['NumEmails', 'NumCalls'], cv_vals))"],"metadata":{"id":"cjM_KciHe1VG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print model evaluation summary\n","print(\"Model Evaluation Summary:\\n\")\n","for model_name in models.keys():\n","    print(f\"{model_name}\")\n","    print(f\"   MAE      → NumEmails: {mae_dict[model_name]['NumEmails']:.2f}, NumCalls: {mae_dict[model_name]['NumCalls']:.2f}\")\n","    print(f\"   RMSE     → NumEmails: {rmse_dict[model_name]['NumEmails']:.2f}, NumCalls: {rmse_dict[model_name]['NumCalls']:.2f}\")\n","    print(f\"   CV RMSE  → NumEmails: {cv_rmse_dict[model_name]['NumEmails']:.2f}, NumCalls: {cv_rmse_dict[model_name]['NumCalls']:.2f}\")\n","    print(\"-\" * 60)"],"metadata":{"id":"iwfLYIocfEBE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##5.1.Model performance evaluation"],"metadata":{"id":"6xquC3oXfJq7"}},{"cell_type":"code","source":["# Convert to DataFrames\n","mae_df = pd.DataFrame(mae_dict).T.reset_index().melt(id_vars='index', var_name='Target', value_name='MAE')\n","rmse_df = pd.DataFrame(rmse_dict).T.reset_index().melt(id_vars='index', var_name='Target', value_name='RMSE')\n","cv_df = pd.DataFrame(cv_rmse_dict).T.reset_index().melt(id_vars='index', var_name='Target', value_name='CV_RMSE')\n","\n","# Rename index column to 'Model'\n","mae_df.rename(columns={'index': 'Model'}, inplace=True)\n","rmse_df.rename(columns={'index': 'Model'}, inplace=True)\n","cv_df.rename(columns={'index': 'Model'}, inplace=True)\n","\n","# Plot MAE\n","plt.figure(figsize=(14, 6))\n","sns.barplot(data=mae_df, x='Model', y='MAE', hue='Target')\n","plt.title('Mean Absolute Error (MAE) per Model')\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()\n","\n","# Plot RMSE\n","plt.figure(figsize=(14, 6))\n","sns.barplot(data=rmse_df, x='Model', y='RMSE', hue='Target')\n","plt.title('Root Mean Squared Error (RMSE) per Model')\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()\n","\n","# Plot CV RMSE\n","plt.figure(figsize=(14, 6))\n","sns.barplot(data=cv_df, x='Model', y='CV_RMSE', hue='Target')\n","plt.title('Cross-Validated RMSE per Model')\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"M1QFHIL4dEpt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##5.2.Actual vs Predicted Plot for each ML Model"],"metadata":{"id":"ONVlo32cfNdv"}},{"cell_type":"code","source":["# Actual vs Predicted Plot\n","for model_name, y_pred in predictions.items():\n","    if 'date' not in test_data.columns:\n","        test_data['date'] = test_data['Date'].dt.date\n","\n","    actual_df = y_test.copy()\n","    actual_df['date'] = test_data['date']\n","    predicted_df = pd.DataFrame(y_pred, columns=['Pred_NumEmails', 'Pred_NumCalls'])\n","    predicted_df['date'] = test_data.reset_index(drop=True)['Date'].dt.date\n","\n","    daily_actual = actual_df.groupby('date')[['NumEmails', 'NumCalls']].mean()\n","    daily_predicted = predicted_df.groupby('date')[['Pred_NumEmails', 'Pred_NumCalls']].mean()\n","\n","    for target in ['NumEmails', 'NumCalls']:\n","        plt.figure(figsize=(12, 5))\n","        plt.plot(daily_actual.index, daily_actual[target], label=f'Actual {target}', color='blue', linewidth=2)\n","        plt.plot(daily_predicted.index, daily_predicted[f'Pred_{target}'], label=f'Predicted {target} ({model_name})', color='red', linestyle='--', linewidth=2)\n","        plt.title(f\"{model_name}: Daily Actual vs Predicted - {target}\")\n","        plt.xlabel('Date')\n","        plt.ylabel(target)\n","        plt.xticks(rotation=45)\n","        plt.legend()\n","        plt.tight_layout()\n","        plt.show()"],"metadata":{"id":"3xW4DUcvWxQW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","---\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"oS-RJETjiWZG"}},{"cell_type":"markdown","source":["\n","\n","### Imagine This:\n","\n","You work in a company that receives emails and calls from customers every day. You want to **predict**:\n","\n","*  How many **emails** you'll get tomorrow\n","*  How many **calls** you'll receive tomorrow\n","  based on past data (day, time, department, etc.).\n","\n","You try different machine learning models (like Linear Regression, Random Forest, etc.) to **make these predictions**, and you measure how well they perform.\n","\n","---\n","\n","###  What the Numbers Mean:\n","\n","You check **how far off** the model is from the actual numbers using 3 metrics:\n","\n","#### 1. **MAE – Mean Absolute Error**\n","\n","* Think of this like **“average mistake”**.\n","* If **MAE = 2.5** for calls, that means:\n","\n","  > \"On average, my model is off by **2.5 calls per day**.\"\n","\n","So:\n","\n","* **Lower = better**\n","* **MAE < 5** when average is \\~42 means **very accurate**\n","\n","#### 2. **RMSE – Root Mean Squared Error**\n","\n","* Like MAE, but **penalizes big mistakes more**.\n","* If RMSE = 3.1, it means:\n","\n","  > \"Most of my predictions are off by around **3 units**, but big errors matter more.\"\n","\n","Think of it as a **harsher judge** than MAE.\n","\n","#### 3. **CV RMSE – Cross-Validated RMSE**\n","\n","* This checks:\n","\n","  > “Can the model predict well **even on new unseen data**?”\n","* If CV RMSE = 2.7 → even on new data, the model is still **very accurate**.\n","\n","---\n","\n","### Now the Story:\n","\n","You gave your models the challenge:\n","**\"Predict how many emails and calls we'll get tomorrow!\"**\n","\n","* **Linear Regression** said:\n","\n","  > \"I’ll be off by about **1.4 emails and 2.5 calls** most of the time.\"\n","\n","  You check and go: \"Wow, that’s pretty good — we get \\~26 emails and \\~42 calls daily, so being wrong by only 1–2 is awesome.\"\n","\n","* **Random Forest** says:\n","\n","  > \"I’ll make mistakes too, but usually within **2–4** range.\"\n","\n","Still very accurate!\n","\n","* **CatBoost and KNN** say:\n","\n","  > \"I might be off by **4–5 sometimes**.\"\n","\n","Still not bad — but not as sharp as the top performers.\n","\n","---\n","\n","### What We can Conclude:\n","\n","* The models did **a really good job** overall.\n","* **Linear Regression and Random Forest** are your best friends here.\n","* They **predict customer volume nearly spot on**, so your team can plan staffing confidently.\n","* You’re **saving time, resources, and stress** by knowing in advance how busy your team will be.\n"],"metadata":{"id":"3pXcL4uNh15H"}}]}